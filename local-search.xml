<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>校外访问知网指南</title>
    <link href="/2021/12/28/%E6%A0%A1%E5%A4%96%E8%AE%BF%E9%97%AE%E7%9F%A5%E7%BD%91%E6%8C%87%E5%8D%97/"/>
    <url>/2021/12/28/%E6%A0%A1%E5%A4%96%E8%AE%BF%E9%97%AE%E7%9F%A5%E7%BD%91%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="校外访问知网指南"><a href="#校外访问知网指南" class="headerlink" title="校外访问知网指南"></a>校外访问知网指南</h1><blockquote><p>由于不可抗力因素，<code>idp.sdyu.edu.cn</code>已经无法正常访问。<br>现提供另一种方法校外访问知网</p></blockquote><h2 id="https-webvpn-sdyu-edu-cn"><a href="#https-webvpn-sdyu-edu-cn" class="headerlink" title="https://webvpn.sdyu.edu.cn/"></a><a href="https://webvpn.sdyu.edu.cn/">https://webvpn.sdyu.edu.cn/</a></h2><ol><li>通过<a href="https://webvpn.sdyu.edu.cn/">https://webvpn.sdyu.edu.cn</a> 访问<code>webvpn</code><b>（账号密码同融合门户）</b><br><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%85%B6%E4%BB%96/%E6%A0%A1%E5%A4%96%E8%AE%BF%E9%97%AE%E7%9F%A5%E7%BD%91%E6%8C%87%E5%8D%97.md/185501809229695.png"></li><li>登录完成后进入资源中心<br><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%85%B6%E4%BB%96/%E6%A0%A1%E5%A4%96%E8%AE%BF%E9%97%AE%E7%9F%A5%E7%BD%91%E6%8C%87%E5%8D%97.md/5122009217562.png"></li><li>在<code>已购数据库</code>中可找到<code>中国知网</code>（还有其他数据也可免费使用）<br><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%85%B6%E4%BB%96/%E6%A0%A1%E5%A4%96%E8%AE%BF%E9%97%AE%E7%9F%A5%E7%BD%91%E6%8C%87%E5%8D%97.md/297202109237728.png"></li><li>打开后等一会看到<code>标注区域</code>显示<code>山东青年政治学院</code>即可正常使用<br><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%85%B6%E4%BB%96/%E6%A0%A1%E5%A4%96%E8%AE%BF%E9%97%AE%E7%9F%A5%E7%BD%91%E6%8C%87%E5%8D%97.md/541032409230397.png"></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>x6自定义样式</title>
    <link href="/2021/12/16/x6%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%B7%E5%BC%8F/"/>
    <url>/2021/12/16/x6%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%B7%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="x6自定义节点样式"><a href="#x6自定义节点样式" class="headerlink" title="x6自定义节点样式"></a>x6自定义节点样式</h1><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%89%8D%E7%AB%AF/x6%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%B7%E5%BC%8F.md/334315314240574.png"></p><h2 id="自定义节点"><a href="#自定义节点" class="headerlink" title="自定义节点"></a>自定义节点</h2><ul><li>官方的示例如下<a href="https://antv-x6.gitee.io/zh/examples/showcase/practices#org">自定义节点示例</a>（由于自动布局示例的要素过多，暂以倒数第二个示例来看）</li><li>要素：<ul><li>markup:<a href="https://antv-x6.gitee.io/zh/docs/tutorial/basic/cell/#markup">markup官方文档</a><figure class="highlight plaintext"><figcaption><span>指定了渲染节点/边时使用的 ```SVG/HTML``` 片段，使用 ```JSON ```格式描述。例如 ```Shape.Rect``` 节点的```markup``` 定义如下。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs markup```">        - tagname:<br>        通过```tagname```指定需要创建的```SVG/HTML```元素<br>        - selector:<br>        ```SVG/HTML```元素的唯一标识，可以在```attrs```中通过```selector:&#x27;name&#x27;```的```name```属性修改样式<br>        - className:<br>        该```SVG/HTML```元素的```css```样式名<br>        - style：<br>        该```SVG/HTML```元素的内联样式<br>    - attrs:<br>        定制节点样式的选项,是一个复杂的对象```key:&#123;value...&#125;```,```key```是节点中的```selector```值，```value```是该元素的```SVG```属性值<br><br><br>### 注册自定义节点样式<br>```javascript<br>//&#x27;diy-shape&#x27;自定义节点样式名<br>//&#123;&#125; 自定义节点构成，包含markup,attrs等属性<br>//true 允许覆盖重写样式，方便在节点中添加修改样式<br>Graph.registerNode(&#x27;diy-shape&#x27;,&#123;<br>    width:200,    //节点宽度200px<br>    height:60,    //节点高度60px<br>    markup:[<br>        &#123;<br>            tagName:&#x27;rect&#x27;,    //指定元素为rect形状<br>            selector:&#x27;body&#x27;,    //元素命名为body<br>        &#125;，<br>        &#123;<br>            tagName:&#x27;image&#x27;,    //指定元素为image<br>            selector:&#x27;avatar&#x27;    //元素命名为avatar<br>        &#125;，<br>        &#123;<br>            tagName: &#x27;text&#x27;,    <br>            selector: &#x27;rank&#x27;,<br>        &#125;,<br>        &#123;<br>            tagName: &#x27;text&#x27;,<br>            selector: &#x27;name&#x27;,<br>        &#125;,<br>    ],<br>    //自定义样式<br>    attrs:&#123;    <br>        //对名为body的元素样式修改<br>        body: &#123;<br>            refWidth: &#x27;100%&#x27;,<br>            refHeight: &#x27;100%&#x27;,<br>            fill: &#x27;#ffffff&#x27;,<br>            stroke: &#x27;#000000&#x27;,<br>            rx: 10,<br>            ry: 10,<br>            PointerEvent: &#x27;visiblePainted&#x27;,<br>        &#125;,<br>        avatar: &#123;<br>            width: 48,<br>            height: 48,<br>            refX: 8,<br>            refY: 6,<br>        &#125;,<br>        rank: &#123;<br>            refX: 0.9,<br>            refY: 0.2,<br>            fontFamily: &#x27;Courier New&#x27;,<br>            fontSize: 14,<br>            textAnchor: &#x27;end&#x27;,<br>        &#125;,<br>        name: &#123;<br>            refX: 0.9,<br>            refY: 0.6,<br>            fontFamily: &#x27;Courier New&#x27;,<br>            fontSize: 14,<br>            fontWeight: &#x27;800&#x27;,<br>            textAnchor: &#x27;end&#x27;,<br>        &#125;,<br>    &#125;<br>&#125;,true)<br></code></pre></td></tr></table></figure><h3 id="添加自定义节点"><a href="#添加自定义节点" class="headerlink" title="添加自定义节点"></a>添加自定义节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//注册节点到侧边栏</span><br><span class="hljs-attr">id</span>:<span class="hljs-string">&#x27;diy-shape1&#x27;</span>,<br><span class="hljs-attr">shape</span>:<span class="hljs-string">&#x27;diy-shape&#x27;</span>,    <span class="hljs-comment">//通过shape选项使用前面自定义的节点</span><br><span class="hljs-attr">attrs</span>: &#123;    <span class="hljs-comment">//重新定义了许多样式。如果在注册形状时，第三个参数不填或为False，则会报错</span><br>    <span class="hljs-attr">body</span>: &#123;<br>        <span class="hljs-attr">fill</span>: <span class="hljs-string">&#x27;#7c68fd&#x27;</span>,<br>        <span class="hljs-attr">stroke</span>: <span class="hljs-string">&#x27;none&#x27;</span>,<br>    &#125;,<br>    <span class="hljs-attr">avatar</span>: &#123;<br>        <span class="hljs-attr">opacity</span>: <span class="hljs-number">0.7</span>,<br>        <span class="hljs-string">&#x27;xlink:href&#x27;</span>:<span class="hljs-string">&#x27;自定义图片链接或base64&#x27;</span>,    <span class="hljs-comment">//使用外链或base64放图片，</span><br>        <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;50px&#x27;</span>,<br>        <span class="hljs-attr">height</span>: <span class="hljs-string">&#x27;50px&#x27;</span>,<br>    &#125;,<br>    <span class="hljs-attr">rank</span>: &#123;<br>        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Step 0&#x27;</span>,<br>        <span class="hljs-attr">fill</span>: <span class="hljs-string">&#x27;#f1f1f1&#x27;</span>,<br>        <span class="hljs-attr">wordSpacing</span>: <span class="hljs-string">&#x27;-5px&#x27;</span>,<br>        <span class="hljs-attr">letterSpacing</span>: <span class="hljs-number">0</span>,<br>    &#125;,<br>    <span class="hljs-attr">name</span>: &#123;<br>        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;完成&#x27;</span>,<br>        <span class="hljs-attr">fill</span>: <span class="hljs-string">&#x27;#f1f1f1&#x27;</span>,<br>        <span class="hljs-attr">fontSize</span>: <span class="hljs-number">13</span>,<br>        <span class="hljs-attr">fontFamily</span>: <span class="hljs-string">&#x27;Arial&#x27;</span>,<br>        <span class="hljs-attr">letterSpacing</span>: <span class="hljs-number">0</span>,<br>    &#125;,<br>    <span class="hljs-comment">//添加之前定义的连接桩，不添加不能连其他节点</span><br>    <span class="hljs-attr">ports</span>: &#123; ...ports &#125;, <span class="hljs-comment">//连接桩</span><br><br>&#125;,<br></code></pre></td></tr></table></figure><h2 id="自定义连线"><a href="#自定义连线" class="headerlink" title="自定义连线"></a>自定义连线</h2><h3 id="注册连线样式"><a href="#注册连线样式" class="headerlink" title="注册连线样式"></a>注册连线样式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Graph.registerEdge(<br>  <span class="hljs-string">&#x27;diy-edge&#x27;</span>,<br>  &#123;<br>    <span class="hljs-attr">zIndex</span>: -<span class="hljs-number">1</span>,<br>    <span class="hljs-attr">attrs</span>: &#123;<br>      <span class="hljs-attr">line</span>: &#123;<br>        <span class="hljs-attr">fill</span>: <span class="hljs-string">&#x27;none&#x27;</span>,<br>        <span class="hljs-attr">strokeLinejoin</span>: <span class="hljs-string">&#x27;round&#x27;</span>,<br>        <span class="hljs-attr">strokeWidth</span>: <span class="hljs-string">&#x27;2&#x27;</span>,<br>        <span class="hljs-attr">stroke</span>: <span class="hljs-string">&#x27;#4b4a67&#x27;</span>,<br>        <span class="hljs-attr">sourceMarker</span>: <span class="hljs-literal">null</span>,<br>        <span class="hljs-attr">targetMarker</span>: <span class="hljs-literal">null</span>,<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>  <span class="hljs-literal">true</span><br>);<br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="使用自定义连线"><a href="#使用自定义连线" class="headerlink" title="使用自定义连线"></a>使用自定义连线</h3><h4 id="在data的edges中声明shape"><a href="#在data的edges中声明shape" class="headerlink" title="在data的edges中声明shape"></a>在data的edges中声明shape</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<br>    <span class="hljs-attr">source</span>: <span class="hljs-string">&#x27;Step1-Vasp晶格常数-GeoOpt&#x27;</span>, <span class="hljs-comment">// String，必须，起始节点 id</span><br>    <span class="hljs-attr">target</span>: <span class="hljs-string">&#x27;Step2-结果收敛判断脚本&#x27;</span>, <span class="hljs-comment">// String，必须，目标节点 id</span><br>    <span class="hljs-attr">fileDependencies</span>: [<br>    &#123;<br>        <span class="hljs-attr">targetAppFile</span>: <span class="hljs-string">&#x27;08d88153-6397-4136-8c09-7052f740dc87&#x27;</span>,<br>        <span class="hljs-attr">dependencyAppFile</span>: <span class="hljs-string">&#x27;08d85499-af1c-428c-867c-b78a8fde4597&#x27;</span>,<br>        <span class="hljs-attr">dependencyType</span>: <span class="hljs-string">&#x27;appFile&#x27;</span>,<br>    &#125;,<br>    &#123;<br>        <span class="hljs-attr">targetAppFile</span>: <span class="hljs-string">&#x27;08d88153-76de-435d-8c4d-477393c28d95&#x27;</span>,<br>        <span class="hljs-attr">dependencyAppFile</span>: <span class="hljs-string">&#x27;08d85499-d4aa-4580-880e-d1dfab86e2cd&#x27;</span>,<br>        <span class="hljs-attr">dependencyType</span>: <span class="hljs-string">&#x27;appFile&#x27;</span>,<br>    &#125;,<br>    ],<br>    <span class="hljs-comment">// attrs: edgeAttrs,</span><br>    <span class="hljs-attr">shape</span>: <span class="hljs-string">&#x27;diy-edge&#x27;</span>,<br>    <span class="hljs-attr">zIndex</span>: <span class="hljs-number">1</span>,<br>&#125;,<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Django模板开发&amp;重写&amp;使用bootstrap</title>
    <link href="/2021/12/15/django%E6%A8%A1%E6%9D%BF%E5%BC%80%E5%8F%91&amp;%E9%87%8D%E5%86%99&amp;%E4%BD%BF%E7%94%A8bootstrap/"/>
    <url>/2021/12/15/django%E6%A8%A1%E6%9D%BF%E5%BC%80%E5%8F%91&amp;%E9%87%8D%E5%86%99&amp;%E4%BD%BF%E7%94%A8bootstrap/</url>
    
    <content type="html"><![CDATA[<h1 id="Django模板开发-amp-重写-amp-使用bootstrap"><a href="#Django模板开发-amp-重写-amp-使用bootstrap" class="headerlink" title="Django模板开发&amp;重写&amp;使用bootstrap"></a>Django模板开发&amp;重写&amp;使用bootstrap</h1><blockquote><p>本文使用Django自带模板系统</p></blockquote><h2 id="base-html"><a href="#base-html" class="headerlink" title="base.html"></a>base.html</h2><p>Django的模板系统离不开<code>base.html</code>这个模板文件，它相当于一个大框架，通过各种<code>block</code>块进行拼接，这部分与<code>vue</code>的<code>模板</code>相似。</p><p>你可以在<code>base.html</code>中定义所有页面都不变的部分，比如： <code>&#123;% block header %&#125;</code>定义页面导航栏等头部部分、<code>&#123;% block footer %&#125;</code>定义页面底部版权内容、最重要的是<code>&#123;% block content %&#125;</code>定义页面可变的内容部分</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>变量都是双大括号<code>&#123;&#123; name &#125;&#125;</code></p><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><p>Django模板的语法不仅限于定义内容块，还可以进行循环、判断</p><blockquote><p>Django模板的标签都是块标签，也就意味着他们需要成对出现 以<code>end</code>结束</p></blockquote><h4 id="block"><a href="#block" class="headerlink" title="block"></a>block</h4><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">block</span></span> header %&#125;</span><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span></span><br><span class="xml">        This is header block!</span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endblock</span></span> %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml"># content块不需要填写内容，会根据view返回的模板自动填充进去</span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">block</span></span> content %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endblock</span></span> %&#125;</span><br></code></pre></td></tr></table></figure><h4 id="for"><a href="#for" class="headerlink" title="for"></a>for</h4><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">for</span></span> i <span class="hljs-keyword">in</span> array%&#125;</span><span class="xml"></span><br><span class="xml">    </span><span class="hljs-template-variable">&#123;&#123; i &#125;&#125;</span><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endfor</span></span> %&#125;</span><br></code></pre></td></tr></table></figure><h4 id="if"><a href="#if" class="headerlink" title="if"></a>if</h4><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">if</span></span> a %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endif</span></span> %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">if</span></span> b == &#x27;str&#x27; %&#125;</span><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>当b=&#x27;str&#x27;时显示我<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">else</span></span> if b == &#x27;str1&#x27; %&#125;</span><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>当b=&#x27;str1&#x27;时显示我<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">else</span></span> %&#125;</span><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>当b!=&#x27;str&#x27;&amp;b!=&#x27;str1&#x27;时显示我<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endif</span></span> %&#125;</span><br></code></pre></td></tr></table></figure><h2 id="使用bootstrap"><a href="#使用bootstrap" class="headerlink" title="使用bootstrap"></a>使用bootstrap</h2><h3 id="1-安装bootstrap4"><a href="#1-安装bootstrap4" class="headerlink" title="1. 安装bootstrap4"></a>1. 安装bootstrap4</h3><p><code> pip install django-bootstrap4</code></p><h3 id="2-导入bootstrap"><a href="#2-导入bootstrap" class="headerlink" title="2. 导入bootstrap"></a>2. 导入bootstrap</h3><p>在Settings.py文件中安装导入<br><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/django/django%E6%A8%A1%E6%9D%BF%E5%BC%80%E5%8F%91&%E9%87%8D%E5%86%99&%E4%BD%BF%E7%94%A8bootstrap.md/76781116235300.png"> </p><h3 id="3-使用bootstrap"><a href="#3-使用bootstrap" class="headerlink" title="3. 使用bootstrap"></a>3. 使用bootstrap</h3><p>在需要使用bootstrap的模板文件中写明</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;% load bootstrap4 %&#125;<br>&#123;<span class="hljs-comment"># load CSS and JavaScript #&#125;</span><br>&#123;% bootstrap_css %&#125;<br>&#123;% bootstrap_javascript jquery=<span class="hljs-string">&#x27;full&#x27;</span> %&#125;<br>&#123;<span class="hljs-comment"># Display django.contrib.messages as                     Bootstrap alerts #&#125;</span><br>&#123;% bootstrap_messages %&#125;<br></code></pre></td></tr></table></figure><p>接下来就可以愉快的和平时一样写bootstrap的样式了<br><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/django/django%E6%A8%A1%E6%9D%BF%E5%BC%80%E5%8F%91&%E9%87%8D%E5%86%99&%E4%BD%BF%E7%94%A8bootstrap.md/14433516229972.png"></p><h4 id="bootstrap表单"><a href="#bootstrap表单" class="headerlink" title="bootstrap表单"></a>bootstrap表单</h4><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span></span><br><span class="xml">    </span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">csrf_token</span></span> %&#125;</span><span class="xml"></span><br><span class="xml">    </span><span class="hljs-template-tag">&#123;% <span class="hljs-name">bootstrap_form</span> form %&#125;</span><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;</span></span></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">trans</span></span> &#x27;登录&#x27; %&#125;</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>/&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;next&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;</span></span></span><span class="hljs-template-variable">&#123;&#123; next &#125;&#125;</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>/&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h2 id="重写第三方插件模板"><a href="#重写第三方插件模板" class="headerlink" title="重写第三方插件模板"></a>重写第三方插件模板</h2><p><a href="https://docs.djangoproject.com/zh-hans/3.2/howto/overriding-templates/">官方文档</a><br>一般采用第一种方式，即在工程目录下新建template文件夹</p><blockquote><p>Django在渲染时找template文件夹，会先找工程目录<code>DIRS</code>，再找<code>APPDIRS</code></p></blockquote><h3 id="案例：重写registration应用登录模板"><a href="#案例：重写registration应用登录模板" class="headerlink" title="案例：重写registration应用登录模板"></a>案例：重写registration应用登录模板</h3><p>registration应用目录如下</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">+<span class="hljs-params">---backends</span><br>|   +<span class="hljs-params">---admin_approval</span><br>+<span class="hljs-params">---locale</span><br><span class="hljs-string">......</span><br>|   \<span class="hljs-params">---zh_TW</span><br>|       \<span class="hljs-params">---LC_MESSAGES</span><br>+<span class="hljs-params">---management</span><br>|   +<span class="hljs-params">---commands</span><br>|   |   \<span class="hljs-params">---__pycache__</span><br>|   \<span class="hljs-params">---__pycache__</span><br>+<span class="hljs-params">---migrations</span><br>|   \<span class="hljs-params">---__pycache__</span><br>+<span class="hljs-params">---templates</span><br>|   \<span class="hljs-params">---registration</span><br>+<span class="hljs-params">---tests</span><br>|   \<span class="hljs-params">---__pycache__</span><br>\<span class="hljs-params">---__pycache__</span><br></code></pre></td></tr></table></figure><p>根据上面文件夹目录可得出结论，registration应用自带的模板在template/registration<br>我们可以在自己的template文件夹下建立registration，这时，我们写的同名模板就会替换自带模板</p><blockquote><p><strong>注意：</strong> 复写模板时，模板的父模板也需要一起复写</p></blockquote><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/django/django%E6%A8%A1%E6%9D%BF%E5%BC%80%E5%8F%91&%E9%87%8D%E5%86%99&%E4%BD%BF%E7%94%A8bootstrap.md/339044816218592.png"><br>这种情况下需要同时建立registration_base.html文件，内容如果没有变化可以从自带模板中复制 <code>然后你会发现，这个文件中就一行&#123;% extends "base.html" %&#125;</code><br>login.html</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">extends</span></span> &quot;registration/registration_base.html&quot; %&#125;</span><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">load</span></span> bootstrap4 %&#125;</span><span class="xml"></span><br><span class="xml"></span><span class="hljs-comment">&#123;# load CSS and JavaScript #&#125;</span><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">bootstrap_css</span> %&#125;</span><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">bootstrap_javascript</span> jquery=&#x27;full&#x27; %&#125;</span><span class="xml"></span><br><span class="xml"></span><span class="hljs-comment">&#123;# Display django.contrib.messages as Bootstrap alerts #&#125;</span><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">bootstrap_messages</span> %&#125;</span><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">load</span></span> i18n %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">block</span></span> title %&#125;</span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">trans</span></span> &quot;Log <span class="hljs-keyword">in</span>&quot; %&#125;</span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endblock</span></span> %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">block</span></span> content %&#125;</span><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;login_frame&quot;</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;login_title&quot;</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span></span><br><span class="xml">                </span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">csrf_token</span></span> %&#125;</span><span class="xml"></span><br><span class="xml">                </span><span class="hljs-template-tag">&#123;% <span class="hljs-name">bootstrap_form</span> form %&#125;</span><span class="xml"></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;</span></span></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">trans</span></span> &#x27;登录&#x27; %&#125;</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>/&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;next&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;</span></span></span><span class="hljs-template-variable">&#123;&#123; next &#125;&#125;</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>/&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">trans</span></span> &quot;忘记密码？&quot; %&#125;</span><span class="xml"> <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;</span></span></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">url</span></span> &#x27;auth_password_reset&#x27; %&#125;</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">trans</span></span> &quot;重置&quot; %&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">trans</span></span> &quot;还没有账号？&quot; %&#125;</span><span class="xml"> <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;</span></span></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">url</span></span> &#x27;registration_register&#x27; %&#125;</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">trans</span></span> &quot;注册&quot; %&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endblock</span></span> %&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>后端</tag>
      
      <tag>Django</tag>
      
      <tag>WEB</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker封装Django+uwsgi</title>
    <link href="/2021/12/15/docker%E5%B0%81%E8%A3%85Django+uwsgi/"/>
    <url>/2021/12/15/docker%E5%B0%81%E8%A3%85Django+uwsgi/</url>
    
    <content type="html"><![CDATA[<h1 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull centos<br></code></pre></td></tr></table></figure><h1 id="准备容器环境"><a href="#准备容器环境" class="headerlink" title="准备容器环境"></a>准备容器环境</h1><p>在容器中操作</p><h2 id="更新yum"><a href="#更新yum" class="headerlink" title="更新yum"></a>更新yum</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum update<br></code></pre></td></tr></table></figure><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install -y python36 python36-devel gcc libevent-devel openssl-devel  libffi-devel wget<br><br>pip3 install uwsgi gevent<br></code></pre></td></tr></table></figure><h2 id="安装uwsgi"><a href="#安装uwsgi" class="headerlink" title="安装uwsgi"></a>安装uwsgi</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip3 install uwsgi gevent<br></code></pre></td></tr></table></figure><h2 id="复制文件到容器"><a href="#复制文件到容器" class="headerlink" title="复制文件到容器"></a>复制文件到容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp 本地路径 容器id:容器路径<br></code></pre></td></tr></table></figure><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>pip3 install -r requirements.txt –trusted-host <a href="https://repo.huaweicloud.com/">https://repo.huaweicloud.com</a> -i <a href="https://repo.huaweicloud.com/repository/pypi/simple">https://repo.huaweicloud.com/repository/pypi/simple</a></p><h2 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h2><h3 id="安装编译工具及库文件"><a href="#安装编译工具及库文件" class="headerlink" title="安装编译工具及库文件"></a>安装编译工具及库文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel<br></code></pre></td></tr></table></figure><h3 id="安装-PCRE"><a href="#安装-PCRE" class="headerlink" title="安装 PCRE"></a>安装 PCRE</h3><p>PCRE 作用是让 Nginx 支持 Rewrite 功能</p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /usr/local/src/<br>wget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz<br></code></pre></td></tr></table></figure><h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar zxvf pcre-8.35.tar.gz<br></code></pre></td></tr></table></figure><h4 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd pcre-8.35<br>./configure<br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><h4 id="查看PCRE版本"><a href="#查看PCRE版本" class="headerlink" title="查看PCRE版本"></a>查看PCRE版本</h4><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">pcre-<span class="hljs-built_in">config</span> <span class="hljs-comment">--version</span><br></code></pre></td></tr></table></figure><h3 id="安装nginx-1"><a href="#安装nginx-1" class="headerlink" title="安装nginx"></a>安装nginx</h3><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget http://nginx.org/download/nginx-1.6.2.tar.gz<br>tar zxvf nginx-1.6.2.tar.gz<br>cd nginx-1.6.2<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">./configure<br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><h3 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /usr/local/nginx/sbin  #nginx安装目录<br>./nginx<br></code></pre></td></tr></table></figure><h3 id="查看是否启动"><a href="#查看是否启动" class="headerlink" title="查看是否启动"></a>查看是否启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ps -aux | grep nginx<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/django/docker%E5%B0%81%E8%A3%85django+uwsgi.md/74395614243607.png"></p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /usr/local/nginx/conf/nginx.conf<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">server<br>&#123;<br>listen 80;<br>listen 443 ssl http2;<br>    server_name 你的域名;<br>    charset urf-8;<br>    location / &#123;<br>    include uwsgi_params;<br>        uwsgi_pass 127.0.0.1:8001; #8001对应uwsgi配置中的socket<br>    &#125;  <br>&#125;<br></code></pre></td></tr></table></figure><p>刷新配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./nginx -s reload<br></code></pre></td></tr></table></figure><h3 id="报错处理"><a href="#报错处理" class="headerlink" title="报错处理"></a>报错处理</h3><h4 id="1删除"><a href="#1删除" class="headerlink" title="1删除"></a>1删除</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs SHELL">make -f objs/Makefile<br>make[1]: Entering directory &#x27;/usr/local/src/nginx-1.6.2&#x27;<br>cc -c -pipe  -O -W -Wall -Wpointer-arith -Wno-unused -Werror -g  -I src/core -I src/event -I src/event/modules -I src/os/unix -I /usr/local/src/pcre-8.35 -I objs \<br>        -o objs/src/core/ngx_murmurhash.o \<br>        src/core/ngx_murmurhash.c<br>src/core/ngx_murmurhash.c: In function &#x27;ngx_murmur_hash2&#x27;:<br>src/core/ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror=implicit-fallthrough=]<br>         h ^= data[2] &lt;&lt; 16;<br>         ~~^~~~~~~~~~~~~~~~<br>src/core/ngx_murmurhash.c:38:5: note: here<br>     case 2:<br>     ^~~~<br>src/core/ngx_murmurhash.c:39:11: error: this statement may fall through [-Werror=implicit-fallthrough=]<br>         h ^= data[1] &lt;&lt; 8;<br>         ~~^~~~~~~~~~~~~~~<br>src/core/ngx_murmurhash.c:40:5: note: here<br>     case 1:<br>     ^~~~<br>cc1: all warnings being treated as errors<br>make[1]: *** [objs/Makefile:446: objs/src/core/ngx_murmurhash.o] Error 1<br>make[1]: Leaving directory &#x27;/usr/local/src/nginx-1.6.2&#x27;<br>make: *** [Makefile:8: build] Error 2<br></code></pre></td></tr></table></figure><p>解决：进入到nginx-1.6.2目录下（解压的目录）</p><p>找到当前目录下找到objs文件夹，并进入，打开文件Makefile,找到有一下内容的这行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi objs/Makefile<br>CFLAGS = -pipe -O -W -Wall -Wpointer-arith -Wno-unused-parameter -Werror -g　<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>gcc将所有的警告当成错误进行处理```把这行内容中的 “-Werror”去掉</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs -Werror:"><br>#### 2注释<br><br>```shell<br>sh-4.4# make &amp;&amp; make install<br>make -f objs/Makefile<br>make[1]: Entering directory &#x27;/usr/local/src/nginx-1.6.2&#x27;<br>cc -c -pipe  -O -W -Wall -Wpointer-arith -Wno-unused -g  -I src/core -I src/event -I src/event/modules -I src/os/unix -I /usr/local/src/pcre-8.35 -I objs \<br>        -o objs/src/os/unix/ngx_user.o \<br>        src/os/unix/ngx_user.c<br>src/os/unix/ngx_user.c: In function &#x27;ngx_libc_crypt&#x27;:<br>src/os/unix/ngx_user.c:35:7: error: &#x27;struct crypt_data&#x27; has no member named &#x27;current_salt&#x27;<br>     cd.current_salt[0] = ~salt[0];<br>       ^<br>make[1]: *** [objs/Makefile:726: objs/src/os/unix/ngx_user.o] Error 1<br>make[1]: Leaving directory &#x27;/usr/local/src/nginx-1.6.2&#x27;<br>make: *** [Makefile:8: build] Error 2<br></code></pre></td></tr></table></figure><p>解决：</p><p>进入到对应文件把报错行注释掉</p><h1 id="编写运行脚本"><a href="#编写运行脚本" class="headerlink" title="编写运行脚本"></a>编写运行脚本</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><br><br>cd /usr/local/nginx/sbin <br>./nginx  # 启动nginx进程<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 确认ngixn启动成功</span> <br>ps -aux | grep nginx<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash">启动uwsgi确认</span><br>uwsgi -i /uwsgi.ini<br>netstat -tunlp<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash">tail 输出日志持续化</span><br>tail -f /tmp/uwsgi.log<br></code></pre></td></tr></table></figure><h1 id="提交容器"><a href="#提交容器" class="headerlink" title="提交容器"></a>提交容器</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker commit 容器id 镜像名<br></code></pre></td></tr></table></figure><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p><code>docker run -p 80:80 容器id ./go.sh</code></p><p>访问ip</p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/django/docker%E5%B0%81%E8%A3%85django+uwsgi.md/56185714225820.png"></p><h1 id="？问题"><a href="#？问题" class="headerlink" title="？问题"></a>？问题</h1><ol><li><p>执行django并暴露端口可以使用，uwsgi无效  </p><p>解决：方案 使用tail命令对日志进行持续输出 保证在前台运行</p></li><li><p>保存docker镜像到本地</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker save 镜像<span class="hljs-built_in">id</span>&gt;本地路径\xxx.tar<br></code></pre></td></tr></table></figure></li><li><p>导入docker镜像</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">docker <span class="hljs-keyword">load</span> &lt; xxx.tar<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Django</tag>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/11/24/pandas%E5%85%A5%E9%97%A8/"/>
    <url>/2021/11/24/pandas%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<hr><p>title:pandas入门<br>tag:[python,dl]</p><hr><h1 id="C1-Creating-Reading-and-Writing"><a href="#C1-Creating-Reading-and-Writing" class="headerlink" title="C1 Creating, Reading and Writing"></a>C1 Creating, Reading and Writing</h1><ol><li>创建一个名为<code>fruits</code>的DataFrame,看起来如下：</li></ol><p><img src="https://i.imgur.com/Ax3pp2A.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">fruits = pd.DataFrame(&#123;<span class="hljs-string">&#x27;Apples&#x27;</span>:[<span class="hljs-number">30</span>],<span class="hljs-string">&#x27;Bananas&#x27;</span>:[<span class="hljs-number">21</span>]&#125;)<br>fruits<br></code></pre></td></tr></table></figure><p><img src="http://markdowntc.wanqqq29.cn/image-20211124145140348.png" alt="image-20211124145140348"></p><ol start="2"><li><p>创建一个名为<code>fruits_sales</code>的DataFrame，如下图：</p><p><img src="https://i.imgur.com/CHPn7ZF.png"></p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">fruit_sales = pd.DataFrame(&#123;<span class="hljs-string">&#x27;Apples&#x27;</span>:[<span class="hljs-number">35</span>,<span class="hljs-number">41</span>],<span class="hljs-string">&#x27;Bananas&#x27;</span>:[<span class="hljs-number">21</span>,<span class="hljs-number">34</span>]&#125;,index=[<span class="hljs-string">&#x27;2017 Sales&#x27;</span>,<span class="hljs-string">&#x27;2018 Sales&#x27;</span>])<br>fruit_sales<br></code></pre></td></tr></table></figure><h1 id="iloc-amp-loc"><a href="#iloc-amp-loc" class="headerlink" title="iloc&amp;loc"></a>iloc&amp;loc</h1><p><code>first_descriptions1 = reviews.iloc[:10,1]</code> = <code>first_descriptions = reviews.loc[:9,&#39;description&#39;]</code></p><ul><li>iloc 选择范围 前闭后开</li><li>loc 选择范围 前闭后闭<ul><li>原因：<ul><li>loc更适合选择<code>df.loc[&#39;Apples&#39;:&#39;Potatoes&#39;]</code>这种非数字类型的索引<ul><li>potatoes后为pear,若要选择pear 不好操作</li></ul></li><li>iloc 更适合选择<code>df.iloc[0:1000]</code>数字类型索引</li></ul></li><li>iloc和loc的作用是一样的</li></ul></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>js转换字符串、数字方法</title>
    <link href="/2021/11/19/js%E8%BD%AC%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%81%E6%95%B0%E5%AD%97%E6%96%B9%E6%B3%95/"/>
    <url>/2021/11/19/js%E8%BD%AC%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%81%E6%95%B0%E5%AD%97%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="js转换为字符串类型"><a href="#js转换为字符串类型" class="headerlink" title="js转换为字符串类型"></a>js转换为字符串类型</h1><table><thead><tr><th>方式</th><th>说明</th><th>案例</th></tr></thead><tbody><tr><td>toString()</td><td>转成字符串</td><td>var num =1;alert(num.toString());</td></tr><tr><td>String()强制转换</td><td>转成字符串</td><td>var num = 1; alert(String(num));</td></tr><tr><td><b>加号拼接字符串</b></td><td>和字符串拼接的结果都是字符串</td><td>var num =1;alert(num+’字符串’);</td></tr></tbody></table><p>toString() 、String() 使用方式不同</p><p>更偏向于使用加号拼接字符串转换方式，又称为隐式转换</p><h1 id="js转换为数字类型"><a href="#js转换为数字类型" class="headerlink" title="js转换为数字类型"></a>js转换为数字类型</h1><table><thead><tr><th>方式</th><th>说明</th><th>案例</th></tr></thead><tbody><tr><td>parseInt</td><td>将string转为整数数值型</td><td>parseInt(‘78’); -&gt; 78<br>parseInt(‘120px’); -&gt; 120 <br>parseInt(‘123.2’); -&gt; 123</td></tr><tr><td>parseFloat</td><td>将string转为浮点数数值型</td><td>parseInt(‘78.1’); -&gt; 78.1<br/>parseInt(‘120.2px’); -&gt; 120.2 <br/>parseInt(‘123.2’); -&gt; 123.2</td></tr><tr><td>Number()强制转换</td><td>将string类型转换为数值型</td><td>Number(‘12’); -&gt; 12<br>Numbber(‘12.2’) -&gt; 12.2</td></tr><tr><td>js隐式转换(- * /)</td><td>利用算术运算隐式转换为数值型</td><td>‘12’-0; -&gt; 12<br>‘123’ - ’120‘  -&gt; 3 <br>‘123’ * 1 -&gt; 123</td></tr></tbody></table><h1 id="js转换为布尔型"><a href="#js转换为布尔型" class="headerlink" title="js转换为布尔型"></a>js转换为布尔型</h1><table><thead><tr><th>方式</th><th>说明</th><th>案例</th></tr></thead><tbody><tr><td>Boolean()</td><td>其他类型转成布尔值</td><td>Boolean(‘true’);</td></tr></tbody></table><ul><li><p>代表空、否定的值会被转换为false, 如 ‘’、0、NaN、null、undefined</p></li><li><p>其余值都会被转换为true</p></li></ul><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%89%8D%E7%AB%AF/js%E8%BD%AC%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%81%E6%95%B0%E5%AD%97%E6%96%B9%E6%B3%95.md/506675514223158.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大数据分析实践课堂笔记</title>
    <link href="/2021/09/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E8%B7%B5/"/>
    <url>/2021/09/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E8%B7%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><h2 id="开发环境准备"><a href="#开发环境准备" class="headerlink" title="开发环境准备"></a>开发环境准备</h2><ul><li>创建Maven项目，jdk1.8</li><li>导入pom.xml依赖<ul><li>hadoop-common</li><li>hadoop-client</li><li>hadoop-hdfs</li><li>hadoop-mapreduce-client-core</li><li>在<code>https://mvnrepository.com/</code>找到所需要的包写入pom.xml文件</li></ul></li></ul><h2 id="伪分布式搭建"><a href="#伪分布式搭建" class="headerlink" title="伪分布式搭建"></a>伪分布式搭建</h2><h3 id="普通用户创建"><a href="#普通用户创建" class="headerlink" title="普通用户创建"></a>普通用户创建</h3><ul><li>普通用户赋予sudo权限</li></ul><h3 id="关闭、禁用防火墙sudo"><a href="#关闭、禁用防火墙sudo" class="headerlink" title="关闭、禁用防火墙sudo"></a>关闭、禁用防火墙sudo</h3><ul><li><p>```<br>sudo systemctl stop firewalld<br>sudo systemctl disable firewalld</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br>  <br><br>- ![image-<span class="hljs-number">20210914092622730</span>](http:<span class="hljs-regexp">//m</span>arkdowntc.wanqqq29.cn<span class="hljs-regexp">//im</span>age-<span class="hljs-number">20210914092622730</span>.png)<br><br><span class="hljs-comment">### 修改hostsname -&gt;/etc/hostname</span><br><br>- ```<br>  sudo vi <span class="hljs-regexp">/etc/</span>hostname<br></code></pre></td></tr></table></figure></li><li><p><img src="http://markdowntc.wanqqq29.cn//image-20210914092729741.png" alt="image-20210914092729741"></p></li></ul><h3 id="修改hosts文件，添加node1-gt-etc-hosts"><a href="#修改hosts文件，添加node1-gt-etc-hosts" class="headerlink" title="修改hosts文件，添加node1  -&gt;/etc/hosts"></a>修改hosts文件，添加node1  -&gt;/etc/hosts</h3><ul><li><p>```<br>sudo vi /etc/hosts</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br>- ![image-<span class="hljs-number">20210914092858718</span>](http:<span class="hljs-regexp">//m</span>arkdowntc.wanqqq29.cn<span class="hljs-regexp">//im</span>age-<span class="hljs-number">20210914092858718</span>.png)<br><br><span class="hljs-comment">### 固定ip</span><br><br>- ```<br>  sudo vi <span class="hljs-regexp">/etc/</span>sysconfig<span class="hljs-regexp">/network-scripts/i</span>fcfg-ens33<br>  sudo systemctl reboot network<br></code></pre></td></tr></table></figure></li><li><p><img src="http://markdowntc.wanqqq29.cn//image-20210914093212466.png" alt="image-20210914093212466"></p></li></ul><h3 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h3><ul><li><p>配置用户环境变量</p><ul><li><p>为解决多用户下系统变量冲突问题，现要求配置用户的环境变量</p><ul><li>```<br>用户目录下：<br>vi .bashrc <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><br><span class="hljs-code">      </span><br><span class="hljs-code"></span><br><span class="hljs-bullet">    -</span> ![<span class="hljs-string">image-20210914093909268</span>](<span class="hljs-link">http://markdowntc.wanqqq29.cn//image-20210914093909268.png</span>)<br><br><span class="hljs-bullet">-</span> 生效环境变量<br><br><span class="hljs-bullet">  -</span> <span class="hljs-code">```</span><br><span class="hljs-code">    source .bashrc</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p><img src="http://markdowntc.wanqqq29.cn//image-20210914094002309.png" alt="image-20210914094002309"></p></li></ul></li></ul><h3 id="配置免密登录"><a href="#配置免密登录" class="headerlink" title="配置免密登录"></a>配置免密登录</h3><ul><li><p>```<br>ssh-keygen -t rsa -P “”<br>cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys<br>service sshd restart</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br>- 私钥 除数-<span class="hljs-number">1</span>，公钥 随机的一个数<br><br><span class="hljs-comment">### 安装hadoop伪分布式</span><br><br>- 解压<br><br>- 配置环境变量<br><br>  - ![image-<span class="hljs-number">20210914095737019</span>](http:<span class="hljs-regexp">//m</span>arkdowntc.wanqqq29.cn<span class="hljs-regexp">//im</span>age-<span class="hljs-number">20210914095737019</span>.png)<br><br>- 更改hadoop配置 <span class="hljs-regexp">/etc/</span>hadoop/env.sh、yarn-env.sh -&gt; javahome<br><br>  - ```<br>    vi hadoop<span class="hljs-regexp">/etc/</span>hadoop/hadoop.env.sh<br>    vi hadoop<span class="hljs-regexp">/etc/</span>hadoop/yarn-env.sh<br>    <br>    修改以上文件的JAVA_HOME<br></code></pre></td></tr></table></figure><ul><li><p>hdfs-site.xml</p><ul><li>```<?xml version="1.0"?><configuration>    <property>        <name>dfs.namenode.name.dir</name>        <value>/home/map/hdfs/namenode</value>    </property>    <property>        <name>dfs.datanode.data.dir</name>        <value>/home/map/hdfs/datanode</value>    </property>    <property>        <name>dfs.replication</name>        <value>3</value>    </property></configuration><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><br><span class="hljs-bullet">- </span>新建目录 <br><br></code></pre></td></tr></table></figure>mkdir -p /home/map/hdfs/namenode<br>mkdir -p /home/map/hdfs/datanode<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br>    <br><br>- core-site.xml<br><br>  - ```<br>    <span class="hljs-meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>fs.defaultFS<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hdfs://node1:9000/<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>mapred-site.xml</p><ul><li>```<br>mv mapred-site.xml.template mapred-site.xml<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br>- ```<br>  <span class="hljs-meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>mapreduce.framework.name<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>yarn<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>  <br></code></pre></td></tr></table></figure></li></ul></li><li><p>yarn-site.xml</p><ul><li>```<?xml version="1.0"?><configuration>    <property>        <name>yarn.nodemanager.aux-services</name>        <value>mapreduce_shuffle</value>    </property>    <property>        <name>yarn.nodemanager.aux-services.mapreduce_shuffle.class</name>        <value>org.apache.hadoop.mapred.ShuffleHandler</value>    </property>    <property>        <name>yarn.resourcemanager.hostname</name>        <value>node1</value>    </property></configuration><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs haml"><br>    -<span class="ruby"> </span><br><span class="ruby"></span><br>-<span class="ruby"> 格式化</span><br><span class="ruby"></span><br>  -<span class="ruby"> <span class="hljs-string">``</span><span class="hljs-string">`hadoop</span></span><br><span class="hljs-string"><span class="ruby"></span></span>    hadoop namenode –format<br><br>-<span class="ruby"><span class="hljs-string"> 启动</span></span><br><span class="hljs-string"><span class="ruby"></span></span><br>  -<span class="ruby"><span class="hljs-string"> `</span><span class="hljs-string">``</span></span><br><span class="ruby"></span>    start-all.sh<br>    start-yarn.sh<br></code></pre></td></tr></table></figure></li></ul></li><li><p>验证 </p><ul><li><img src="http://markdowntc.wanqqq29.cn//image-20210914111934162.png" alt="image-20210914111934162"></li></ul></li></ul></li></ul><h3 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h3><ul><li><p>免密登录不生效</p><ul><li><p>查看系统安全日志，定位问题</p><ul><li><p>执行 <strong>sudo cat /var/log/secure</strong> 查看系统的安全日志，然后在安全日志中看到SSH登录过程中提示了如下错误：</p></li><li><p><img src="http://markdowntc.wanqqq29.cn//image-20210914102538005.png" alt="image-20210914102538005"></p></li><li><p><strong>找到问题：</strong>Authentication refused: bad ownership or modes for directory <strong>/home/map</strong></p><p>后面的目录代表权限不匹配</p></li><li><p><strong>解决：</strong></p><p>（替换成你log中的目录）执行如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">chmod</span> g-w /home/<span class="hljs-keyword">map</span><br><span class="hljs-keyword">chmod</span> <span class="hljs-number">700</span> ./.ssh <br><span class="hljs-keyword">chmod</span> <span class="hljs-number">600</span> ~<span class="hljs-regexp">/.ssh/au</span>thorized_keys<br></code></pre></td></tr></table></figure><p>重启SSH服务 $ service sshd restart</p></li></ul></li></ul></li></ul><h1 id="mapreduce-开发"><a href="#mapreduce-开发" class="headerlink" title="mapreduce 开发"></a>mapreduce 开发</h1><h1 id="python-hadoop参考文档"><a href="#python-hadoop参考文档" class="headerlink" title="python-hadoop参考文档"></a>python-hadoop参考文档</h1><h2 id="map部分与sh"><a href="#map部分与sh" class="headerlink" title="map部分与sh"></a>map部分与sh</h2><ul><li><a href="https://www.cnblogs.com/kaituorensheng/p/3826114.html">https://www.cnblogs.com/kaituorensheng/p/3826114.html</a></li><li><a href="https://www.cnblogs.com/wuxie1989/p/5785093.html">https://www.cnblogs.com/wuxie1989/p/5785093.html</a></li><li><a href="https://www.cnblogs.com/airnew/p/9540982.html">https://www.cnblogs.com/airnew/p/9540982.html</a></li></ul><h2 id="Partitioner"><a href="#Partitioner" class="headerlink" title="Partitioner"></a>Partitioner</h2><ul><li>2.7.6官方文档<ul><li><a href="http://hadoop.apache.org/docs/r2.7.6/hadoop-streaming/HadoopStreaming.html">http://hadoop.apache.org/docs/r2.7.6/hadoop-streaming/HadoopStreaming.html</a></li><li><a href="https://www.pianshen.com/article/852647324/">https://www.pianshen.com/article/852647324/</a></li></ul></li><li><a href="http://hadoop.apache.org/docs/r1.0.4/cn/streaming.html#%E5%8F%AA%E4%BD%BF%E7%94%A8Mapper%E7%9A%84%E4%BD%9C%E4%B8%9A">http://hadoop.apache.org/docs/r1.0.4/cn/streaming.html#%E5%8F%AA%E4%BD%BF%E7%94%A8Mapper%E7%9A%84%E4%BD%9C%E4%B8%9A</a></li><li><a href="https://blog.csdn.net/whaoXYSH/article/details/25482753">https://blog.csdn.net/whaoXYSH/article/details/25482753</a></li><li><a href="http://www.cppblog.com/MemoryGarden/archive/2010/01/24/106312.html">http://www.cppblog.com/MemoryGarden/archive/2010/01/24/106312.html</a></li><li><a href="https://www.cnblogs.com/hrhguanli/p/3790985.html">https://www.cnblogs.com/hrhguanli/p/3790985.html</a></li></ul><h1 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h1><h2 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h2><p>把旧球队名替换为新球队名</p><p>分别给东西部球队添加标记；1970年之前的球队统一添加M标记</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs map.py">#!/usr/bin/env python3<br># coding=UTF-8<br>##map<br>import sys  # 导入sys包<br><br>Line = &#x27;&#x27;<br>data = []<br>newTeam = [&#x27;金州勇士队&#x27;, &#x27;金州勇士队&#x27;, &#x27;洛杉矶湖人队&#x27;, &#x27;费城76人队&#x27;, &#x27;萨克拉门托国王队&#x27;, &#x27;亚特兰大老鹰队&#x27;, &#x27;华盛顿奇才队&#x27;, &#x27;华盛顿奇才队&#x27;, &#x27;俄克拉荷马城雷霆队&#x27;, &#x27;底特律活塞队&#x27;,<br>           &#x27;布鲁克林篮网队&#x27;, &#x27;达拉斯独行侠队&#x27;]<br>oldTeam = [&#x27;费城勇士队&#x27;, &#x27;旧金山勇士队&#x27;, &#x27;明尼阿波利斯湖人队&#x27;, &#x27;赛拉库斯民族队&#x27;, &#x27;罗切斯特皇家队&#x27;, &#x27;圣路易斯老鹰队&#x27;, &#x27;华盛顿子弹队&#x27;, &#x27;巴尔的摩子弹队&#x27;, &#x27;西雅图超音速队&#x27;,<br>           &#x27;福特韦恩活塞队&#x27;, &#x27;新泽西网队&#x27;, &#x27;达拉斯小牛队&#x27;]<br>eastTeam = [&#x27;亚特兰大老鹰队&#x27;, &#x27;夏洛特黄蜂队&#x27;, &#x27;迈阿密热火队&#x27;, &#x27;奥兰多魔术队&#x27;, &#x27;华盛顿奇才队&#x27;, &#x27;波士顿凯尔特人队&#x27;, &#x27;布鲁克林篮网队&#x27;, &#x27;纽约尼克斯队&#x27;, &#x27;费城76人队&#x27;, &#x27;多伦多猛龙队&#x27;,<br>            &#x27;芝加哥公牛队&#x27;, &#x27;克里夫兰骑士队&#x27;, &#x27;底特律活塞队&#x27;, &#x27;印第安纳步行者队&#x27;, &#x27;密尔沃基雄鹿队&#x27;]<br>westTeam = [&#x27;金州勇士队&#x27;, &#x27;芝加哥牡鹿队&#x27;, &#x27;洛杉矶湖人队&#x27;, &#x27;华盛顿国会队&#x27;, &#x27;塞拉库斯民族队&#x27;, &#x27;萨克拉门托国王队&#x27;, &#x27;菲尼克斯太阳队&#x27;, &#x27;波特兰开拓者队&#x27;,<br>            &#x27;俄克拉荷马城雷霆队&#x27;, &#x27;休斯顿火箭队&#x27;, &#x27;犹他爵士队&#x27;, &#x27;圣安东尼奥马刺队&#x27;, &#x27;达拉斯独行侠队&#x27;]<br># 从标准输入中获取数据<br>for line in sys.stdin:<br>    Team = []<br>    # data为每行csv的列表格式 [&#x27;1947&#x27;, &#x27;4.16-4.22&#x27;, &#x27;金州勇士队&#x27;, &#x27;4-1&#x27;, &#x27;芝加哥牡鹿队&#x27;, &#x27;&#x27;]<br>    data = line.strip().split(&#x27;,&#x27;)<br>    if data[5] == &#x27;\n&#x27;:<br>        data[5] = &#x27; &#x27;<br>    # data[2]为冠军队名<br>    # 对改名的冠军队名进行更新<br>    if data[2] in oldTeam:<br>        a = oldTeam.index(data[2])<br>        data[2] = newTeam[a]<br>        # if冠军队之前改过名，以新队名添加东西部标识<br>        # if data[0] &gt;= &#x27;1970&#x27;:<br>        #     if data[2] in eastTeam:<br>        #         data.insert(0,&#x27;E&#x27;)<br>        #     elif data[2] in westTeam:<br>        #         data.insert(0,&#x27;W&#x27;)<br>        if data[0] &gt;= &#x27;1970&#x27;:<br>            if data[2] in eastTeam:<br>                Team.append(&#x27;E&#x27;)<br>                for ii in data:<br>                    Team.append(ii)<br>            elif data[2] in westTeam:<br>                Team.append(&#x27;W&#x27;)<br>                for ii in data:<br>                    Team.append(ii)<br>            else:<br>                Team.append(&#x27;M&#x27;)<br>                for ii in data:<br>                    Team.append(ii)<br>        else:<br>            Team.append(&#x27;M&#x27;)<br>            for ii in data:<br>                Team.append(ii)<br>    # if冠军队伍没有改名，添加东西部标识<br>    else:<br>        if data[0] &gt;= &#x27;1970&#x27;:<br>            if data[2] in eastTeam:<br>                Team.append(&#x27;E&#x27;)<br>                for ii in data:<br>                    Team.append(ii)<br>            elif data[2] in westTeam:<br>                Team.append(&#x27;W&#x27;)<br>                for ii in data:<br>                    Team.append(ii)<br>            else:<br>                Team.append(&#x27;M&#x27;)<br>                for ii in data:<br>                    Team.append(ii)<br>        else:<br>            Team.append(&#x27;M&#x27;)<br>            for ii in data:<br>                Team.append(ii)<br><br>    if data[4] in oldTeam:<br>        b = oldTeam.index(data[4])<br>        data[4] = newTeam[b]<br>        Team[5] = data[4]<br><br>    # 将列表data转为字符串<br>    Line = &quot;,&quot;.join(Team)<br>    # 输出<br>    print(Line)<br><br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs dataClear.sh">HADOOP_CMD=&quot;/home/map/apps/hadoop/bin/hadoop&quot;<br>STREAM_JAR_PATH=&quot;/home/map/apps/hadoop/share/hadoop/tools/lib/hadoop-streaming-2.7.6.jar&quot;<br><br>INPUT_FILE_PATH_1=&quot;/nba.csv&quot;<br>OUTPUT_PATH=&quot;/data_output&quot;<br>$HADOOP_CMD fs -rm -r -skipTrash $OUTPUT_PATH #每次执行时都删除输出路径，否则会出错<br><br>$HADOOP_CMD jar $STREAM_JAR_PATH \<br>                -input $INPUT_FILE_PATH_1 \<br>                -output $OUTPUT_PATH \<br>                -mapper &quot;python3 map.py&quot; \<br>                -jobconf mapred.map.tasks=1 \<br>                -jobconf mapred.reduce.tasks=0\<br>                -file map.py \<br><br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs output">[map@node1 program]$ hadoop fs -cat /data_output/part-00000<br>M,1947,4.16-4.22,金州勇士队,4-1,芝加哥牡鹿队,<br>M,1948,4.10-4.21,华盛顿奇才队,4-2,金州勇士队,<br>M,1949,4.4-4.13,洛杉矶湖人队,4-2,华盛顿国会队,<br>M,1950,4.8-4.23,洛杉矶湖人队,4-2,塞拉库斯民族队,<br>M,1951,4.7-4.21,萨克拉门托国王队,4-3,纽约尼克斯队,<br>M,1952,4.12-4.25,洛杉矶湖人队,4-3,纽约尼克斯队,<br>M,1953,4.4-4.10,洛杉矶湖人队,4-1,纽约尼克斯队,<br>M,1954,3.31-4.12,洛杉矶湖人队,4-3,塞拉库斯民族队,<br>M,1955,3.31-4.10,塞拉库斯民族队,4-3,底特律活塞队,<br>M,1956,3.31-4.7,金州勇士队,4-1,底特律活塞队,<br>M,1957,3.30-4.13,波士顿凯尔特人队,4-3,亚特兰大老鹰队,<br>M,1958,3.29-4.12,亚特兰大老鹰队,4-2,波士顿凯尔特人队,<br>M,1959,4.4-4.9,波士顿凯尔特人队,4-0,洛杉矶湖人队,<br>M,1960,3.27-4.9,波士顿凯尔特人队,4-3,亚特兰大老鹰队,<br>M,1961,4.2-4.11,波士顿凯尔特人队,4-1,亚特兰大老鹰队,<br>M,1962,4.7-4.18,波士顿凯尔特人队,4-3,洛杉矶湖人队,<br>M,1963,4.14-4.24,波士顿凯尔特人队,4-2,洛杉矶湖人队,<br>M,1964,4.18-4.26,波士顿凯尔特人队,4-1,金州勇士队,<br>M,1965,4.18-4.25,波士顿凯尔特人队,4-1,洛杉矶湖人队,<br>M,1966,4.17-4.28,波士顿凯尔特人队,4-3,洛杉矶湖人队,<br>M,1967,4.14-4.24,费城76人队,4-2,金州勇士队,<br>M,1968,4.21-5.2,波士顿凯尔特人队,4-2,洛杉矶湖人队,<br>M,1969,4.23-5.5,波士顿凯尔特人队,4-3,洛杉矶湖人队,杰里·韦斯特<br>E,1970,4.24-5.8,纽约尼克斯队,4-3,洛杉矶湖人队,威利斯·里德<br>E,1971,4.21-4.30,密尔沃基雄鹿队,4-0,华盛顿奇才队,贾巴尔<br>W,1972,4.26-5.7,洛杉矶湖人队,4-1,纽约尼克斯队,张伯伦<br>E,1973,5.1-5.10,纽约尼克斯队,4-1,洛杉矶湖人队,威利斯·里德<br>E,1974,4.28-5.12,波士顿凯尔特人队,4-3,密尔沃基雄鹿队,约翰·哈夫利切克<br>W,1975,5.18-5.25,金州勇士队,4-0,华盛顿奇才队,里克·巴里<br>E,1976,5.23-6.6,波士顿凯尔特人队,4-2,菲尼克斯太阳队,乔·乔·怀特<br>W,1977,5.22-6.5,波特兰开拓者队,4-2,费城76人队,比尔·沃顿<br>E,1978,5.21-6.7,华盛顿奇才队,4-3,俄克拉荷马城雷霆队,韦斯·昂塞尔德<br>W,1979,5.20-6.1,俄克拉荷马城雷霆队,4-1,华盛顿奇才队,丹尼斯·约翰逊<br>W,1980,5.4-5.16,洛杉矶湖人队,4-2,费城76人队,埃尔文·约翰逊<br>E,1981,5.5-5.14,波士顿凯尔特人队,4-2,休斯顿火箭队,塞德里克·麦克斯维尔<br>W,1982,5.27-6.8,洛杉矶湖人队,4-2,费城76人队,埃尔文·约翰逊<br>E,1983,5.22-5.31,费城76人队,4-0,洛杉矶湖人队,摩西·马龙<br>E,1984,5.27-6.12,波士顿凯尔特人队,4-3,洛杉矶湖人队,拉里·伯德<br>W,1985,5.27-6.9,洛杉矶湖人队,4-2,波士顿凯尔特人队,贾巴尔<br>E,1986,5.26-6.8,波士顿凯尔特人队,4-2,休斯顿火箭队,拉里·伯德<br>W,1987,6.2-6.14,洛杉矶湖人队,4-2,波士顿凯尔特人队,埃尔文·约翰逊<br>W,1988,6.7-6.21,洛杉矶湖人队,4-3,底特律活塞队,詹姆斯·沃西<br>E,1989,6.6-6.13,底特律活塞队,4-0,洛杉矶湖人队,乔·杜马斯<br>E,1990,6.5-6.14,底特律活塞队,4-1,波特兰开拓者队,伊塞亚·托马斯<br>E,1991,6.2-6.12,芝加哥公牛队,4-1,洛杉矶湖人队,迈克尔·乔丹<br>E,1992,6.3-6.14,芝加哥公牛队,4-2,波特兰开拓者队,迈克尔·乔丹<br>E,1993,6.9-6.20,芝加哥公牛队,4-2,菲尼克斯太阳队,迈克尔·乔丹<br>W,1994,6.8-6.22,休斯顿火箭队,4-3,纽约尼克斯队,哈基姆·奥拉朱旺<br>W,1995,6.7-6.14,休斯顿火箭队,4-0,奥兰多魔术队,哈基姆·奥拉朱旺<br>E,1996,6.5-6.16,芝加哥公牛队,4-2,俄克拉荷马城雷霆队,迈克尔·乔丹<br>E,1997,6.1-6.13,芝加哥公牛队,4-2,犹他爵士队,迈克尔·乔丹<br>E,1998,6.3-6.14,芝加哥公牛队,4-2,犹他爵士队,迈克尔·乔丹<br>W,1999,6.16-6.25,圣安东尼奥马刺队,4-1,纽约尼克斯队,蒂姆·邓肯<br>W,2000,6.7-6.19,洛杉矶湖人队,4-2,印第安纳步行者队,沙奎尔·奥尼尔<br>W,2001,6.6-6.15,洛杉矶湖人队,4-1,费城76人队,沙奎尔·奥尼尔<br>W,2002,6.5-6.12,洛杉矶湖人队,4-0,布鲁克林篮网队,沙奎尔·奥尼尔<br>W,2003,6.5-6.16,圣安东尼奥马刺队,4-2,布鲁克林篮网队,蒂姆·邓肯<br>E,2004,6.7-6.16,底特律活塞队,4-1,洛杉矶湖人队,昌西·比卢普斯<br>W,2005,6.10-6.24,圣安东尼奥马刺队,4-3,底特律活塞队,蒂姆·邓肯<br>E,2006,6.9-6.21,迈阿密热火队,4-2,达拉斯独行侠队,德怀恩·韦德<br>W,2007,6.8-6.15,圣安东尼奥马刺队,4-0,克里夫兰骑士队,托尼·帕克<br>E,2008,6.6-6.18,波士顿凯尔特人队,4-2,洛杉矶湖人队,保罗·皮尔斯<br>W,2009,6.5-6.15,洛杉矶湖人队,4-1,奥兰多魔术队,科比·布莱恩特<br>W,2010,6.4-6.18,洛杉矶湖人队,4-3,波士顿凯尔特人队,科比·布莱恩特<br>W,2011,6.1-6.13,达拉斯独行侠队,4-2,迈阿密热火队,德克·诺维茨基<br>E,2012,6.13-6.22,迈阿密热火队,4-1,俄克拉荷马城雷霆队,勒布朗·詹姆斯<br>E,2013,6.7-6.21,迈阿密热火队,4-3,圣安东尼奥马刺队,勒布朗·詹姆斯<br>W,2014,6.6-6.16,圣安东尼奥马刺队,4-1,迈阿密热火队,科怀·伦纳德<br>W,2015,6.5-6.17,金州勇士队,4-2,克里夫兰骑士队,安德烈·伊戈达拉<br>E,2016,6.3-6.20,克里夫兰骑士队,4-3,金州勇士队,勒布朗·詹姆斯<br>W,2017,6.2-6.13,金州勇士队,4-1,克利夫兰骑士队,凯文·杜兰特<br>W,2018,6.1-6.9,金州勇士队,4-0,克利夫兰骑士队,凯文·杜兰特<br>E,2019,5.31-6.14,多伦多猛龙队,4-2,金州勇士队,科怀·伦纳德<br></code></pre></td></tr></table></figure><p><img src="http://markdowntc.wanqqq29.cn//image-20211001164652951.png" alt="image-20211001164652951"></p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>通过Partitioner分类存放，这次Partitioner只实现了把M根EW分开，EW还是在一个文件夹内</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs main.py">#!/usr/bin/env python3<br># coding=UTF-8<br>##map<br>import sys<br>for line in sys.stdin:<br>    #将字符串转换为列表dataList 方便操作<br>    dataList = line.split(&#x27;,&#x27;)<br>    print(dataList)<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs reduce.py">#!/usr/bin/env python3<br># coding=UTF-8<br># reduce<br><br>import sys,re<br><br>Count = []<br>kV = &#123;&#125;<br>for line in sys.stdin:<br>    line = re.sub(&quot;\[&quot;,&#x27;&#x27;,line)<br>    line = re.sub(&quot;\]&quot;,&#x27;&#x27;,line)<br>    line = re.sub(&quot;&#x27;&quot;,&#x27;&#x27;,line)<br>    line = re.sub(&quot;\t\n&quot;,&#x27;&#x27;,line)<br>    lineContent = line.split(&#x27;, &#x27;)<br>    if lineContent[2] not in Count:<br>        Count.append(lineContent[2])<br>        kV[lineContent[2]] = 1<br>    elif lineContent[2] in Count:<br>        xx = &#123;lineContent[2]: kV[lineContent[2]] + 1&#125;<br>        kV.update(xx)<br>print(kV)<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs dataPartitioner.sh">HADOOP_CMD=&quot;/home/map/apps/hadoop/bin/hadoop&quot;<br>STREAM_JAR_PATH=&quot;/home/map/apps/hadoop/share/hadoop/tools/lib/hadoop-streaming-2.7.6.jar&quot;<br><br>INPUT_FILE_PATH_1=&quot;/data_output/part-00000&quot;<br>OUTPUT_PATH=&quot;/pp_output&quot;<br>$HADOOP_CMD fs -rm -r -skipTrash $OUTPUT_PATH #每次执行时都删除输出路径，否则会出错<br><br>$HADOOP_CMD jar $STREAM_JAR_PATH \<br>  -D stream.map.output.field.separator=, \<br>  -D stream.num.map.output.key.fields=1 \<br>  -D map.output.key.field.separator=\t \<br>  -D mapred.text.key.partitioner.options=-k1,1 \<br>  -input $INPUT_FILE_PATH_1 \<br>  -output $OUTPUT_PATH \<br>  -mapper &quot;python3 main.py&quot; \<br>  -reducer &quot;python3 reduce.py&quot; \<br>  -jobconf mapred.map.tasks=3 \<br>  -jobconf mapred.reduce.tasks=3 \<br>  -file main.py \<br>  -file reduce.py \<br>  -partitioner org.apache.hadoop.mapred.lib.KeyFieldBasedPartitioner<br><br></code></pre></td></tr></table></figure><p><img src="http://markdowntc.wanqqq29.cn//image-20211001165523346.png" alt="image-20211001165523346"></p><h2 id="只分类1970年后的"><a href="#只分类1970年后的" class="headerlink" title="只分类1970年后的"></a>只分类1970年后的</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs mainF.py">#!/usr/bin/env python3<br># coding=UTF-8<br>##map<br>import sys,re<br>for line in sys.stdin:<br>    #将字符串转换为列表dataList 方便操作<br>    line = re.sub(&quot;\[&quot;, &#x27;&#x27;, line)<br>    line = re.sub(&quot;\]&quot;, &#x27;&#x27;, line)<br>    line = re.sub(&quot;&#x27;&quot;, &#x27;&#x27;, line)<br>    line = re.sub(&quot;\t\n&quot;, &#x27;&#x27;, line)<br>    dataList = line.split(&#x27;,&#x27;)<br>    if dataList[0] == &#x27;W&#x27;:<br>        print(dataList)<br>    elif dataList[0] ==&#x27;E&#x27;:<br>        print(dataList)<br><br><br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs reducecF.py">#!/usr/bin/env python3<br># coding=UTF-8<br># reduce<br><br>import sys,re<br><br>Count = []<br>kVw = &#123;&#125;<br>kVe = &#123;&#125;<br>for line in sys.stdin:<br>    line = re.sub(&quot;\[&quot;,&#x27;&#x27;,line)<br>    line = re.sub(&quot;\]&quot;,&#x27;&#x27;,line)<br>    line = re.sub(&quot;&#x27;&quot;,&#x27;&#x27;,line)<br>    line = re.sub(&quot;\t\n&quot;,&#x27;&#x27;,line)<br>    lineContent = line.split(&#x27;, &#x27;)<br>    # print(lineContent)<br>    # if lineContent[0] == &#x27;W&#x27; or &#x27;E&#x27;:<br>    #     print(lineContent[0])<br>    if lineContent[0][0:1] == &#x27;W&#x27;:<br>        if lineContent[2] not in Count:<br>            Count.append(lineContent[2])<br>            kVw[lineContent[2]] = 1<br>        elif lineContent[2] in Count:<br>            xx = &#123;lineContent[2]: kVw[lineContent[2]] + 1&#125;<br>            kVw.update(xx)<br><br>    elif lineContent[0][0:1] == &#x27;E&#x27;:<br>        if lineContent[2] not in Count:<br>            Count.append(lineContent[2])<br>            kVe[lineContent[2]] = 1<br>        elif lineContent[2] in Count:<br>            xx = &#123;lineContent[2]: kVe[lineContent[2]] + 1&#125;<br>            kVe.update(xx)<br>print(kVw,&#x27;#W&#x27;)<br>print(kVe,&#x27;#E&#x27;)<br><br><br>    # if lineContent[2] not in Count:<br>    #     Count.append(lineContent[2])<br>    #     kV[lineContent[2]] = 1<br>    # elif lineContent[2] in Count:<br>    #     xx = &#123;lineContent[2]: kV[lineContent[2]] + 1&#125;<br>    #     kV.update(xx)<br># print(kV)<br><br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs aa.sh">HADOOP_CMD=&quot;/home/map/apps/hadoop/bin/hadoop&quot;<br>STREAM_JAR_PATH=&quot;/home/map/apps/hadoop/share/hadoop/tools/lib/hadoop-streaming-2.7.6.jar&quot;<br><br>INPUT_FILE_PATH_1=&quot;/data_output/part-00000&quot;<br>OUTPUT_PATH=&quot;/ppp_output&quot;<br>$HADOOP_CMD fs -rm -r -skipTrash $OUTPUT_PATH #每次执行时都删除输出路径，否则会出错<br><br>$HADOOP_CMD jar $STREAM_JAR_PATH \<br>  -D stream.map.output.field.separator=, \<br>  -D stream.num.map.output.key.fields=1 \<br>  -D map.output.key.field.separator=\t \<br>  -D mapred.text.key.partitioner.options=-k1,1 \<br>  -input $INPUT_FILE_PATH_1 \<br>  -output $OUTPUT_PATH \<br>  -outputformat org.apache.hadoop.mapreduce.lib.output.MultipleOutputs \<br>  -mapper &quot;python3 mainF.py&quot; \<br>  -reducer &quot;python3 reduceF.py&quot; \<br>  -jobconf mapred.map.tasks=3 \<br>  -jobconf mapred.reduce.tasks=3 \<br>  -file mainF.py \<br>  -file reduceF.py \<br>  -partitioner org.apache.hadoop.mapred.lib.KeyFieldBasedPartitioner<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
      <tag>大数据分析</tag>
      
      <tag>hadoop</tag>
      
      <tag>mapreduce</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大数据运维综合实践课堂笔记</title>
    <link href="/2021/08/30/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/08/30/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="课程笔记教师版"><a href="#课程笔记教师版" class="headerlink" title="课程笔记教师版"></a>课程笔记教师版</h1><h2 id="https-www-wolai-com-ptxibaMET7CiA4PMQMRgwU"><a href="#https-www-wolai-com-ptxibaMET7CiA4PMQMRgwU" class="headerlink" title="https://www.wolai.com/ptxibaMET7CiA4PMQMRgwU"></a><a href="https://www.wolai.com/ptxibaMET7CiA4PMQMRgwU">https://www.wolai.com/ptxibaMET7CiA4PMQMRgwU</a></h2><h1 id="第一课时开始2021-8-30"><a href="#第一课时开始2021-8-30" class="headerlink" title="第一课时开始2021.8.30"></a>第一课时开始2021.8.30</h1><hr><h1 id="虚拟化技术-docker"><a href="#虚拟化技术-docker" class="headerlink" title="虚拟化技术 docker"></a>虚拟化技术 docker</h1><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/66160215235027.png"></p><h2 id="三个概念"><a href="#三个概念" class="headerlink" title="三个概念"></a>三个概念</h2><h3 id="镜像（Image）"><a href="#镜像（Image）" class="headerlink" title="镜像（Image）"></a>镜像（Image）</h3><ul><li><p> 模板，提前设计好的与各种相关环境的环境 </p></li><li><p>镜像就是创建容器的模板</p></li></ul><h3 id="容器（Container）"><a href="#容器（Container）" class="headerlink" title="容器（Container）"></a>容器（Container）</h3><ul><li><p>运行环境、就是一个完整的操作系统</p></li><li><p>容器与容器之间做到了完全的隔离（沙箱）</p></li></ul><h3 id="仓库（Repository）"><a href="#仓库（Repository）" class="headerlink" title="仓库（Repository）"></a>仓库（Repository）</h3><ul><li>存放各种镜像的地方，可以上传下载</li><li>远程仓库：dockerHub、本地仓库</li><li>每个仓库都可以包含多个标签（Tag）,每个标签对应一个镜像</li><li>通常每个仓艰苦会包含同一个软件不同版本的镜像，可以通过<code>仓库名:标签</code>的格式来指定镜像</li></ul><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p>###配置静态ip</p><p>###安装Docker</p><h3 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h3><p>旧版本的多克被称为或。如果安装了这些，则卸载它们以及相关的依赖关系。<code>docker``docker-engine</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum remove docker \<br>    docker-client \<br>    docker-client-latest \<br>    docker-common \<br>    docker-latest \<br>    docker-latest-logrotate \<br>    docker-logrotate \<br>    docker-engine<br></code></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul><li><p>更新yum源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo yum update<br></code></pre></td></tr></table></figure></li><li><p>安装 yum-utils 及devicemapper驱动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install -y yum-utils device-mapper-persistent-data lvm2<br></code></pre></td></tr></table></figure></li><li><p>设置yum源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br></code></pre></td></tr></table></figure></li><li><p>安装Docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install docker-ce -y<br></code></pre></td></tr></table></figure></li><li><p>启动Docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start docker<br></code></pre></td></tr></table></figure></li><li><p>检查docker是否正确安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run hello-world<br></code></pre></td></tr></table></figure></li><li><p>正确安装输出如下：</p></li></ul><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/198640215242538.png"></p><hr><h1 id="第二课时开始2021-8-31"><a href="#第二课时开始2021-8-31" class="headerlink" title="第二课时开始2021.8.31"></a>第二课时开始2021.8.31</h1><hr><h1 id="Docker使用"><a href="#Docker使用" class="headerlink" title="Docker使用"></a>Docker使用</h1><h2 id="docker-run-i-ubuntu-bin-echo-“hello-world”"><a href="#docker-run-i-ubuntu-bin-echo-“hello-world”" class="headerlink" title="docker run -i ubuntu /bin/echo “hello world”"></a>docker run -i ubuntu /bin/echo “hello world”</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -i ubuntu /bin/echo &quot;hello world&quot;<br></code></pre></td></tr></table></figure><ul><li>run:运行一个容器</li><li>ubuntu:指定要运行的镜像，Docker首先从本地主机上查找镜像是否存在，如果不存在，Docker就会从镜像仓库Docker Hub下载符合的公共镜像。</li><li>/bin/echo “hello world”:在启动的容器中执行的命令。<br><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/315970215241549.png"></li></ul><h2 id="docker-run-i-t-ubuntu-bin-bash"><a href="#docker-run-i-t-ubuntu-bin-bash" class="headerlink" title="docker run -i -t ubuntu /bin/bash"></a>docker run -i -t ubuntu /bin/bash</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -i -t -d ubuntu /bin/bash<br></code></pre></td></tr></table></figure><ul><li>-t：在新容器内指定一个伪终端或终端。</li><li>-i：允许你对容器内的标准输入（STDIN）进行交互</li><li>-d 后台启动容器，不会进入容器</li></ul><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><h3 id="exit或CTRL-D来退出容器"><a href="#exit或CTRL-D来退出容器" class="headerlink" title="exit或CTRL+D来退出容器"></a>exit或CTRL+D来退出容器</h3><h3 id="docker-ps-来查看运行的容器"><a href="#docker-ps-来查看运行的容器" class="headerlink" title="docker ps 来查看运行的容器"></a>docker ps 来查看运行的容器</h3><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/392890215228889.png"></p><ul><li>CONTAINER ID：容器ID</li><li>IMAGE：使用的镜像</li><li>COMMAND：启动容器时运行的命令</li><li>CREATED：容器的创建时间</li><li>STATUS：容器的状态<ul><li>Created（已创建）</li><li>Restarting（重启中）</li><li>Running 或 Up（运行中）</li><li>Removing（迁移中）</li><li>Paused（暂停） </li><li> Exited（停止）</li><li> Dead（死亡）</li></ul></li><li>PORTS：容器的端口信息和使用的连接类型（tcp/udp）</li><li>NAMES：自动分配的容器名称</li></ul><h3 id="进入、退出容器"><a href="#进入、退出容器" class="headerlink" title="进入、退出容器"></a>进入、退出容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">进入：docker attach DockerID<br>docker exec<br>退出：exit<br>推荐使用docker exec命令进入容器，退出容器终端时，不会导致容器停止<br></code></pre></td></tr></table></figure><h3 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">docker</span> ps <span class="hljs-comment">#列出正在运行的容器 |-a 全部容器</span><br>docker rm ID <span class="hljs-comment"># 删除对应ID的容器（需先停止）| -f 强制删除</span><br></code></pre></td></tr></table></figure><h2 id="镜像操作"><a href="#镜像操作" class="headerlink" title="镜像操作"></a>镜像操作</h2><h3 id="列出本地主机上的镜像"><a href="#列出本地主机上的镜像" class="headerlink" title="列出本地主机上的镜像"></a>列出本地主机上的镜像</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker images</span> <br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/490350215215880.png"></p><ul><li>REPOSITORY：表示镜像的仓库源</li><li>TAG：镜像的标签</li><li>IMAGE ID：镜像ID</li><li>CREATED：镜像创建时间</li><li>SIZE：镜像大小</li></ul><h3 id="获取一个新的镜像"><a href="#获取一个新的镜像" class="headerlink" title="获取一个新的镜像"></a>获取一个新的镜像</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> pull ubuntu:<span class="hljs-number">13</span>.<span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><h3 id="查找镜像"><a href="#查找镜像" class="headerlink" title="查找镜像"></a>查找镜像</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker search hadoop</span><br></code></pre></td></tr></table></figure><h2 id="第三课时开始-2021-9-1"><a href="#第三课时开始-2021-9-1" class="headerlink" title="第三课时开始 2021.9.1"></a>第三课时开始 2021.9.1</h2><hr><h2 id="容器链接"><a href="#容器链接" class="headerlink" title="容器链接"></a>容器链接</h2><h3 id="网络端口映射"><a href="#网络端口映射" class="headerlink" title="网络端口映射"></a>网络端口映射</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run -d -p <span class="hljs-number">80</span>:<span class="hljs-number">5000</span> training/webapp python app.py<br></code></pre></td></tr></table></figure><ul><li>-p：指定端口映射，5000容器内部端口，80容器向外暴露的端口（本机的80端口映射到容器的5000端口）</li><li>浏览器打开IP:80输出如下<br><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/90315226357.png"></li></ul><h3 id="指定容器绑定网络地址"><a href="#指定容器绑定网络地址" class="headerlink" title="指定容器绑定网络地址"></a>指定容器绑定网络地址</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run -d -p <span class="hljs-number">127.0.0.1:5001</span>:<span class="hljs-number">5000</span> training/webapp python app.py<br></code></pre></td></tr></table></figure><ul><li>可以通过访问127.0.0.1:5001来访问容器的5001端口</li></ul><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>无法访问127.0.0.1:5001</p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/89160315218927.png"></p><h4 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h4><p>127.0.0.1应该是虚拟机的IP，在主机访问127.0.0.1定位到了主机,而不是虚拟机的127地址</p><p>5001端口正在占用说明容器没问题</p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/164760315239469.png"></p><h4 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h4><ul><li>127.0.0.1 为本机地址，外网不能访问</li><li>0.0.0.0 为外网可以访问的地址</li></ul><ol><li><p>虚拟机的127 5001端口映射出去  (暂时没有找到访问方法)</p></li><li><p>直接在虚拟机中访问127.0.0.1:5001</p></li></ol><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/255410315218084.png"></p><p>   返回了hello world 说明指定ip成功</p><h4 id="问题原理"><a href="#问题原理" class="headerlink" title="问题原理"></a>问题原理</h4><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs dns">localhost、<span class="hljs-number">127.0.0.1</span>和<span class="hljs-number">0.0.0.0</span>和本机IP的区别<br>localhost<br>localhost其实是域名，一般windows系统默认将localhost指向<span class="hljs-number">127.0.0.1</span>，但是localhost并不等于<span class="hljs-number">127.0.0.1</span>，localhost指向的IP地址是可以配置的<br><br><span class="hljs-number">127.0.0.1</span><br>首先我们要先知道一个概念，凡是以<span class="hljs-number">127</span>开头的IP地址，都是回环地址（Loop back address），其所在的回环接口一般被理解为虚拟网卡，并不是真正的路由器接口。<br><br>所谓的回环地址，通俗的讲，就是我们在主机上发送给<span class="hljs-number">127</span>开头的IP地址的数据包会被发送的主机自己接收，根本传不出去，外部设备也无法通过回环地址访问到本机。<br><br>小说明：正常的数据包会从IP层进入链路层，然后发送到网络上；而给回环地址发送数据包，数据包会直接被发送主机的IP层获取，后面就没有链路层他们啥事了。<br><br>而<span class="hljs-number">127.0.0.1</span>作为&#123;<span class="hljs-number">127</span>&#125;集合中的一员，当然也是个回环地址。只不过<span class="hljs-number">127.0.0.1</span>经常被默认配置为localhost的IP地址。<br>一般会通过ping <span class="hljs-number">127.0.0.1</span>来测试某台机器上的网络设备是否工作正常。<br><br><span class="hljs-number">0.0.0.0</span><br>首先，<span class="hljs-number">0.0.0.0</span>是不能被ping通的。在服务器中，<span class="hljs-number">0.0.0.0</span>并不是一个真实的的IP地址，它表示本机中所有的IPV4地址。监听<span class="hljs-number">0.0.0.0</span>的端口，就是监听本机中所有IP的端口。<br><br>小例子剧场（帮助理解本机IP、<span class="hljs-number">127.0.0.1</span>和<span class="hljs-number">0.0.0.0</span>）<br>现在有两台pc在同一个局域网内，分别为pc1与pc2，pc1上有一个网卡，IP地址为<span class="hljs-number">192.168.10.128</span><br><br>pc1中sever监听<span class="hljs-number">127.0.0.1</span>，则pc1中的client可以连上<span class="hljs-number">127.0.0.1</span>，<span class="hljs-number">192.168.10.128</span>连不上；而pc2中client都连不上。<br>pc1中sever监听<span class="hljs-number">192.168.10.128</span>，则pc1中的client可以连上<span class="hljs-number">192.168.10.128</span>，<span class="hljs-number">127.0.0.1</span>连不上；而pc2中client能连上<span class="hljs-number">192.168.10.128</span>。<br>pc1中sever监听<span class="hljs-number">0.0.0.0</span>，则pc1中的client可以连上<span class="hljs-number">127.0.0.1</span>和<span class="hljs-number">192.168.10.128</span>，pc2中的client能连上<span class="hljs-number">192.168.10.128</span>。<br></code></pre></td></tr></table></figure><h2 id="容器命名"><a href="#容器命名" class="headerlink" title="容器命名"></a>容器命名</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span> -d -P <span class="hljs-comment">--name runoob training/webapp python app.py</span><br></code></pre></td></tr></table></figure><h2 id="新建网络"><a href="#新建网络" class="headerlink" title="新建网络"></a>新建网络</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker<span class="hljs-built_in"> network </span>create -d<span class="hljs-built_in"> bridge </span>test-net<br></code></pre></td></tr></table></figure><ul><li>新建一个桥接(bridge)网络，命名为test-net</li><li><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/397940315236763.png"></li></ul><h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">Error response from daemon: Failed to Setup IP tables: Unable to enable SKIP DNAT rule:  (iptables failed: iptables --wait -t nat -I DOCKER -i br-<span class="hljs-number">139</span>fb34fcc94 -j RETURN: iptables: No chain<span class="hljs-regexp">/target/m</span>atch by that name.<br> (<span class="hljs-keyword">exit</span> status <span class="hljs-number">1</span>))<br><br></code></pre></td></tr></table></figure><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs maxima">关闭防火墙之后docker需要重启，执行以下命令重启docker即可：<br><br>systemctl <span class="hljs-built_in">restart</span> docker<br></code></pre></td></tr></table></figure><h2 id="连接容器"><a href="#连接容器" class="headerlink" title="连接容器"></a>连接容器</h2><ul><li>新建一个名为test1，镜像为ubuntu，并连接到网络test-net的容器  <figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">docker run -itd <span class="hljs-params">--name</span> test1 <span class="hljs-params">--network</span> test-net ubuntu <span class="hljs-string">/bin/bash</span><br></code></pre></td></tr></table></figure></li><li>新建一个名为test2，镜像为ubuntu，并连接到网络test-net的容器  <figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">docker run -itd <span class="hljs-params">--name</span> test2 <span class="hljs-params">--network</span> test-net ubuntu <span class="hljs-string">/bin/bash</span><br></code></pre></td></tr></table></figure></li></ul><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/494980315238860.png"></p><ul><li><p>进入容器test1</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker exec -it test1 <span class="hljs-regexp">/bin/</span>bash<br></code></pre></td></tr></table></figure><ul><li><p>安装ping</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">apt-get update<br>apt-get install iputils-ping<br><br>如果安装失败，先设置apt源<br>参考：https:<span class="hljs-regexp">//</span>blog.csdn.net<span class="hljs-regexp">/annita2019/</span>article<span class="hljs-regexp">/details/</span><span class="hljs-number">104743157</span>/<br></code></pre></td></tr></table></figure></li><li><p>ping test2</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ping</span> test<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/584750315243878.png"></p></li></ul></li></ul><h3 id="配置dns"><a href="#配置dns" class="headerlink" title="配置dns"></a>配置dns</h3><p>  在宿主机的 <code>/etc/docker/daemon.json</code>文件中增加以下内容来设置全部容器的dns（若不存在daemon.json文件需要新建）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123; <span class="hljs-attr">&quot;dns&quot;</span> : [ <span class="hljs-string">&quot;114.114.114.114&quot;</span>, <span class="hljs-string">&quot;8.8.8.8&quot;</span> ] &#125;<br></code></pre></td></tr></table></figure><p>设置后，启动容器的 DNS 会自动配置为 114.114.114.114 和 8.8.8.8。</p><p>配置完，需要重启 docker 才能生效。</p><p>查看容器的 DNS 是否生效可以使用以下命令，它会输出容器的 DNS 信息：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">docker <span class="hljs-keyword">run</span> -it --<span class="hljs-keyword">rm</span>  ubuntu  <span class="hljs-keyword">cat</span> etc/resolv.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/74440415243973.png"></p><h1 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h1><h2 id="什么是dockerfile"><a href="#什么是dockerfile" class="headerlink" title="什么是dockerfile"></a>什么是dockerfile</h2><p>Dockerfile 是一个用来构建镜像的文本文件，文本内容包含了构建镜像所需的指令和说明。 (文件名必须要叫dockerfile)</p><h3 id="FROM-和-RUN-指令"><a href="#FROM-和-RUN-指令" class="headerlink" title="FROM 和 RUN 指令"></a><strong>FROM 和 RUN 指令</strong></h3><p><strong>FROM</strong>：定制的镜像都是基于 FROM 的镜像，这里的 nginx 就是定制需要的基础镜像。后续的操作都是基于 nginx。 <strong>RUN</strong>：用于执行后面跟着的命令行命令。</p><h3 id="RUN命令格式"><a href="#RUN命令格式" class="headerlink" title="RUN命令格式"></a>RUN命令格式</h3><p>普通shell 格式，终端的普通命令</p><p>exec格式，RUN [“可执行文件”, “参数1”, “参数2”]</p><p>例：RUN [“./test.php”, “dev”, “offline”] 等价于 RUN ./test.php dev offline</p><h2 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h2><p>在dockerfile存放目录下执行构建动作</p><h3 id="在当前目录下新建名为dockerfile的文件"><a href="#在当前目录下新建名为dockerfile的文件" class="headerlink" title="在当前目录下新建名为dockerfile的文件"></a>在当前目录下新建名为dockerfile的文件</h3><p>文件内容如下</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">FROM</span> nginx<br>RUN echo <span class="hljs-string">&#x27;这是一个本地构建的nginx镜像&#x27;</span> &gt; <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/nginx/</span>html/index.html<br></code></pre></td></tr></table></figure><h3 id="执行命令构建镜像"><a href="#执行命令构建镜像" class="headerlink" title="执行命令构建镜像"></a>执行命令构建镜像</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">docker <span class="hljs-keyword">build </span>-t nginx:v3 . <span class="hljs-comment">#注意后面的.为上下文路径</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/167900415231253.png"></p><ul><li>红框为自己构建的镜像，蓝框为拉取的公共镜像</li></ul><h3 id="启动镜像"><a href="#启动镜像" class="headerlink" title="启动镜像"></a>启动镜像</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run -itd -p <span class="hljs-number">80</span>:<span class="hljs-number">80</span> &#123;IMAGE ID&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/244720415224075.png"></p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/327750415219939.png"></p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/393470415220957.png"></p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/437040415238745.png"></p><blockquote><p><strong>提示</strong>：乱码是因为网页内容的编码格式不对 </p></blockquote><h3 id="上下文路径"><a href="#上下文路径" class="headerlink" title="上下文路径"></a>上下文路径</h3><p>是指 docker 在构建镜像，有时候想要使用到本机的文件（比如复制），docker build 命令得知这个路径后，会将路径下的所有内容打包。</p><p>如果未说明最后一个参数，那么默认上下文路径就是 Dockerfile 所在的位置。</p><blockquote><p><strong>注意</strong>：上下文路径下不要放无用的文件，因为会一起打包发送给 docker 引擎，如果文件过多会造成过程缓慢。</p></blockquote><h2 id="docker-文件指令详解"><a href="#docker-文件指令详解" class="headerlink" title="docker 文件指令详解"></a>docker 文件指令详解</h2><h3 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a>COPY</h3><p>复制指令，从上下文目录中复制文件或者目录到容器里指定路径。<br>COPY [–chown=<user>:<group>] &lt;源路径1&gt;…  &lt;目标路径&gt;</p><p><b>[–chown=<user>:<group>]</b>：可选参数，用户改变复制到容器内文件的拥有者和属组。</p><p>源路径可以为通配符格式<br>目标路径无需创建好，如无目标路径则自行创建<br>COPY hom* /mydir/<br>COPY hom?.txt /mydir/</p><h3 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h3><p>ADD 指令和 COPY 的使用格类似（同样需求下，官方推荐使用 COPY）。功能也类似，不同之处如下：</p><ul><li>ADD 的优点：在执行 &lt;源文件&gt; 为 tar 压缩文件的话，压缩格式为 gzip, bzip2 以及 xz 的情况下，会自动复制并解压到 &lt;目标路径&gt;。</li><li>ADD 的缺点：在不解压的前提下，无法复制 tar 压缩文件。会令镜像构建缓存失效，从而可能会令镜像构建变得比较缓慢。具体是否使用，可以根据是否需要自动解压来决定。</li><li>如果想原封不动的复制tar文件到容器下，需使用copy</li></ul><h3 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h3><p>类似于 RUN 指令，用于运行程序，但二者运行的时间点不同:</p><ul><li>CMD 在docker run 时运行。</li><li>RUN 是在 docker build。</li></ul><p><strong>作用</strong>：为启动的容器指定默认要运行的程序，程序运行结束，容器也就结束。CMD 指令指定的程序可被 docker run 命令行参数中指定要运行的程序所覆盖。</p><blockquote><p>如果 Dockerfile 中如果存在多个 CMD 指令，仅最后一个生效。</p></blockquote><h3 id="ENV"><a href="#ENV" class="headerlink" title="*ENV"></a>*ENV</h3><p>设置环境变量，定义了环境变量，那么在后续的指令中，就可以使用这个环境变量。<br>ENV <key> <value> ENV <key1>=<value1> <key2>=<value2>…<br>实例<br>ENV NODE_VERSION 7.2.0</p><h3 id="ARG"><a href="#ARG" class="headerlink" title="ARG"></a>ARG</h3><p>构建参数，与 ENV 作用一致。不过作用域不一样。ARG 设置的环境变量仅对 Dockerfile 内有效，也就是说只有 docker build 的过程中有效，构建好的镜像内不存在此环境变量。</p><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h3><p>配置一个能用jdk的dockerfile镜像</p><h3 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">111doickd<br></code></pre></td></tr></table></figure><h1 id="docker-compose安装"><a href="#docker-compose安装" class="headerlink" title="docker compose安装"></a>docker compose安装</h1><h2 id="什么是docker-compose"><a href="#什么是docker-compose" class="headerlink" title="什么是docker compose"></a>什么是docker compose</h2><p>Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务。</p><h2 id="YAML"><a href="#YAML" class="headerlink" title="YAML"></a>YAML</h2><p>本节参考<a href="https://www.runoob.com/w3cnote/yaml-intro.html">https://www.runoob.com/w3cnote/yaml-intro.html</a></p><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><ul><li>大小写敏感</li><li>使用缩进表示层级关系</li><li>缩进不允许使用tab，只允许使用空格</li><li>所进的空格数不重要，只要相同的层级的元素左对齐即可</li><li>表示注释</li></ul><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>YAML支持以下几种数据类型：</p><ul><li>对象：键值对的集合，又称为映射（mapping）/哈希（hashes）/字典（dictionary）</li><li>数组：一组按次序排列的值，又称为序列（sequence）/列表（list）</li><li>纯量（scalars）：单个的、不可再分的值</li></ul><h3 id="YAML对象"><a href="#YAML对象" class="headerlink" title="YAML对象"></a>YAML对象</h3><p>对象键值对使用冒号结构表示 <strong>key: value</strong>，冒号后面要加一个空格。<br>也可以使用 **key:{key1: value1, key2: value2, …}**。<br>还可以使用缩进表示层级关系；</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">key</span>: child-key: value<br> <span class="hljs-attribute">child</span>-key<span class="hljs-number">2</span>: value<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h3 id="YAML数组"><a href="#YAML数组" class="headerlink" title="YAML数组"></a>YAML数组</h3><p>以 - 开头的行表示构成一个数组：</p><ul><li>A</li><li>B</li><li>C</li></ul><p>YAML 支持多维数组，可以使用行内表示：<br>key: [value1, value2, …]<br>数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。</p><ul><li>A</li><li>B</li><li>C</li></ul><p>例子<br>companies:</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs dts">- <br><span class="hljs-symbol">  id:</span> <span class="hljs-number">1</span> <br><span class="hljs-symbol">  name:</span> company1<br><span class="hljs-symbol">  price:</span> <span class="hljs-number">200</span>W <br>- <br><span class="hljs-symbol">  id:</span> <span class="hljs-number">2</span> <br><span class="hljs-symbol">  name:</span> company2<br><span class="hljs-symbol">  price:</span> <span class="hljs-number">500</span>W<br></code></pre></td></tr></table></figure><p>意思是 companies 属性是一个数组，每一个数组元素又是由 id、name、price 三个属性构成。<br>数组也可以使用流式(flow)的方式表示：<br>companies: [{id: 1,name: company1,price: 200W},{id: 2,name: company2,price: 500W}]</p><h3 id="纯量"><a href="#纯量" class="headerlink" title="纯量"></a>纯量</h3><p>纯量是最基本的，不可再分的值，包括：</p><ul><li>字符串</li><li>布尔值</li><li>整数</li><li>浮点数</li><li>Null</li><li>时间</li><li>日期</li></ul><p>实例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs text">boolean: <br>    - TRUE  #true,True都可以<br>    - FALSE  #false，False都可以<br>float:<br>    - 3.14<br>    - 6.8523015e+5  #可以使用科学计数法<br>int:<br>    - 123<br>    - 0b1010_0111_0100_1010_1110    #二进制表示<br>null:<br>    nodeName: &#x27;node&#x27;<br>    parent: ~  #使用~表示null<br>string:<br>    - 哈哈<br>    - &#x27;Hello world&#x27;  #可以使用双引号或者单引号包裹特殊字符<br>    - newline<br>      newline2    #字符串可以拆成多行，每一行会被转化成一个空格<br>date:<br>    - 2018-02-17    #日期必须使用ISO 8601格式，即yyyy-MM-dd<br>datetime: <br>    -  2018-02-17T15:02:31+08:00    #时间使用ISO 8601格式，时间和日期之间使用T连接，最后使用+代表时区<br></code></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>&amp; 锚点和 * 别名，可以用来引用:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">defaults: &amp;defaults<br>  adapter:  postgres<br>  host:     localhost<br><br>development:<br>  database: myapp_development<br>  &lt;&lt;: *defaults<br><br>test:<br>  database: myapp_test<br>  &lt;&lt;: *defaults<br></code></pre></td></tr></table></figure><p>相当于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs text">defaults:<br>  adapter:  postgres<br>  host:     localhost<br><br>development:<br>  database: myapp_development<br>  adapter:  postgres<br>  host:     localhost<br><br>test:<br>  database: myapp_test<br>  adapter:  postgres<br>  host:     localhost<br></code></pre></td></tr></table></figure><p><strong>&amp;</strong> 用来建立锚点（defaults），**&lt;&lt;** 表示合并到当前数据，***** 用来引用锚点。</p><h2 id="Compose-使用的三个步骤"><a href="#Compose-使用的三个步骤" class="headerlink" title="Compose 使用的三个步骤"></a>Compose 使用的三个步骤</h2><ul><li>使用 Dockerfile 定义应用程序的环境。</li><li>使用 docker-compose.yml 定义构成应用程序的服务，这样它们可以在隔离环境中一起运行。</li><li>最后，执行 docker-compose up 命令来启动并运行整个应用程序。<h3 id="compose安装"><a href="#compose安装" class="headerlink" title="compose安装"></a>compose安装</h3>curl -L “<a href="https://get.daocloud.io/docker/compose/releases/download/1.12.0/docker-compose-(uname%E2%88%92s)%E2%88%92">https://get.daocloud.io/docker/compose/releases/download/1.12.0/docker-compose-(uname−s)−</a>(uname -s)-(uname−s)−(uname -m)” -o /usr/local/bin/docker-compose<br>下载并安装<br>chmod +x /usr/local/bin/docker-compose<br>更改权限可执行<h3 id="测试安装是否成功"><a href="#测试安装是否成功" class="headerlink" title="测试安装是否成功"></a>测试安装是否成功</h3><code>docker-compose -version</code><br>docker-compose version 1.12.0, build b31ff33</li></ul><h3 id="yml-配置指令"><a href="#yml-配置指令" class="headerlink" title="yml 配置指令"></a>yml 配置指令</h3><h4 id="version"><a href="#version" class="headerlink" title="version"></a>version</h4><p>指定本 yml 的写法格式（格式的版本）</p><h4 id="services"><a href="#services" class="headerlink" title="services"></a>services</h4><p>服务列表，用数组形式展现，每个服务可为一个容器</p><h4 id="image"><a href="#image" class="headerlink" title="image"></a>image</h4><p>指定服务所用镜像</p><h4 id="container-name"><a href="#container-name" class="headerlink" title="container_name"></a>container_name</h4><p>指定容器名字，而非默认</p><h4 id="restart"><a href="#restart" class="headerlink" title="restart"></a>restart</h4><ul><li>no：是默认的重启策略，在任何情况下都不会重启容器。</li><li>always：容器总是重新启动。(docker重启时）</li><li>on-failure：在容器非正常退出时（退出状态非0），才会重启容器。</li><li>unless-stopped：在容器退出时总是重启容器，但是不考虑在Docker守护进程启动时就已经停止了的容器</li></ul><h4 id="networks"><a href="#networks" class="headerlink" title="networks"></a>networks</h4><h5 id="配置容器连接的网络，引用顶级-networks-下的条目"><a href="#配置容器连接的网络，引用顶级-networks-下的条目" class="headerlink" title="配置容器连接的网络，引用顶级 networks 下的条目"></a>配置容器连接的网络，引用顶级 networks 下的条目</h5><p>实例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell">services:<br>some-service: <br>networks:<br>some-network:<br>aliases:<br>- alias1<br>other-network:<br>aliases:<br>         - alias2<br> ports:<br>       - &quot;50070:50070&quot;<br>       - &quot;9000:9000&quot;<br>extra_hosts:<br>- &quot;hadoop-nn:172.25.1.100&quot;<br>- &quot;hadoop-dn1:172.25.1.101&quot;<br>- &quot;hadoop-dn2:172.25.1.102&quot;<br>- &quot;hadoop-dn3:172.25.1.103&quot;    <br>networks:<br>  some-network:<br>    # Use a custom driver<br>    driver: custom-driver-1<br></code></pre></td></tr></table></figure><h5 id="自定义扩展网卡"><a href="#自定义扩展网卡" class="headerlink" title="自定义扩展网卡"></a>自定义扩展网卡</h5><p>实例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">　　　　networks:<br>　　　　  extnetwork: 　　#自定义网络名称<br>　　　　    ipam:　　#ip地址管理<br>　　　　      config: 　　#配置信息<br>　　　　        - subnet: 172.20.0.0/24　　#网段管理<br>　　　　          gateway: 172.20.0.1　　  #网关地址<br></code></pre></td></tr></table></figure><h4 id="ipv4-address"><a href="#ipv4-address" class="headerlink" title="ipv4_address"></a>ipv4_address</h4><p>为服务的容器指定一个静态ip地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">networks:<br>  hadoop-hdfs:<br>    ipv4_address: 172.25.1.100 <br></code></pre></td></tr></table></figure><h4 id="ports"><a href="#ports" class="headerlink" title="ports"></a>ports</h4><p>映射端口<br>实例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">   ports:<br>- &quot;50070:50070&quot;<br>- &quot;9000:9000&quot;<br></code></pre></td></tr></table></figure><h4 id="extra-hosts"><a href="#extra-hosts" class="headerlink" title="extra_hosts"></a>extra_hosts</h4><p>添加主机名的标签，就是往<code>/etc/hosts</code>文件中添加一些记录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">extra_hosts:<br>  - &quot;hadoop-nn:172.25.1.100&quot;<br>  - &quot;hadoop-dn1:172.25.1.101&quot;<br>  - &quot;hadoop-dn2:172.25.1.102&quot;<br>  - &quot;hadoop-dn3:172.25.1.103&quot;<br></code></pre></td></tr></table></figure><h4 id="docker-compose-构建停止启动命令"><a href="#docker-compose-构建停止启动命令" class="headerlink" title="docker-compose 构建停止启动命令"></a>docker-compose 构建停止启动命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">构建docekr-compose集群<br>docker-compose up<br>停止docker-compose集群<br>docker-compose stop<br>启动doceker-compose集群<br>docker-compose start<br></code></pre></td></tr></table></figure><h1 id="docker安装hadoop"><a href="#docker安装hadoop" class="headerlink" title="docker安装hadoop"></a>docker安装hadoop</h1><h2 id="构建基础环境镜像"><a href="#构建基础环境镜像" class="headerlink" title="构建基础环境镜像"></a>构建基础环境镜像</h2><h3 id="拉取ubuntu-14-04镜像"><a href="#拉取ubuntu-14-04镜像" class="headerlink" title="拉取ubuntu:14.04镜像"></a>拉取ubuntu:14.04镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull ubuntu:14.04<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/335870515211994.png"></p><h3 id="创建虚拟nat网卡"><a href="#创建虚拟nat网卡" class="headerlink" title="创建虚拟nat网卡"></a>创建虚拟nat网卡</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker network create -d bridge baseEnv-net<br></code></pre></td></tr></table></figure><h3 id="下载sources-list及ssh-config"><a href="#下载sources-list及ssh-config" class="headerlink" title="下载sources.list及ssh_config"></a>下载sources.list及ssh_config</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">宿主机中<br>wget web.wanqqq29.cn/sources.list<br>wget web.wanqqq29.cn/ssh_config<br></code></pre></td></tr></table></figure><h3 id="编写dockerfile"><a href="#编写dockerfile" class="headerlink" title="编写dockerfile"></a>编写dockerfile</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs shell">** 旧版本(免密登录、ssh无效) **<br>FROM ubuntu:14.04<br>RUN mv /etc/apt/sources.list /etc/apt/sources.bak<br>COPY files/sources.list /etc/apt/<br>RUN apt-get update &amp;&amp; \<br>apt-get install openssh-server openssh-client -y &amp;&amp; \<br>mv /etc/ssh/ssh_config /etc/ssh/ssh_config.bak<br>COPY files/ssh_config /etc/ssh/<br>RUN mkdir -p /var/run/sshd &amp;&amp; \<br>echo &#x27;root:root&#x27; | chpasswd &amp;&amp; \<br>cd /root<br>CMD /var/run/sshd -D<br><br>**最终版本**<br>FROM ubuntu:14.04<br><br>RUN mv /etc/apt/sources.list /etc/apt/sources.bak<br><br>COPY files/sources.list /etc/apt/<br><br>RUN apt-get update &amp;&amp; \<br>apt-get install openssh-server openssh-client -y &amp;&amp; \<br>mv /etc/ssh/ssh_config /etc/ssh/ssh_config.bak<br>mkdir -p /var/run/sshd &amp;&amp; \<br>echo &#x27;root:root&#x27; | chpasswd <br><br>RUN mkdir /root/.ssh &amp;&amp; ssh-keygen -q -P &#x27;&#x27; -t dsa -f /root/.ssh/id_dsa &amp;&amp; \<br>cat /root/.ssh/id_dsa.pub &gt;&gt; /root/.ssh/authorized_keys<br><br>COPY files/ssh_config /etc/ssh/<br><br><br><br>EXPOSE 22<br>WORKDIR /root <br> <br>CMD /usr/sbin/sshd -D<br><br><br>** RUN层优化 **<br>FROM ubuntu:14.04<br><br>RUN mv /etc/apt/sources.list /etc/apt/sources.bak<br><br>COPY files/sources.list /etc/apt/<br><br>RUN apt-get update &amp;&amp; \<br>apt-get install openssh-server openssh-client -y &amp;&amp; \<br>mv /etc/ssh/ssh_config /etc/ssh/ssh_config.bak &amp;&amp; \<br>mkdir -p /var/run/sshd &amp;&amp; \<br>echo &#x27;root:root&#x27; | chpasswd &amp;&amp; \<br>mkdir /root/.ssh &amp;&amp; ssh-keygen -q -P &#x27;&#x27; -t dsa -f /root/.ssh/id_dsa &amp;&amp; \<br>cat /root/.ssh/id_dsa.pub &gt;&gt; /root/.ssh/authorized_keys &amp;&amp; \<br>apt-get clean &amp;&amp; rm -rf /var/lib/apt/lists/*<br><br>COPY files/ssh_config /etc/ssh/<br><br>EXPOSE 22<br>WORKDIR /root  <br>CMD /usr/sbin/sshd -D<br></code></pre></td></tr></table></figure><h4 id="优化空间"><a href="#优化空间" class="headerlink" title="优化空间"></a>优化空间</h4><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/484450515223532.png"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">apt-get clean &amp;&amp; rm -rf <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/apt/</span>lists/* <br>删除apt-get缓存<br>v2比v1 小了<span class="hljs-number">25</span>M<br></code></pre></td></tr></table></figure><h3 id="构建镜像-1"><a href="#构建镜像-1" class="headerlink" title="构建镜像"></a>构建镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker build -t ubuntu-ssh:v1 .<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/7740615214251.png"></p><h3 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -itd --name baseEnv1 --network baseEnv-net ubuntu-ssh:v1 <br>docker run -itd --name baseEnv2 --network baseEnv-net ubuntu-ssh:v1 <br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/112300615233406.png"></p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/171880615213058.png"></p><h3 id="测试是否免密登录"><a href="#测试是否免密登录" class="headerlink" title="测试是否免密登录"></a>测试是否免密登录</h3><h4 id="查看ip"><a href="#查看ip" class="headerlink" title="查看ip"></a>查看ip</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker inspect &#123;name&#125;<br>172.19.0.2/3<br></code></pre></td></tr></table></figure><h4 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker exec -it baseEnv1 /bin/bash<br>ssh root@localhost<br>ssh root@&#123;baseEnv2.IP&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/240480615211504.png"></p><h3 id="问题-2"><a href="#问题-2" class="headerlink" title="问题"></a>问题</h3><h4 id="1-ssh服务起不来"><a href="#1-ssh服务起不来" class="headerlink" title="1. ssh服务起不来"></a>1. ssh服务起不来</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">```<br>CMD /var/run/sshd -D<br>sudo service ssh start<br>无效<br>```<br><br>启动容器后，ssh登录22端口拒绝<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/338300615241322.png"></p><p>通过<code>ps -e |grep ssh</code>命令查看ssh进程没起来</p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/416530615220256.png"></p><h5 id="问题分析-1"><a href="#问题分析-1" class="headerlink" title="- 问题分析"></a>- 问题分析</h5><ul><li><p>没有暴露22端口</p><p>启动容器时添加了 /bin/bash 替换了最后的CMD 导致Dockerfile中的CMD被替代掉</p></li></ul><h5 id="问题解决-1"><a href="#问题解决-1" class="headerlink" title="- 问题解决"></a>- 问题解决</h5><ul><li>暴露端口<code>EXPOSE 22</code></li><li>去掉/bin/bash</li></ul><h4 id="2-免密登录配置不成功"><a href="#2-免密登录配置不成功" class="headerlink" title="2.免密登录配置不成功"></a>2.免密登录配置不成功</h4><h5 id="问题分析-2"><a href="#问题分析-2" class="headerlink" title="- 问题分析"></a>- 问题分析</h5><ul><li>在刚开始的dockerfile中，没有配置免密登录</li><li>配置免密登录后修改root密码</li><li>免密登录需要多次交互操作</li></ul><h5 id="问题解决-2"><a href="#问题解决-2" class="headerlink" title="-  问题解决"></a>-  问题解决</h5><ul><li><p>修改root密码放在配置免密前</p></li><li><p>减少交互操作配置免密登录</p></li><li><p>```shell<br>ssh-keygen -q -P ‘’ -t dsa -f /root/.ssh/id_dsa<br>-q -P ‘’ 取消密码确认操作<br>-f 指定生成地址</p></li></ul><h2 id="配置JDK"><a href="#配置JDK" class="headerlink" title="配置JDK"></a>配置JDK</h2><p>因为Hadoop、Zookeeper、Spark依赖于JVM，因此本模块功能为构建JDK镜像作为Hadoop、Zookeeper和Spark的基础镜像。</p><h3 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">（<span class="hljs-number">1</span>）采用<span class="hljs-number">2</span>.<span class="hljs-number">1</span>中构建的ubuntu-ssh:<span class="hljs-built_in">v1</span>作为基础镜像<br>（<span class="hljs-number">2</span>）将<span class="hljs-keyword">jdk-8u231-linux-x64.tar.gz（也可采用其他版本，建议1.8JDK）复制并解压到/root/tool目录下，为了精简镜像，解压完成后需要将jdk-8u231-linux-x64.tar.gz删除。</span><br><span class="hljs-keyword"></span>（<span class="hljs-number">3</span>）配置<span class="hljs-keyword">Java的环境变量</span><br><span class="hljs-keyword"></span>（<span class="hljs-number">4</span>）通过docker <span class="hljs-keyword">build构jdk:v1镜像</span><br></code></pre></td></tr></table></figure><h3 id="编写dockerfile-1"><a href="#编写dockerfile-1" class="headerlink" title="编写dockerfile"></a>编写dockerfile</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs awk">FROM ubuntu-ssh:v1<br><br>RUN mkdir -p <span class="hljs-regexp">/root/</span>tool<br><br>COPY files<span class="hljs-regexp">/jdk.tar.gz /</span>root/<br><br>RUN tar -zxvf <span class="hljs-regexp">/root/</span>jdk.tar.gz -C <span class="hljs-regexp">/root/</span>tool/  &amp;&amp;  \<br>        mv <span class="hljs-regexp">/root/</span>tool<span class="hljs-regexp">/jdk1.8.0_231 /</span>root<span class="hljs-regexp">/tool/</span>java &amp;&amp; \<br>        rm -rf <span class="hljs-regexp">/root/</span>jdk.tar.gz<br><br>ENV JAVA_HOME=<span class="hljs-regexp">/root/</span>tool/java<br>ENV PATH=<span class="hljs-variable">$JAVA_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br><br>CMD <span class="hljs-regexp">/usr/</span>sbin/sshd -d<br></code></pre></td></tr></table></figure><h3 id="构建镜像-2"><a href="#构建镜像-2" class="headerlink" title="构建镜像"></a>构建镜像</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">docker <span class="hljs-keyword">build </span>-t ubuntu-<span class="hljs-keyword">jdk:v1 </span>.<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/556010615220158.png"></p><h3 id="创建容器-1"><a href="#创建容器-1" class="headerlink" title="创建容器"></a>创建容器</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">docker run -itd --name <span class="hljs-keyword">jdkEnv1 </span>--network <span class="hljs-keyword">baseEnv-net </span>ubuntu-<span class="hljs-keyword">jdk:v1 </span><br>docker run -itd --name <span class="hljs-keyword">jdkEnv2 </span>--network <span class="hljs-keyword">baseEnv-net </span>ubuntu-<span class="hljs-keyword">jdk:v1 </span><br></code></pre></td></tr></table></figure><h3 id="测试是否成功"><a href="#测试是否成功" class="headerlink" title="测试是否成功"></a>测试是否成功</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker exec -it jdkEnv1 <span class="hljs-regexp">/bin/</span>bash<br>java -version <span class="hljs-regexp">/java /</span>javac<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/135020815230480.png"></p><h2 id="Hadoop部署"><a href="#Hadoop部署" class="headerlink" title="Hadoop部署"></a>Hadoop部署</h2><h3 id="集群规划"><a href="#集群规划" class="headerlink" title="集群规划"></a>集群规划</h3><h4 id="hdfs集群规划"><a href="#hdfs集群规划" class="headerlink" title="hdfs集群规划"></a>hdfs集群规划</h4><table><thead><tr><th>容器主机名/容器名</th><th>容器IP（网络名称hadoop-hdfs）</th><th>节点进程</th><th>容器启动镜像</th></tr></thead><tbody><tr><td>hadoop-nn</td><td>172.25.1.100</td><td>NameNode、SecondaryNameNode</td><td>namenode:v1</td></tr><tr><td>hadoop-dn1</td><td>172.25.1.101</td><td>DataNode</td><td>datanode:v1</td></tr><tr><td>hadoop-dn2</td><td>172.25.1.102</td><td>DataNode</td><td>datanode:v1</td></tr><tr><td>hadoop-dn3</td><td>172.25.1.103</td><td>DataNode</td><td>datanode:v1</td></tr></tbody></table><h4 id="yarn集群规划"><a href="#yarn集群规划" class="headerlink" title="yarn集群规划"></a>yarn集群规划</h4><table><thead><tr><th>容器主机名/容器名</th><th>容器IP（网络名称hadoop-yarn）</th><th>节点进程</th><th>容器启动镜像</th></tr></thead><tbody><tr><td>hadoop-rm</td><td>172.24.1.100</td><td>ResourceManager</td><td>resourcemanager:v1</td></tr><tr><td>hadoop-nm1</td><td>172.24.1.101</td><td>NodeManager</td><td>nodemanager:v1</td></tr><tr><td>hadoop-nm2</td><td>172.24.1.102</td><td>NodeManager</td><td>nodemanager:v1</td></tr><tr><td>hadoop-nm3</td><td>172.24.1.103</td><td>NodeManager</td><td>nodemanager:v1</td></tr></tbody></table><h3 id="设计思路-1"><a href="#设计思路-1" class="headerlink" title="设计思路"></a>设计思路</h3><p>当容器启动时，需要启动hdfs的所有进程，因此设计为需要定义namenode和datanode两个镜像文件。因为hdfs和yarn的需要的配置文件相同，因此先自定义一个hadoop-base的基础镜像，然后再分别构建namenode、datanode、resourcemanager和nodemanager镜像。</p><h3 id="构建hadoopBase镜像"><a href="#构建hadoopBase镜像" class="headerlink" title="构建hadoopBase镜像"></a>构建hadoopBase镜像</h3><h4 id="基础步骤"><a href="#基础步骤" class="headerlink" title="基础步骤"></a>基础步骤</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">（<span class="hljs-number">1</span>）<span class="hljs-number">2.2</span>中构建的ubuntu-jdk:v1作为基础镜像<br>（<span class="hljs-number">2</span>）将hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">6</span>.tar.gz（可采用其他版本）复制到容器的<span class="hljs-regexp">/root目录下并解压至/</span>root/tools目录下，为了精简镜像，需要将hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">6</span>.tar.gz删除。<br>（<span class="hljs-number">3</span>）创建<span class="hljs-regexp">/root/</span>hdfs<span class="hljs-regexp">/namenode、/</span>root<span class="hljs-regexp">/hdfs/</span>datanode（hdfs-site.xml指定目录）和<span class="hljs-regexp">/root/</span>apps<span class="hljs-regexp">/hadoop/</span>logs（启动namenode时产生的日志文件保存在该目录下）目录<br>（<span class="hljs-number">4</span>）配置Hadoop环境变量<br>（<span class="hljs-number">5</span>）将配置文件复制的<span class="hljs-regexp">/tmp/</span>目录下，并在<span class="hljs-regexp">/tmp/</span>下移动到<span class="hljs-variable">$HADOOP_HOME</span><span class="hljs-regexp">/etc/</span>hadoop/目录中<br>** 需要修改hadoop-env.sh中JAVA_HOME的路径为<span class="hljs-regexp">/root/</span>tool/java<br>（<span class="hljs-number">6</span>）通过docker-build构建hadoop-base:v1镜像<br></code></pre></td></tr></table></figure><h4 id="编写dockerfile-2"><a href="#编写dockerfile-2" class="headerlink" title="编写dockerfile"></a>编写dockerfile</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs awk">FROM ubuntu-jdk:v1<br><br>COPY files<span class="hljs-regexp">/hadoop-2.7.6.tar.gz /</span>root<br><br>RUN tar -zxvf <span class="hljs-regexp">/root/</span>hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">6</span>.tar.gz -C <span class="hljs-regexp">/root/</span>tool &amp;&amp; \<br>mv <span class="hljs-regexp">/root/</span>tool<span class="hljs-regexp">/hadoop-2.7.6 /</span>root<span class="hljs-regexp">/tool/</span>hadoop &amp;&amp; \<br>rm -rf <span class="hljs-regexp">/root/</span>hadoop-<span class="hljs-number">2.7</span>.<span class="hljs-number">6</span>.tar.gz &amp;&amp; \<br>mkdir -p <span class="hljs-regexp">/root/</span>hdfs/namenode &amp;&amp; \<br>mkdir -p <span class="hljs-regexp">/root/</span>hdfs/datanode &amp;&amp; \<br>mkdir -p <span class="hljs-regexp">/root/</span>tool<span class="hljs-regexp">/hadoop/</span>logs <br><br>ENV HADOOP_HOME=<span class="hljs-regexp">/root/</span>tool/hadoop<br>ENV PATH=<span class="hljs-variable">$HADOOP_HOME</span><span class="hljs-regexp">/bin:$HADOOP_HOME/</span>sbin:<span class="hljs-variable">$PATH</span><br><br>COPY files<span class="hljs-regexp">/config/</span>* <span class="hljs-regexp">/tmp/</span><br><br>RUN mv <span class="hljs-regexp">/tmp/</span>hadoop-env.sh <span class="hljs-variable">$HADOOP_HOME</span><span class="hljs-regexp">/etc/</span>hadoop/hadoop-env.sh &amp;&amp; \<br>mv <span class="hljs-regexp">/tmp/</span>hdfs-site.xml <span class="hljs-variable">$HADOOP_HOME</span><span class="hljs-regexp">/etc/</span>hadoop/hdfs-site.xml &amp;&amp; \<br>mv <span class="hljs-regexp">/tmp/</span>core-site.xml <span class="hljs-variable">$HADOOP_HOME</span><span class="hljs-regexp">/etc/</span>hadoop/core-site.xml &amp;&amp; \<br>mv <span class="hljs-regexp">/tmp/m</span>apred-site.xml <span class="hljs-variable">$HADOOP_HOME</span><span class="hljs-regexp">/etc/</span>hadoop/mapred-site.xml &amp;&amp; \<br>mv <span class="hljs-regexp">/tmp/y</span>arn-site.xml <span class="hljs-variable">$HADOOP_HOME</span><span class="hljs-regexp">/etc/</span>hadoop/yarn-site.xml &amp;&amp; \<br>apt-get clean &amp;&amp; rm -rf <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/apt/</span>lists/*<br><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/433400815233864.png"></p><h4 id="启动镜像验证"><a href="#启动镜像验证" class="headerlink" title="启动镜像验证"></a>启动镜像验证</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run -itd --name hadoopBase<span class="hljs-number">1</span> --network baseEnv-net hadoop-base:v<span class="hljs-number">1</span><br><span class="hljs-attribute">docker</span> exec -it hadoopBase<span class="hljs-number">1</span> /bin/bash<br><span class="hljs-attribute">hadoop</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/525540815238662.png"></p><h3 id="namenode镜像"><a href="#namenode镜像" class="headerlink" title="namenode镜像"></a>namenode镜像</h3><h5 id="基础步骤-1"><a href="#基础步骤-1" class="headerlink" title="基础步骤"></a>基础步骤</h5><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stata">（1）构建的hadoop-base:v1作为基础镜像<br>（2）namenode节点需要格式化，因此运行hadoop namenode –<span class="hljs-keyword">format</span>命令<br>（3）将<span class="hljs-keyword">run</span>.<span class="hljs-keyword">sh</span>(启动namenode和sshd的脚本)复制到/root下并添加执行权限<br>（3）指定数据卷/root/hdfs<br>（4）暴露端口50070和9000<br>（5）指定容器启动运行<span class="hljs-keyword">run</span>.<span class="hljs-keyword">sh</span>脚本<br>（6）通过docker-build构建namenode:v1镜像<br></code></pre></td></tr></table></figure><h5 id="sh文件"><a href="#sh文件" class="headerlink" title="sh文件"></a>sh文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><br>hadoop namenode -format<br><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;启动namenode&#x27;</span><br>/root/tool/hadoop/sbin/hadoop-daemon.sh start namenode<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;启动ssh服务&#x27;</span><br>/usr/sbin/sshd -D<br><br></code></pre></td></tr></table></figure><h5 id="编写dockerfile-3"><a href="#编写dockerfile-3" class="headerlink" title="编写dockerfile"></a>编写dockerfile</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk">FROM hadoop-base:v1<br><br>COPY files<span class="hljs-regexp">/* /</span>root/<br><br>RUN mv <span class="hljs-regexp">/root/</span>slaves <span class="hljs-variable">$HADOOP_HOME</span><span class="hljs-regexp">/etc/</span>hadoop/slaves &amp;&amp; \<br>hadoop namenode -format<br><br>VOLUME <span class="hljs-regexp">/root/</span>hdfs<br><br>EXPOSE <span class="hljs-number">50070</span><br>EXPOSE <span class="hljs-number">9000</span><br><br>RUN chmod +x run.sh<br><br>CMD sh run.sh<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/58710915235021.png"></p><h5 id="构建镜像-3"><a href="#构建镜像-3" class="headerlink" title="构建镜像"></a>构建镜像</h5><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">docker <span class="hljs-keyword">build </span>-t namenode:<span class="hljs-built_in">v1</span> .<br></code></pre></td></tr></table></figure><h5 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run -itd --name namenode<span class="hljs-number">1</span> --network baseEnv-net namenode:v<span class="hljs-number">1</span> <br><span class="hljs-attribute">docker</span> exec -it namenode<span class="hljs-number">1</span> /bin/bash<br><span class="hljs-attribute">jps</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/193720915227106.png"></p><h3 id="datanode镜像"><a href="#datanode镜像" class="headerlink" title="datanode镜像"></a>datanode镜像</h3><h4 id="基础步骤-2"><a href="#基础步骤-2" class="headerlink" title="基础步骤"></a>基础步骤</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stata">（1）构建的hadoop-base:v1作为基础镜像<br>（2）将<span class="hljs-keyword">run</span>.<span class="hljs-keyword">sh</span>(启动datanode和sshd的脚本)复制到/root下并添加执行权限<br>（3）指定容器启动运行<span class="hljs-keyword">run</span>.<span class="hljs-keyword">sh</span>脚本<br>（4）通过docker-build构建datanode:v1镜像<br></code></pre></td></tr></table></figure><h4 id="sh文件-1"><a href="#sh文件-1" class="headerlink" title="sh文件"></a>sh文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;启动datanode&#x27;</span><br>/root/tool/hadoop/sbin/hadoop-daemon.sh start datanode<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;启动ssh服务&#x27;</span><br>/usr/sbin/sshd -D<br></code></pre></td></tr></table></figure><h4 id="dockerfile"><a href="#dockerfile" class="headerlink" title="dockerfile"></a>dockerfile</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">FROM hadoop-base:v1<br><br>COPY files<span class="hljs-regexp">/* /</span>root/<br><br>RUN mv <span class="hljs-regexp">/root/</span>slaves <span class="hljs-variable">$HADOOP_HOME</span><span class="hljs-regexp">/etc/</span>hadoop/slaves &amp;&amp; \<br>chmod +x run.sh<br><br>CMD sh run.sh<br></code></pre></td></tr></table></figure><h4 id="构建镜像-4"><a href="#构建镜像-4" class="headerlink" title="构建镜像"></a>构建镜像</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">docker <span class="hljs-keyword">build </span>-t datanode:<span class="hljs-built_in">v1</span> .<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/310880915217945.png"></p><h4 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run -itd --name datanode<span class="hljs-number">1</span> --network baseEnv-net datanode:v<span class="hljs-number">1</span> <br><span class="hljs-attribute">docker</span> exec -it datanode<span class="hljs-number">1</span> /bin/bash<br><span class="hljs-attribute">jps</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/383770915235586.png"></p><h3 id="resourcemanager镜像"><a href="#resourcemanager镜像" class="headerlink" title="resourcemanager镜像"></a>resourcemanager镜像</h3><h4 id="基础步骤-3"><a href="#基础步骤-3" class="headerlink" title="基础步骤"></a>基础步骤</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stata">（1）构建的hadoop-bash:v1作为基础镜像<br>（2）将<span class="hljs-keyword">run</span>.<span class="hljs-keyword">sh</span>(启动resourcemanager和sshd的脚本)复制到/root下并添加执行权限<br>（3）暴露端口8080<br>（4）指定容器启动运行<span class="hljs-keyword">run</span>.<span class="hljs-keyword">sh</span>脚本<br>（5）通过docker-build构建resourcemanager:v1镜像<br></code></pre></td></tr></table></figure><h4 id="sh文件-2"><a href="#sh文件-2" class="headerlink" title="sh文件"></a>sh文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;启动resourcemanager&#x27;</span><br>/root/tool/hadoop/sbin/yarn-daemon.sh start resourcemanager<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;启动ssh服务&#x27;</span><br>/usr/sbin/sshd -D<br></code></pre></td></tr></table></figure><h4 id="dockerfile-文件"><a href="#dockerfile-文件" class="headerlink" title="dockerfile 文件"></a>dockerfile 文件</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk">FROM hadoop-base:v1<br><br>COPY files<span class="hljs-regexp">/* /</span>root/<br><br>RUN mv <span class="hljs-regexp">/root/</span>slaves <span class="hljs-variable">$HADOOP_HOME</span><span class="hljs-regexp">/etc/</span>hadoop/slaves<br><br>RUN chmod +x run.sh<br><br>EXPOSE <span class="hljs-number">8080</span><br><br>CMD sh run.sh<br></code></pre></td></tr></table></figure><h4 id="构建镜像-5"><a href="#构建镜像-5" class="headerlink" title="构建镜像"></a>构建镜像</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">docker <span class="hljs-keyword">build </span>-t resourcemanager:<span class="hljs-built_in">v1</span> .<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/490700915226566.png"></p><h4 id="验证-2"><a href="#验证-2" class="headerlink" title="验证"></a>验证</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run -itd --name resourcemanager<span class="hljs-number">1</span> --network baseEnv-net resourcemanager:v<span class="hljs-number">1</span> <br><span class="hljs-attribute">docker</span> exec -it resourcemanager<span class="hljs-number">1</span> /bin/bash<br><span class="hljs-attribute">jps</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/583550915226222.png"></p><h3 id="nodemanager镜像"><a href="#nodemanager镜像" class="headerlink" title="nodemanager镜像"></a>nodemanager镜像</h3><h4 id="基础步骤-4"><a href="#基础步骤-4" class="headerlink" title="基础步骤"></a>基础步骤</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stata">（1）构建的hadoop-bash:v1作为基础镜像<br>（2）将<span class="hljs-keyword">run</span>.<span class="hljs-keyword">sh</span>(启动nodemanager和sshd的脚本)复制到/root下并添加执行权限<br>（3）指定容器启动运行<span class="hljs-keyword">run</span>.<span class="hljs-keyword">sh</span>脚本<br>（4）通过docker-build构建node:v1镜像<br></code></pre></td></tr></table></figure><h4 id="sh文件-3"><a href="#sh文件-3" class="headerlink" title="sh文件"></a>sh文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;启动resourcemanager&#x27;</span><br>/root/tool/hadoop/sbin/yarn-daemon.sh start nodemanager <br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;启动ssh服务&#x27;</span><br>/usr/sbin/sshd -D<br></code></pre></td></tr></table></figure><h4 id="dockerfile-文件-1"><a href="#dockerfile-文件-1" class="headerlink" title="dockerfile 文件"></a>dockerfile 文件</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">FROM hadoop-base:v1<br><br>COPY files<span class="hljs-regexp">/* /</span>root/<br><br>RUN mv <span class="hljs-regexp">/root/</span>slaves <span class="hljs-variable">$HADOOP_HOME</span><span class="hljs-regexp">/etc/</span>hadoop/slaves<br><br>RUN chmod +x run.sh<br><br>CMD sh run.sh<br></code></pre></td></tr></table></figure><h4 id="构建镜像-6"><a href="#构建镜像-6" class="headerlink" title="构建镜像"></a>构建镜像</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">docker <span class="hljs-keyword">build </span>-t nodemanager:<span class="hljs-built_in">v1</span> .<br></code></pre></td></tr></table></figure><h4 id="验证-3"><a href="#验证-3" class="headerlink" title="验证"></a>验证</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run -itd --name nodemanager<span class="hljs-number">1</span> --network baseEnv-net nodemanager:v<span class="hljs-number">1</span> <br><span class="hljs-attribute">docker</span> exec -it nodemanager<span class="hljs-number">1</span> /bin/bash<br><span class="hljs-attribute">jps</span><br></code></pre></td></tr></table></figure><h3 id="hdfs容器化部署"><a href="#hdfs容器化部署" class="headerlink" title="hdfs容器化部署"></a>hdfs容器化部署</h3><h4 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h4><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs dns">（<span class="hljs-number">1</span>）创建docker-compose.yml文件<br>（<span class="hljs-number">2</span>）指定docker-compose版本为<span class="hljs-number">3</span>（也可以采用<span class="hljs-number">2</span>）<br>（<span class="hljs-number">3</span>）定义名称为hadoop-hdfs的网络，网络驱动指定为bridge,subnet为<span class="hljs-number">172.25.1.0</span>/<span class="hljs-number">24</span>，网关为<span class="hljs-number">172.25.1.1</span><br>（<span class="hljs-number">4</span>）分别指定hadoop-nn、hadooo-dn1、hadoop-dn2、hadoop-dn3服务，每个服务的重启策略为always,network采用hadoop-hdfs,并添加容器主机名和ip映射，hadoop-nn服务将<span class="hljs-number">50070和9000</span>端口映射到DockerHost的<span class="hljs-number">50070和9000</span>端口<br>（<span class="hljs-number">5</span>）通过docker-compose up –d启动hdfs服务。<br>（<span class="hljs-number">6</span>）通过WebUI方式测试（浏览器中输入DockerHOST的IP:<span class="hljs-number">50070</span>），查看每个节点的运行状态。<br></code></pre></td></tr></table></figure><h4 id="docker-compose-yml实例"><a href="#docker-compose-yml实例" class="headerlink" title="docker-compose.yml实例"></a>docker-compose.yml实例</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">hadoop-nn:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">namenode:v1</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">hadoop-nn</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">hadoop-nn</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">hadoop-hdfs:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.1</span><span class="hljs-number">.100</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">50070</span><span class="hljs-string">:50070</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">9000</span><span class="hljs-string">:9000</span><br>    <span class="hljs-attr">extra_hosts:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nn:172.25.1.100&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-dn1:172.25.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-dn2:172.25.1.102&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-dn3:172.25.1.103&#x27;</span><br><br>  <span class="hljs-attr">hadoop-dn1:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">datanode:v1</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">hadoop-dn1</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">hadoop-dn1</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">hadoop-hdfs:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.1</span><span class="hljs-number">.101</span><br>    <span class="hljs-attr">extra_hosts:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nn:172.25.1.100&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-dn1:172.25.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-dn2:172.25.1.102&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-dn3:172.25.1.103&#x27;</span><br><br>  <span class="hljs-attr">hadoop-dn2:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">datanode:v1</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">hadoop-dn2</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">hadoop-dn2</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">hadoop-hdfs:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.1</span><span class="hljs-number">.102</span><br>    <span class="hljs-attr">extra_hosts:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nn:172.25.1.100&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-dn1:172.25.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-dn2:172.25.1.102&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-dn3:172.25.1.103&#x27;</span><br><br>  <span class="hljs-attr">hadoop-dn3:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">datanode:v1</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">hadoop-dn3</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">hadoop-dn3</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">hadoop-hdfs:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.1</span><span class="hljs-number">.103</span><br>    <span class="hljs-attr">extra_hosts:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nn:172.25.1.100&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-dn1:172.25.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-dn2:172.25.1.102&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-dn3:172.25.1.103&#x27;</span><br><br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">hadoop-hdfs:</span><br>    <span class="hljs-attr">driver:</span> <span class="hljs-string">bridge</span><br>    <span class="hljs-attr">ipam:</span><br>      <span class="hljs-attr">driver:</span> <span class="hljs-string">default</span><br>      <span class="hljs-attr">config:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">subnet:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.1</span><span class="hljs-number">.0</span><span class="hljs-string">/24</span><br><br></code></pre></td></tr></table></figure><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">在docker-compose.yml同级目录下执行<br>docker-compose <span class="hljs-keyword">up</span><br></code></pre></td></tr></table></figure><h3 id="yarn容器化部署"><a href="#yarn容器化部署" class="headerlink" title="yarn容器化部署"></a>yarn容器化部署</h3><h4 id="部署步骤-1"><a href="#部署步骤-1" class="headerlink" title="部署步骤"></a>部署步骤</h4><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">（<span class="hljs-number">1</span>）创建docker-compose<span class="hljs-number">.</span>yml文件<br>（<span class="hljs-number">2</span>）指定docker-compose版本为<span class="hljs-number">3</span>（也可以采用<span class="hljs-number">2</span>）<br>（<span class="hljs-number">3</span>）定义名称为hadoop-yarn的网络，网络驱动指定为bridge,subnet为<span class="hljs-number">172.24</span><span class="hljs-number">.1</span><span class="hljs-number">.0</span>/<span class="hljs-number">24</span>，网关为<span class="hljs-number">172.24</span><span class="hljs-number">.1</span><span class="hljs-number">.1</span><br>（<span class="hljs-number">4</span>）分别指定hadoop-rm、hadooo-nm1、hadoop-nm2、hadoop-nm3服务，每个服务的重启策略为always,network采用hadoop-yarn,并添加容器主机名和<span class="hljs-built_in">ip</span>映射,hadoop-rm服务将<span class="hljs-number">8080</span>端口映射到DockerHost的<span class="hljs-number">8088</span>端口<br>（<span class="hljs-number">5</span>）通过docker-compose <span class="hljs-meta">up</span> –d启动yarn服务。<br>（<span class="hljs-number">6</span>）通过WebUI方式测试（浏览器中输入DockerHOST的<span class="hljs-built_in">IP</span>:<span class="hljs-number">8088</span>），查看每个节点的运行状态。<br></code></pre></td></tr></table></figure><h4 id="docker-compose-yml实例-1"><a href="#docker-compose-yml实例-1" class="headerlink" title="docker-compose.yml实例"></a>docker-compose.yml实例</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">hadoop-rm:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">resourcemanager:v1</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">hadoop-rm</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">hadoop-rm</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">hadoop-yarn:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.24</span><span class="hljs-number">.1</span><span class="hljs-number">.100</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8080</span><span class="hljs-string">:8080</span><br>    <span class="hljs-attr">extra_hosts:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-rm:172.24.1.100&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nm1:172.24.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nm2:172.24.1.102&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nm3:172.24.1.103&#x27;</span><br><br>  <span class="hljs-attr">hadoop-nm1:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">nodemamager:v1</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">hadoop-nm1</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">hadoop-nm1</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">hadoop-yarn:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.24</span><span class="hljs-number">.1</span><span class="hljs-number">.101</span><br>    <span class="hljs-attr">extra_hosts:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-rm:172.24.1.100&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nm1:172.24.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nm2:172.24.1.102&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nm3:172.24.1.103&#x27;</span><br><br>  <span class="hljs-attr">hadoop-nm2:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">datanode:v1</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">hadoop-nm2</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">hadoop-nm2</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">hadoop-yarn:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.24</span><span class="hljs-number">.1</span><span class="hljs-number">.102</span><br>    <span class="hljs-attr">extra_hosts:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-rm:172.24.1.100&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nm1:172.24.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nm2:172.24.1.102&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nm3:172.24.1.103&#x27;</span><br><br>  <span class="hljs-attr">hadoop-nm3:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">datanode:v1</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">hadoop-nm3</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">hadoop-nm3</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-attr">hadoop-yarn:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.24</span><span class="hljs-number">.1</span><span class="hljs-number">.103</span><br>    <span class="hljs-attr">extra_hosts:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-rm:172.24.1.100&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nm1:172.24.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nm2:172.24.1.102&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;hadoop-nm3:172.24.1.103&#x27;</span><br><br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">hadoop-yarn:</span><br>    <span class="hljs-attr">driver:</span> <span class="hljs-string">bridge</span><br>    <span class="hljs-attr">ipam:</span><br>      <span class="hljs-attr">driver:</span> <span class="hljs-string">default</span><br>      <span class="hljs-attr">config:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">subnet:</span> <span class="hljs-number">172.24</span><span class="hljs-number">.1</span><span class="hljs-number">.0</span><span class="hljs-string">/24</span><br><br><br></code></pre></td></tr></table></figure><h4 id="启动-1"><a href="#启动-1" class="headerlink" title="启动"></a>启动</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">在docker-compose.yml同级目录下执行<br>docker-compose <span class="hljs-keyword">up</span><br></code></pre></td></tr></table></figure><h3 id="验证-4"><a href="#验证-4" class="headerlink" title="验证"></a>验证</h3><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/193171015242317.png"></p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/309021015235609.png"></p><h3 id="后台启动docker-compose-（screen命令）"><a href="#后台启动docker-compose-（screen命令）" class="headerlink" title="后台启动docker-compose  （screen命令）"></a>后台启动docker-compose  （screen命令）</h3><h4 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h4><p><strong>Screen</strong> 是一款由GNU计划开发的用于命令行终端切换的自由软件。用户可以通过该软件同时连接多个本地或远程的命令行会话，并在其间自由切换。GNU Screen可以看作是窗口管理器的命令行界面版本。它提供了统一的管理多个会话的界面和相应的功能。</p><p><strong>会话恢复</strong></p><p>只要Screen本身没有终止，在其内部运行的会话都可以恢复。这一点对于远程登录的用户特别有用——即使网络连接中断，用户也不会失去对已经打开的命令行会话的控制。只要再次登录到主机上执行screen -r就可以恢复会话的运行。同样在暂时离开的时候，也可以执行分离命令detach，在保证里面的程序正常运行的情况下让Screen挂起（切换到后台）。这一点和图形界面下的VNC很相似。</p><p><strong>多窗口</strong></p><p>在Screen环境下，所有的会话都独立的运行，并拥有各自的编号、输入、输出和窗口缓存。用户可以通过快捷键在不同的窗口下切换，并可以自由的重定向各个窗口的输入和输出。Screen实现了基本的文本操作，如复制粘贴等；还提供了类似滚动条的功能，可以查看窗口状况的历史记录。窗口还可以被分区和命名，还可以监视后台窗口的活动。 会话共享 Screen可以让一个或多个用户从不同终端多次登录一个会话，并共享会话的所有特性（比如可以看到完全相同的输出）。它同时提供了窗口访问权限的机制，可以对窗口进行密码保护。</p><p>GNU’s Screen 官方站点：<a href="http://www.gnu.org/software/screen/">http://www.gnu.org/software/screen/</a></p><h4 id="常用screen参数"><a href="#常用screen参数" class="headerlink" title="常用screen参数"></a>常用screen参数</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">screen -S yourname -&gt; 新建一个叫yourname的session<br>screen -ls -&gt; 列出当前所有的session<br>screen -r yourname -&gt; 回到yourname这个session<br>screen -d yourname -&gt; 远程detach某个session<br>screen -d -r yourname -&gt; 结束当前session并回到yourname这个session<br></code></pre></td></tr></table></figure><p>在每个screen session 下，所有命令都以 ctrl+a(C-a) 开始。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs shell">C-a ? -&gt; 显示所有键绑定信息<br>C-a c -&gt; 创建一个新的运行shell的窗口并切换到该窗口<br>C-a n -&gt; Next，切换到下一个 window <br>C-a p -&gt; Previous，切换到前一个 window <br>C-a 0..9 -&gt; 切换到第 0..9 个 window<br>Ctrl+a [Space] -&gt; 由视窗0循序切换到视窗9<br>C-a C-a -&gt; 在两个最近使用的 window 间切换 <br>C-a x -&gt; 锁住当前的 window，需用用户密码解锁<br>C-a d -&gt; detach，暂时离开当前session，将目前的 screen session (可能含有多个 windows) 丢到后台执行，并会回到还没进 screen 时的状态，此时在 screen session 里，每个 window 内运行的 process (无论是前台/后台)都在继续执行，即使 logout 也不影响。 <br>C-a z -&gt; 把当前session放到后台执行，用 shell 的 fg 命令则可回去。<br>C-a w -&gt; 显示所有窗口列表<br>C-a t -&gt; time，显示当前时间，和系统的 load <br>C-a k -&gt; kill window，强行关闭当前的 window<br>C-a  -&gt; 进入 copy mode，在 copy mode 下可以回滚、搜索、复制就像用使用 [vi 一样<br>    C-b Backward，PageUp <br>    C-f Forward，PageDown <br>    H(大写) High，将光标移至左上角 <br>    L Low，将光标移至左下角 <br>    0 移到行首 <br>    $ 行末 <br>    w forward one word，以字为单位往前移 <br>    b backward one word，以字为单位往后移 <br>    Space 第一次按为标记区起点，第二次按为终点 <br>    Esc 结束 copy mode <br>C-a ] -&gt; paste，把刚刚在 copy mode 选定的内容贴上<br></code></pre></td></tr></table></figure><h4 id="使用-screen"><a href="#使用-screen" class="headerlink" title="使用 screen"></a>使用 screen</h4><p><strong>安装screen</strong></p><p>流行的Linux发行版（例如Red Hat Enterprise Linux）通常会自带screen实用程序，如果没有的话，可以从GNU screen的官方网站下载。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@TS-DEV ~]# yum install screen<br>[root@TS-DEV ~]# rpm -qa|grep screen<br>screen-4.0.3-4.el5<br>[root@TS-DEV ~]#<br></code></pre></td></tr></table></figure><p><strong>创建一个新的窗口</strong></p><p>安装完成后，直接敲命令screen就可以启动它。但是这样启动的screen会话没有名字，实践上推荐为每个screen会话取一个名字，方便分辨：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@TS-DEV ~]# screen -S david <br></code></pre></td></tr></table></figure><p>screen启动后，会创建第一个窗口，也就是窗口No. 0，并在其中打开一个系统默认的shell，一般都会是bash。所以你敲入命令screen之后，会立刻又返回到命令提示符，仿佛什么也没有发生似的，其实你已经进入Screen的世界了。当然，也可以在screen命令之后加入你喜欢的参数，使之直接打开你指定的程序，例如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@TS-DEV ~]# screen vi david.txt<br></code></pre></td></tr></table></figure><p>screen创建一个执行vi david.txt的单窗口会话，退出vi 将退出该窗口/会话。</p><p><strong>应用</strong></p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-keyword">screen</span> -S hdfs <span class="hljs-meta">#建立一个名为hdfs的终端窗口</span><br>ctrl+a d<span class="hljs-meta">#将当前窗口放到后台</span><br><span class="hljs-keyword">screen</span> -S yarn<span class="hljs-meta">#建立一个名为yarn的终端窗口</span><br>ctrl+a d<span class="hljs-meta">#将当前窗口放到后台</span><br><span class="hljs-keyword">screen</span> -R hdfs<span class="hljs-meta">#将名为hdfs的窗口恢复</span><br><span class="hljs-keyword">screen</span> -R yarn<span class="hljs-meta">#将名为yarn的窗口恢复</span><br></code></pre></td></tr></table></figure><h1 id="docker安装zookeeper"><a href="#docker安装zookeeper" class="headerlink" title="docker安装zookeeper"></a>docker安装zookeeper</h1><h2 id="什么是zookeeper"><a href="#什么是zookeeper" class="headerlink" title="什么是zookeeper"></a>什么是zookeeper</h2><p>zookeeper实际上是yahoo开发的，用于分布式中一致性处理的框架。最初其作为研发Hadoop时的副产品。由于分布式系统中一致性处理较为困难，其他的分布式系统没有必要费劲重复造轮子，故随后的分布式系统中大量应用了zookeeper，以至于zookeeper成为了各种分布式系统的基础组件，其地位之重要，可想而知。著名的hadoop、kafka、dubbo 都是基于zookeeper而构建。</p><p>官网：<a href="http://zookeeper.apache.org/">http://zookeeper.apache.org/</a></p><h2 id="集群规划-1"><a href="#集群规划-1" class="headerlink" title="集群规划"></a>集群规划</h2><table><thead><tr><th>容器主机名/容器名</th><th>容器IP（网络名称zk-network）</th></tr></thead><tbody><tr><td>zk1</td><td>172.26.1.101</td></tr><tr><td>zk2</td><td>172.26.1.102</td></tr><tr><td>zk3</td><td>172.26.1.103</td></tr></tbody></table><h2 id="镜像启动操作"><a href="#镜像启动操作" class="headerlink" title="镜像启动操作"></a>镜像启动操作</h2><h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">（<span class="hljs-number">1</span>）<span class="hljs-number">2.2</span>中构建的jdk1.<span class="hljs-number">8</span>:v1作为基础镜像<br>（<span class="hljs-number">2</span>）将zookeeper-<span class="hljs-number">3.4</span>.<span class="hljs-number">12</span>.tar.gz（可采用其他版本）复制到容器的<span class="hljs-regexp">/root目录下并解压至/</span>root/apps目录下，为了精简镜像，需要将zookeeper-<span class="hljs-number">3.4</span>.<span class="hljs-number">12</span>.tar.gz删除。<br>（<span class="hljs-number">3</span>）配置Zookeeper环境变量,并定义zk_ID变量（docker-compose运行时传递参数到zk_ID,并写入到zookeeper的datadir中的myid文件中）<br>（<span class="hljs-number">4</span>）将配置文件复制的<span class="hljs-regexp">/tmp/</span>目录下，并在<span class="hljs-regexp">/tmp/</span>下移动到<span class="hljs-variable">$ZOOKEEPER_HOME</span><span class="hljs-regexp">/conf /</span>目录中<br>（<span class="hljs-number">5</span>）将start-zk.sh（启动zookeeper和sshd服务）复制到/root下并添加执行权限<br>（<span class="hljs-number">6</span>）创建zoo.conf配置文件中指定的datadir目录<br>（<span class="hljs-number">7</span>）指定<span class="hljs-regexp">/root/</span>data/zookeeper为数据卷<br>（<span class="hljs-number">8</span>）暴露<span class="hljs-number">2181</span>端口<br>（<span class="hljs-number">9</span>）指定容器启动时运行start-zk.sh脚本<br></code></pre></td></tr></table></figure><h3 id="dockerfile实例"><a href="#dockerfile实例" class="headerlink" title="dockerfile实例"></a>dockerfile实例</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">FROM</span> ubuntu-jdk:v1<br><br><span class="hljs-keyword">COPY</span> files<span class="hljs-regexp">/zookeeper-3.4.12.tar.gz /</span>root/<br><br>RUN tar -zxvf <span class="hljs-regexp">/root/</span>zookeeper-<span class="hljs-number">3.4</span>.<span class="hljs-number">12</span>.tar.gz -C <span class="hljs-regexp">/root/</span>tool/ &amp;&amp; \<br>mv <span class="hljs-regexp">/root/</span>tool<span class="hljs-regexp">/zookeeper-3.4.12 /</span>root<span class="hljs-regexp">/tool/</span>zookeeper &amp;&amp; \<br>rm -rf <span class="hljs-regexp">/root/</span>zookeeper-<span class="hljs-number">3.4</span>.<span class="hljs-number">12</span>.tar.gz &amp;&amp; \<br>mkdir -p <span class="hljs-regexp">/root/</span>data/zookeeper<br><br>ENV ZOOKEEPER_HOME=<span class="hljs-regexp">/root/</span>tool/zookeeper<br>ENV PATH=$PATH:$ZOOKEEPER_HOME/bin:$PATH<br><br>VOLUME <span class="hljs-regexp">/root/</span>data/zookeeper<br><br>EXPOSE <span class="hljs-number">2181</span><br><br><span class="hljs-keyword">COPY</span> <span class="hljs-regexp">/files/</span>conf<span class="hljs-regexp">/zoo.cfg /</span>root<span class="hljs-regexp">/tool/</span>zookeeper<span class="hljs-regexp">/conf/</span><br><span class="hljs-keyword">COPY</span> <span class="hljs-regexp">/files/</span>conf<span class="hljs-regexp">/start-zk.sh /</span>root/<br><br>CMD sh start-zk.sh<br><br></code></pre></td></tr></table></figure><h3 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><span class="hljs-attr">services:</span> <br>  <span class="hljs-attr">zk1:</span> <br>    <span class="hljs-attr">image:</span> <span class="hljs-string">zookeeper:v1</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">zk1</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">zk1</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span> <br>      <span class="hljs-attr">zk-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.26</span><span class="hljs-number">.1</span><span class="hljs-number">.101</span><br>    <span class="hljs-attr">ports:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-number">2181</span><span class="hljs-string">:2181</span><br>    <span class="hljs-attr">extra_hosts:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;zk1:172.26.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;zk2:172.26.1.102&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;zk3:172.26.1.103&#x27;</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">zk_ID:</span> <span class="hljs-number">1</span><br>      <br>  <span class="hljs-attr">zk2:</span> <br>    <span class="hljs-attr">image:</span> <span class="hljs-string">zookeeper:v1</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">zk2</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">zk2</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span> <br>      <span class="hljs-attr">zk-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.26</span><span class="hljs-number">.1</span><span class="hljs-number">.102</span><br>    <span class="hljs-attr">ports:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-number">2182</span><span class="hljs-string">:2181</span><br>    <span class="hljs-attr">extra_hosts:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;zk1:172.26.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;zk2:172.26.1.102&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;zk3:172.26.1.103&#x27;</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">zk_ID:</span> <span class="hljs-number">2</span><br>      <br>  <span class="hljs-attr">zk3:</span> <br>    <span class="hljs-attr">image:</span> <span class="hljs-string">zookeeper:v1</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">zk3</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">zk3</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span> <br>      <span class="hljs-attr">zk-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.26</span><span class="hljs-number">.1</span><span class="hljs-number">.103</span><br>    <span class="hljs-attr">ports:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-number">2183</span><span class="hljs-string">:2181</span><br>    <span class="hljs-attr">extra_hosts:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;zk1:172.26.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;zk2:172.26.1.102&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;zk3:172.26.1.103&#x27;</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">zk_ID:</span> <span class="hljs-number">3</span><br>      <br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">zk-network:</span><br>    <span class="hljs-attr">driver:</span> <span class="hljs-string">bridge</span><br>    <span class="hljs-attr">ipam:</span><br>      <span class="hljs-attr">driver:</span> <span class="hljs-string">default</span><br>      <span class="hljs-attr">config:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">subnet:</span> <span class="hljs-number">172.26</span><span class="hljs-number">.1</span><span class="hljs-number">.0</span><span class="hljs-string">/24</span><br></code></pre></td></tr></table></figure><h3 id="sh"><a href="#sh" class="headerlink" title="sh"></a>sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$zk_ID</span> &gt; /root/data/zookeeper/myid<br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$zk_ID</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;启动zookeeper&quot;</span><br>zkServer.sh start <br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;启动ssh服务&quot;</span><br>/usr/sbin/sshd -D<br></code></pre></td></tr></table></figure><h3 id="所需命令"><a href="#所需命令" class="headerlink" title="所需命令"></a>所需命令</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment"># 构建镜像</span><br>docker <span class="hljs-keyword">build </span>-t zookeeper:<span class="hljs-built_in">v1</span> .<br><span class="hljs-comment"># compose集群启动</span><br>docker-compose up<br><span class="hljs-comment"># 查看zookeeper状态</span><br>zkServer.<span class="hljs-keyword">sh </span>status<br></code></pre></td></tr></table></figure><h3 id="问题-3"><a href="#问题-3" class="headerlink" title="问题"></a>问题</h3><h4 id="1-myid文件的赋值"><a href="#1-myid文件的赋值" class="headerlink" title="1.myid文件的赋值"></a>1.myid文件的赋值</h4><h5 id="dockerfile与docker-compose联动，生成三个镜像"><a href="#dockerfile与docker-compose联动，生成三个镜像" class="headerlink" title="- dockerfile与docker-compose联动，生成三个镜像"></a>- dockerfile与docker-compose联动，生成三个镜像</h5><ul><li>在dockerfile文件中声明ARG:MYID</li><li>在dockerfile文件中把MYID赋值给myid文件</li><li>在docker-compose文件中 新建镜像 分别赋值MYID</li></ul><h5 id="docker-compose与sh联动，生成一个镜像"><a href="#docker-compose与sh联动，生成一个镜像" class="headerlink" title="- docker-compose与sh联动，生成一个镜像"></a>- docker-compose与sh联动，生成一个镜像</h5><ul><li>在docker-compose文件中 声明environment:zk_ID</li><li>在sh文件中赋值给myid文件</li></ul><h1 id="docker安装spark"><a href="#docker安装spark" class="headerlink" title="docker安装spark"></a>docker安装spark</h1><h2 id="什么是spark"><a href="#什么是spark" class="headerlink" title="什么是spark"></a>什么是spark</h2><p>Spark最初由美国加州伯克利大学的AMP实验室于2009年开发，Spark是一种通用的大数据计算框架,是基于RDD（弹性分布式数据集）的一种计算模型。通俗讲就是可以分布式处理大量极数据的，将大量集数据先拆分，分别进行计算，然后再将计算后的结果进行合并。</p><h2 id="ApacheSpark的功能"><a href="#ApacheSpark的功能" class="headerlink" title="ApacheSpark的功能"></a>ApacheSpark的功能</h2><p><strong>快速</strong> - 使用最先进的DAG调度程序，查询优化器和物理执行引擎，为批处理和流数据提供高性能。 </p><p><strong>易于使用</strong> - 它有助于使用Java，Scala，Python，R和SQL编写应用程序。它还提供80多个高级运算符。 </p><p><strong>通用性</strong> - 它提供了一系列库，包括SQL和DataFrames，用于机器学习的MLlib，GraphX和Spark Streaming。 轻量级 - 它是一种轻型统一分析引擎，用于大规模数据处理。 </p><p><strong>无处不在</strong> - 它可以轻松运行在Hadoop，Apache Mesos，Kubernetes，独立或云端。</p><h2 id="集群规划-2"><a href="#集群规划-2" class="headerlink" title="集群规划"></a>集群规划</h2><table><thead><tr><th>容器主机名<br>/容器名</th><th>容器IP（网络名称spark-network）</th><th>节点进程</th><th>容器启动镜像</th></tr></thead><tbody><tr><td>spark-master1</td><td>172.27.1.100</td><td>master、HistoryServer</td><td>spark-master:v1</td></tr><tr><td>spark-master2</td><td>172.27.1.120</td><td>master</td><td>spark-master:v1</td></tr><tr><td>spark-worker1</td><td>172.27.1.101</td><td>worker</td><td>spark-worker:v1</td></tr><tr><td>spark-worker2</td><td>172.27.1.102</td><td>worker</td><td>spark-worker:v1</td></tr><tr><td>spark-worker3</td><td>172.27.1.103</td><td>worker</td><td>spark-worker:v1</td></tr></tbody></table><h2 id="设计与实现思路"><a href="#设计与实现思路" class="headerlink" title="设计与实现思路"></a>设计与实现思路</h2><h2 id="spark-master-worker镜像"><a href="#spark-master-worker镜像" class="headerlink" title="spark-master/worker镜像"></a>spark-master/worker镜像</h2><h4 id="基础步骤-5"><a href="#基础步骤-5" class="headerlink" title="基础步骤"></a>基础步骤</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs awk">（<span class="hljs-number">1</span>）<span class="hljs-number">2.2</span>中构建的jdk1.<span class="hljs-number">8</span>:v1作为基础镜像<br>（<span class="hljs-number">2</span>）将spark-<span class="hljs-number">2.3</span>.<span class="hljs-number">4</span>.tar.gz（可采用其他版本）复制到容器的<span class="hljs-regexp">/root目录下并解压至/</span>root/tool目录下，为了精简镜像，需要将spark-<span class="hljs-number">2.3</span>.<span class="hljs-number">4</span>.tar.gz删除。<br>（<span class="hljs-number">3</span>）配置Spark环境变量<br>**ARG变量复制master和worker的配置**<br>- dockerfile中 ARG conf_hosts<br>- docker-compose.yml中<br>  - args: <br>    conf_hosts: conf-master<br>（<span class="hljs-number">4</span>）将配置文件（指导老师讲解配置文件并提供给学生）复制的<span class="hljs-regexp">/tmp/</span>目录下，并在<span class="hljs-regexp">/tmp/</span>下移动到<span class="hljs-variable">$SPARK_HOME</span><span class="hljs-regexp">/conf/</span>目录中<br>（<span class="hljs-number">5</span>）创建 <span class="hljs-regexp">/root/</span>apps<span class="hljs-regexp">/spark/</span>logs目录（spark启动时的日志文件输出到本目录下）<br>（<span class="hljs-number">6</span>）将run.sh（启动master和historyserver服务）复制到/root下并添加执行权限<br>（<span class="hljs-number">7</span>）暴露<span class="hljs-number">8080</span>和<span class="hljs-number">7077</span>端口<br>（<span class="hljs-number">8</span>）指定容器启动时运行run.sh脚本<br></code></pre></td></tr></table></figure><h4 id="dockerfile实例-1"><a href="#dockerfile实例-1" class="headerlink" title="dockerfile实例"></a>dockerfile实例</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs awk">FROM ubuntu-jdk:v1<br><br>COPY files<span class="hljs-regexp">/spark-2.3.4.tar.gz /</span>root/<br><br>RUN apt-get install curl -y &amp;&amp; \<br>tar -zxvf <span class="hljs-regexp">/root/</span>spark-<span class="hljs-number">2.3</span>.<span class="hljs-number">4</span>.tar.gz -C <span class="hljs-regexp">/root/</span>tool/ &amp;&amp; \<br>mv <span class="hljs-regexp">/root/</span>tool<span class="hljs-regexp">/spark-2.3.4-bin-hadoop2.7 /</span>root<span class="hljs-regexp">/tool/</span>spark &amp;&amp; \<br>rm -rf <span class="hljs-regexp">/root/</span>spark-<span class="hljs-number">2.3</span>.<span class="hljs-number">4</span>.tar.gz &amp;&amp; \<br>mkdir -p <span class="hljs-regexp">/root/</span>tool<span class="hljs-regexp">/spark/</span>logs<br><br>ENV SPARK_HOME=<span class="hljs-regexp">/root/</span>tool/spark<br>ENV PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$SPARK_HOME</span><span class="hljs-regexp">/bin:$SPARK_HOME/</span>sbin:<span class="hljs-variable">$PATH</span><br><br>ARG conf_hosts<br>COPY files<span class="hljs-regexp">/$&#123;conf_hosts&#125;/</span>conf<span class="hljs-regexp">/* /</span>tmp/<br>RUN mv <span class="hljs-regexp">/tmp/</span>spark-env.sh <span class="hljs-regexp">/root/</span>tool<span class="hljs-regexp">/spark/</span>conf/spark-env.sh &amp;&amp; \<br>mv <span class="hljs-regexp">/tmp/</span>spark-defaults.conf <span class="hljs-regexp">/root/</span>tool<span class="hljs-regexp">/spark/</span>conf/spark-defaults.conf &amp;&amp; \<br>mv <span class="hljs-regexp">/tmp/</span>slaves <span class="hljs-regexp">/root/</span>tool<span class="hljs-regexp">/spark/</span>slaves &amp;&amp; \<br>mv <span class="hljs-regexp">/tmp/</span>run.sh <span class="hljs-regexp">/root/</span>run.sh<br><br>EXPOSE <span class="hljs-number">8080</span><br>EXPOSE <span class="hljs-number">7077</span><br><br>RUN chmod +x <span class="hljs-regexp">/root/</span>run.sh<br><br>CMD [<span class="hljs-string">&quot;/root/run.sh&quot;</span>]<br><br></code></pre></td></tr></table></figure><h4 id="docker-compose实例"><a href="#docker-compose实例" class="headerlink" title="docker-compose实例"></a>docker-compose实例</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><span class="hljs-attr">services:</span> <br>  <span class="hljs-attr">spark-master1:</span> <br>    <span class="hljs-attr">build:</span>  <br>  <span class="hljs-attr">context:</span> <span class="hljs-string">/root/00_dockerfile/04_spark</span><br>  <span class="hljs-attr">dockerfile:</span> <span class="hljs-string">/root/00_dockerfile/04_spark/dockerfile</span><br>  <span class="hljs-attr">args:</span> <br>    <span class="hljs-attr">conf_hosts:</span> <span class="hljs-string">conf-master</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">spark-master1</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">spark-master1</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span> <br>      <span class="hljs-attr">spark-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.27</span><span class="hljs-number">.1</span><span class="hljs-number">.100</span><br>    <span class="hljs-attr">ports:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8080</span><span class="hljs-string">:8080</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-number">7077</span><span class="hljs-string">:7077</span><br>    <span class="hljs-attr">extra_hosts:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-master1:172.27.1.100&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-master2:172.27.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-worker1:172.27.1.102&#x27;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-worker2:172.27.1.103&#x27;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-worker3:172.27.1.104&#x27;</span><br><br>  <span class="hljs-attr">spark-master2:</span> <br>    <span class="hljs-attr">build:</span>  <br>  <span class="hljs-attr">context:</span> <span class="hljs-string">/root/00_dockerfile/04_spark</span><br>  <span class="hljs-attr">dockerfile:</span> <span class="hljs-string">/root/00_dockerfile/04_spark/dockerfile</span><br>  <span class="hljs-attr">args:</span> <br>    <span class="hljs-attr">conf_hosts:</span> <span class="hljs-string">conf-master</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">spark-master2</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">spark-master2</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span> <br>      <span class="hljs-attr">spark-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.27</span><span class="hljs-number">.1</span><span class="hljs-number">.101</span><br>    <span class="hljs-attr">ports:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8081</span><span class="hljs-string">:8080</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-number">7078</span><span class="hljs-string">:7077</span><br>    <span class="hljs-attr">extra_hosts:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-master1:172.27.1.100&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-master2:172.27.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-worker1:172.27.1.102&#x27;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-worker2:172.27.1.103&#x27;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-worker3:172.27.1.104&#x27;</span><br><br>  <span class="hljs-attr">spark-worker2:</span> <br>    <span class="hljs-attr">build:</span>  <br>  <span class="hljs-attr">context:</span> <span class="hljs-string">/root/00_dockerfile/04_spark</span><br>  <span class="hljs-attr">dockerfile:</span> <span class="hljs-string">/root/00_dockerfile/04_spark/dockerfile</span><br>  <span class="hljs-attr">args:</span> <br>    <span class="hljs-attr">conf_hosts:</span> <span class="hljs-string">conf-worker</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">spark-worker2</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">spark-worker2</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span> <br>      <span class="hljs-attr">spark-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.27</span><span class="hljs-number">.1</span><span class="hljs-number">.103</span><br>    <span class="hljs-attr">extra_hosts:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-master1:172.27.1.100&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-master2:172.27.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-worker1:172.27.1.102&#x27;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-worker2:172.27.1.103&#x27;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-worker3:172.27.1.104&#x27;</span><br><br>  <span class="hljs-attr">spark-worker1:</span> <br>    <span class="hljs-attr">build:</span>  <br>  <span class="hljs-attr">context:</span> <span class="hljs-string">/root/00_dockerfile/04_spark</span><br>  <span class="hljs-attr">dockerfile:</span> <span class="hljs-string">/root/00_dockerfile/04_spark/dockerfile</span><br>  <span class="hljs-attr">args:</span> <br>    <span class="hljs-attr">conf_hosts:</span> <span class="hljs-string">conf-worker</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">spark-worker1</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">spark-worker1</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span> <br>      <span class="hljs-attr">spark-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.27</span><span class="hljs-number">.1</span><span class="hljs-number">.102</span><br>    <span class="hljs-attr">extra_hosts:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-master1:172.27.1.100&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-master2:172.27.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-worker1:172.27.1.102&#x27;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-worker2:172.27.1.103&#x27;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-worker3:172.27.1.104&#x27;</span><br><br>  <span class="hljs-attr">spark-worker3:</span> <br>    <span class="hljs-attr">build:</span>  <br>  <span class="hljs-attr">context:</span> <span class="hljs-string">/root/00_dockerfile/04_spark</span><br>  <span class="hljs-attr">dockerfile:</span> <span class="hljs-string">/root/00_dockerfile/04_spark/dockerfile</span><br>  <span class="hljs-attr">args:</span> <br>    <span class="hljs-attr">conf_hosts:</span> <span class="hljs-string">conf-worker</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">spark-worker3</span><br>    <span class="hljs-attr">hostname:</span> <span class="hljs-string">spark-worker3</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span> <br>      <span class="hljs-attr">spark-network:</span><br>        <span class="hljs-attr">ipv4_address:</span> <span class="hljs-number">172.27</span><span class="hljs-number">.1</span><span class="hljs-number">.104</span><br>    <span class="hljs-attr">extra_hosts:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-master1:172.27.1.100&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-master2:172.27.1.101&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-worker1:172.27.1.102&#x27;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-worker2:172.27.1.103&#x27;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;spark-worker3:172.27.1.104&#x27;</span><br><br>  <br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">spark-network:</span><br>    <span class="hljs-attr">driver:</span> <span class="hljs-string">bridge</span><br>    <span class="hljs-attr">ipam:</span><br>      <span class="hljs-attr">driver:</span> <span class="hljs-string">default</span><br>      <span class="hljs-attr">config:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">subnet:</span> <span class="hljs-number">172.27</span><span class="hljs-number">.1</span><span class="hljs-number">.0</span><span class="hljs-string">/24</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/48171115214764.png"></p><h4 id="问题-4"><a href="#问题-4" class="headerlink" title="问题"></a>问题</h4><h5 id="端口占用问题"><a href="#端口占用问题" class="headerlink" title="- 端口占用问题"></a>- 端口占用问题</h5><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0.md/157811115230845.png"></p><ul><li>原因：<ul><li>docker-compose.yml中 master1和master2重复开放了8080和7077端口</li></ul></li><li>解决：<ul><li>master2开放8081和7078</li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
      <tag>大数据运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Three.js学习记录</title>
    <link href="/2021/08/27/Three.js%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <url>/2021/08/27/Three.js%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li><p>three.js 包</p><p><code>npm i three</code></p></li><li><p><code>THREE.TrackballControls()</code>轨迹球控件，最常用的控件，可以使用鼠标轻松的移动、平移，缩放场景。</p><p><code> npm i three-trackballcontrols</code></p></li></ul><h2 id="导入项目"><a href="#导入项目" class="headerlink" title="导入项目"></a>导入项目</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> THREE <span class="hljs-keyword">from</span>  <span class="hljs-string">&#x27;three&#x27;</span>;<br><span class="hljs-keyword">import</span> TrackballControls <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;three-trackballcontrols&#x27;</span>;<br><br></code></pre></td></tr></table></figure><h1 id="创建一个绿色方块"><a href="#创建一个绿色方块" class="headerlink" title="创建一个绿色方块"></a>创建一个绿色方块</h1>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>Three.js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue学习笔记</title>
    <link href="/2021/08/13/vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/08/13/vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="setup"><a href="#setup" class="headerlink" title="setup():"></a>setup():</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;one&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; text &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 使用双花括号来变量括起来，进行渲染，定义的变量在下面 --&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>    <span class="hljs-comment">//vue3的setup()函数，执行的顺序在vue页面中排第一</span><br>    <span class="hljs-comment">//setup(props)函数，中的props是用于父子组件之间用于传参的一个参数</span><br>    <span class="hljs-comment">//setup()函数中可以通过return来返回一个对象，这个对象可以用于页面的数据绑定</span><br>    <span class="hljs-comment">//和data()函数的区别，data()函数只能返回一个字符串</span><br>    <span class="hljs-comment">//setup()函数可以返回一个函数对象，把function xxx()函数赋值给text变量</span><br>    <span class="hljs-comment">//在setup函数中定义的变量和方法最后都是需要 return 出去的 不然无法再模板中使用</span><br>    <span class="hljs-comment">//生命周期的函数只能写在setUp中</span><br>    <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getA</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;getA()函数中返回的字符串&quot;</span><br>        &#125;<br>        <span class="hljs-keyword">return</span>&#123;<br>            <span class="hljs-comment">//直接在这里给变量text赋值，可以在页面数据绑定中使用,赋值的内容为一个函数对象</span><br>            <span class="hljs-attr">text</span>:getA(),<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%89%8D%E7%AB%AF/vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.md/296145414238178.png"></p><h1 id="组件"><a href="#组件" class="headerlink" title="组件:"></a>组件:</h1><p>注册组件</p><h1 id="Watch"><a href="#Watch" class="headerlink" title="Watch"></a>Watch</h1><p>在setup()中使用，监听数据变化时执行相应操作</p><p><a href="https://www.cnblogs.com/baifangzi/p/14234981.html">https://www.cnblogs.com/baifangzi/p/14234981.html</a></p><h3 id="1-监听普通类型"><a href="#1-监听普通类型" class="headerlink" title="1. 监听普通类型"></a>1. 监听普通类型</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"> <span class="hljs-keyword">let</span> count = ref(<span class="hljs-number">1</span>);<br> <span class="hljs-keyword">const</span> changeCount = <span class="hljs-function">() =&gt;</span> &#123;<br> count.value+=<span class="hljs-number">1</span><br> &#125;;<br><br>watch(count, <span class="hljs-function">(<span class="hljs-params">newValue, oldValue</span>) =&gt;</span> &#123; <span class="hljs-comment">//直接监听</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;count改变了&quot;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="2-监听响应式对象"><a href="#2-监听响应式对象" class="headerlink" title="2.监听响应式对象"></a>2.监听响应式对象</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> book = reactive(&#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;js编程&quot;</span>,<br>    <span class="hljs-attr">price</span>: <span class="hljs-number">50</span>,<br>&#125;);<br><span class="hljs-keyword">const</span> changeBookName = <span class="hljs-function">() =&gt;</span> &#123;<br>book.name = <span class="hljs-string">&quot;c#&quot;</span>; <br>&#125;;<br>watch(<span class="hljs-function">()=&gt;</span>book.name,<span class="hljs-function">()=&gt;</span>&#123;<span class="hljs-comment">//通过一个函数返回要监听的属性</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;书名改变了&#x27;</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">watch (data,<span class="hljs-function">(<span class="hljs-params">newdata</span>) =&gt;</span> &#123;<br>consol.log(newdata)<br>&#125;)<br><span class="hljs-comment">//data 原始数据（实参）</span><br><span class="hljs-comment">//newdata 新数据传入（形参）</span><br><span class="hljs-comment">//当data变化时，把变化的新数据传入newdata，</span><br></code></pre></td></tr></table></figure><p>vue3中可以有多个watch，vue2中只能有一个watch</p><h1 id="vue中判断对象为空"><a href="#vue中判断对象为空" class="headerlink" title="vue中判断对象为空"></a>vue中判断对象为空</h1><h2 id="结构体如下"><a href="#结构体如下" class="headerlink" title="结构体如下"></a>结构体如下</h2><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%89%8D%E7%AB%AF/vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.md/465205414235680.png"></p><p>在调用text.value时，因默认情况下text为空报错</p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%89%8D%E7%AB%AF/vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.md/541675414216921.png"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>使用 typeof 对text进行判断是否为 undefined</p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%89%8D%E7%AB%AF/vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.md/10285514239361.png"></p><p><img src="http://markdowntc.wanqqq29.cn//image-20210714095428450.png" alt="image-20210714095428450"></p><h4 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h4><p>当判断text.value时会失效，因为text就不存在，value更不用说了所以直接判断text就可以了</p><h2 id="依据"><a href="#依据" class="headerlink" title="依据"></a>依据</h2><p>在ESLint 0.5.0中引入 <code>typeof</code> 操作符，用于强制与有效的字符串进行比较 <a href="https://cn.eslint.org/docs/rules/valid-typeof">ESLint文档地址</a></p><p><code>typeof</code>通常与以下字符串比较：<code>undefined</code>、<code>object</code>、<code>boolean</code>、<code>number</code>、<code>string</code>、<code>symbol</code>和<code>bigint</code></p><p>与其他字符串比较时，通常是个书写错误</p><h3 id="Options"><a href="#Options" class="headerlink" title="Options"></a>Options</h3><p>该规则有一个对象选项：</p><ul><li><code>&quot;requireStringLiterals&quot;: true</code> 要求 <code>typeof</code> 表达式只与字符串字面量或其它 <code>typeof</code> 表达式 进行比较，禁止与其它值进行比较。</li></ul><p><strong>错误</strong> 代码示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*eslint valid-typeof: &quot;error&quot;*/</span><br><br><span class="hljs-keyword">typeof</span> foo === <span class="hljs-string">&quot;strnig&quot;</span><br><span class="hljs-keyword">typeof</span> foo == <span class="hljs-string">&quot;undefimed&quot;</span><br><span class="hljs-keyword">typeof</span> bar != <span class="hljs-string">&quot;nunber&quot;</span><br><span class="hljs-keyword">typeof</span> bar !== <span class="hljs-string">&quot;fucntion&quot;</span><br></code></pre></td></tr></table></figure><p><strong>正确</strong> 代码示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*eslint valid-typeof: &quot;error&quot;*/</span><br><br><span class="hljs-keyword">typeof</span> foo === <span class="hljs-string">&quot;string&quot;</span><br><span class="hljs-keyword">typeof</span> bar == <span class="hljs-string">&quot;undefined&quot;</span><br><span class="hljs-keyword">typeof</span> foo === baz<br><span class="hljs-keyword">typeof</span> bar === <span class="hljs-keyword">typeof</span> qux<br></code></pre></td></tr></table></figure><p>选项 <code>&#123; &quot;requireStringLiterals&quot;: true &#125;</code> 的 <strong>错误</strong> 代码示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">typeof</span> foo === <span class="hljs-literal">undefined</span><br><span class="hljs-keyword">typeof</span> bar == <span class="hljs-built_in">Object</span><br><span class="hljs-keyword">typeof</span> baz === <span class="hljs-string">&quot;strnig&quot;</span><br><span class="hljs-keyword">typeof</span> qux === <span class="hljs-string">&quot;some invalid type&quot;</span><br><span class="hljs-keyword">typeof</span> baz === anotherVariable<br><span class="hljs-keyword">typeof</span> foo == <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p>选项 <code>&#123; &quot;requireStringLiterals&quot;: true &#125;</code> 的 <strong>正确</strong> 代码示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">typeof</span> foo === <span class="hljs-string">&quot;undefined&quot;</span><br><span class="hljs-keyword">typeof</span> bar == <span class="hljs-string">&quot;object&quot;</span><br><span class="hljs-keyword">typeof</span> baz === <span class="hljs-string">&quot;string&quot;</span><br><span class="hljs-keyword">typeof</span> bar === <span class="hljs-keyword">typeof</span> qux<br></code></pre></td></tr></table></figure><h1 id="v-for中的key理解"><a href="#v-for中的key理解" class="headerlink" title="v-for中的key理解"></a>v-for中的key理解</h1><p>v-for 是循环，可以把数组中的元素遍历出来，</p><p>vue3中，必须要有key参数，key就相当于索引，</p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%89%8D%E7%AB%AF/vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.md/146775514234497.png"></p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%89%8D%E7%AB%AF/vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.md/205125514228043.png"></p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%89%8D%E7%AB%AF/vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.md/270145514221177.png"></p><h1 id="vue3中组件的注册"><a href="#vue3中组件的注册" class="headerlink" title="vue3中组件的注册"></a>vue3中组件的注册</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//子组件：</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>    <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;menu&#x27;</span>,<br>    ……<br>&#125;<br><br><span class="hljs-comment">//父组件：</span><br><span class="hljs-keyword">import</span> menu <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;***.vue&#x27;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>&#123;<br>    <span class="hljs-comment">//一定要注意components的拼写</span><br>    <span class="hljs-comment">//有b</span><br>    <span class="hljs-attr">components</span>:&#123;<span class="hljs-string">&#x27;menu1&#x27;</span>:menu&#125;   <br>    <span class="hljs-attr">components</span>:&#123;submenu&#125;<br>    <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        ……<br>    &#125;<br>&#125;<br><br>&lt;menu1 /&gt;<br></code></pre></td></tr></table></figure><h1 id="ref主动获取子组件的数据"><a href="#ref主动获取子组件的数据" class="headerlink" title="ref主动获取子组件的数据"></a>ref主动获取子组件的数据</h1><h1 id="父子组件传值"><a href="#父子组件传值" class="headerlink" title="父子组件传值"></a>父子组件传值</h1><p><a href="https://www.yuque.com/huihuiwa/fttryd/ollemb">https://www.yuque.com/huihuiwa/fttryd/ollemb</a></p><h2 id="子组件"><a href="#子组件" class="headerlink" title="子组件:"></a>子组件:</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;q-expansion-item<br>          expand-separator<br>          :header-inset-level=<span class="hljs-string">&quot;initLevel&quot;</span><br>          :to=<span class="hljs-string">&quot;item.path&quot;</span><br>          :icon=<span class="hljs-string">&quot;item.icon&quot;</span><br>          :label=<span class="hljs-string">&quot;item.label&quot;</span><br>          @click=<span class="hljs-string">&quot;change(item.label)&quot;</span><br>        &gt;<br>              <br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> (&#123;<br><span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;submenu&#x27;</span>,<br><span class="hljs-attr">emits</span>:[<span class="hljs-string">&#x27;Ctitle&#x27;</span>],<br><span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params">props,ctx</span>)</span>&#123;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">change</span>(<span class="hljs-params">lable</span>)</span>&#123;<br>            ctx.emit(<span class="hljs-string">&#x27;Ctitle&#x27;</span>,lable);<br>        &#125;<br>    &#125;<br><span class="hljs-keyword">return</span>&#123;<br>        change,<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="父组件"><a href="#父组件" class="headerlink" title="父组件:"></a>父组件:</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;submenu :my-router=<span class="hljs-string">&quot;menuList&quot;</span> :init-level=<span class="hljs-string">&quot;0&quot;</span> @Ctitle=<span class="hljs-string">&quot;recivetitle&quot;</span> /&gt;<br> <br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>(&#123;<br><span class="hljs-attr">componets</span>:&#123;submenu&#125;,<br>    <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">recivetitle</span>(<span class="hljs-params">params:string</span>)</span>&#123;<br>            consol.log(params,<span class="hljs-string">&#x27;接收到的参数&#x27;</span>)<br>        &#125;<br>    &#125;<br><span class="hljs-keyword">return</span>&#123;<br>        recivetitle<br>    &#125;<br>&#125;)<br>    <br></code></pre></td></tr></table></figure><h2 id="祖孙传值"><a href="#祖孙传值" class="headerlink" title="祖孙传值:"></a>祖孙传值:</h2><p><a href="https://www.jianshu.com/p/e5c9fe40e429">https://www.jianshu.com/p/e5c9fe40e429</a></p><h1 id="axios接收到数据后跳转到catch的解决方法"><a href="#axios接收到数据后跳转到catch的解决方法" class="headerlink" title="axios接收到数据后跳转到catch的解决方法"></a>axios接收到数据后跳转到catch的解决方法</h1><h2 id="vue3中axios写法"><a href="#vue3中axios写法" class="headerlink" title="vue3中axios写法"></a>vue3中axios写法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">loadData</span>(<span class="hljs-params"></span>)</span>&#123;<br>    api.get(<span class="hljs-string">&#x27;/xxx&#x27;</span>)<br>     .then(<span class="hljs-function">(<span class="hljs-params">response</span>)=&gt;</span>&#123;<br>        data = respose.data<br>    &#125;)<br>    .catch(<span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(error)<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>上面的写法是文档中的写法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">loadData</span>(<span class="hljs-params"></span>)</span>&#123;<br>    api.get(<span class="hljs-string">&#x27;/xxx&#x27;</span>)<br>     .then(<span class="hljs-function">(<span class="hljs-params">response</span>)=&gt;</span>&#123;<br>        data = respose.data<br>    &#125;)<br>    .catch(()&#123;<br>        <span class="hljs-built_in">console</span>.log(error)<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>这是自己写的</p><p>差距在.catch中少了error，</p><p>把error加上后，会在控制台中显示出错误信息</p><h2 id="跳转原因："><a href="#跳转原因：" class="headerlink" title="跳转原因："></a>跳转原因：</h2><ol><li><p>看接口是否有问题</p></li><li><p>then中有没有错误的代码 </p><p>then中出错后也会跳转到.catch</p></li></ol><h2 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h2><p>按照官网的写法，把错误信息传进去打印出来，根据报错调试解决。</p><h1 id="quasar-api代理"><a href="#quasar-api代理" class="headerlink" title="quasar api代理"></a>quasar api代理</h1><p>应该在boot/axios.ts中配置 api的 baseURL， 配置quasar.conf.js无效</p><h1 id="quasar中引用scss-作用域为全局的解决"><a href="#quasar中引用scss-作用域为全局的解决" class="headerlink" title="quasar中引用scss 作用域为全局的解决"></a>quasar中引用scss 作用域为全局的解决</h1><style lang="scss" scoped src="../css/hlyLayout.scss"></style><p>引入外部资源的方法为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> url(...);</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这样引入的外部资源文件的作用域为全局</p><blockquote><p>Add “scoped” attribute to limit CSS to this component only</p></blockquote><p>这句话大家应该是见多了, 我也使用scoped, 但是使用@import引入外部样式表作用域依然是全局的，看了一遍@import的规则后, 进行初步猜测，难道是@import引入外部样式表错过了scoped style?</p><p>又回想到此前看过的前端性能优化文章里面都有提到，在生产环境中不要使用@import引入css，因为在请求到的css中含有@import引入css的话，会发起请求把@import的css引进来，多次请求浪费不必要的资源。</p><p>@import并不是引入代码到<style></style>里面，而是发起新的请求获得样式资源，并且没有加scoped</p><p>我们只需把@import改成<style src=""></style>引入外部样式，就可以解决样式是全局的问题</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../static/css/user.css&quot;</span>&gt;</span><span class="xml"></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span></span><br><span class="css"><span class="xml"><span class="hljs-selector-class">.user-content</span>&#123;</span></span><br><span class="css"><span class="xml">  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#3982e5</span>;</span></span><br><span class="css"><span class="xml">&#125;</span></span><br><span class="css"><span class="xml"></span></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="ts"><a href="#ts" class="headerlink" title="ts"></a>ts</h1><p>声明ref的num变量</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> ListNum: <span class="hljs-built_in">number</span> = ref(<span class="hljs-number">3</span>);<br></code></pre></td></tr></table></figure><p>esLint 报错</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">Unsafe assignment of an <span class="hljs-string">`any`</span> value.eslint@typescript-eslint/<span class="hljs-keyword">no</span>-unsafe-assignment<br></code></pre></td></tr></table></figure><p>原因：</p><ul><li>有默认值的变量不需要声明类型</li></ul><p>写法</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> ListNum = <span class="hljs-number">3</span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>uwsgi+Django实现域名访问</title>
    <link href="/2021/08/10/uwsgi+Django%E5%AE%9E%E7%8E%B0%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AE/"/>
    <url>/2021/08/10/uwsgi+Django%E5%AE%9E%E7%8E%B0%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>项目采用quasar+Django前后端分离，Django只能通过IP+端口号的方式。因为没有用https协议加密，便不太关心。</p><p>今天有功能用到定位功能，但http协议只能提供低精度定位，完全不能满足要求，于是开始升级https。第一步就是实现Django的域名访问。</p><p>Django文档中提到可以用uwsgi来映射端口给nginx，尝试过后写文档记录下来。</p><h1 id="uwsgi安装"><a href="#uwsgi安装" class="headerlink" title="uwsgi安装"></a>uwsgi安装</h1><p>系统环境centos7 python3.6</p><p><code>pip3 install  -y uwsgi</code></p><p>遇到报错<code>&lt;***.h&gt; </code>时，需要安装python对应的dev包后重新安装uwsgi</p><p><code>yum install python36-devel -y</code></p><p>测试 uwsgi 是否正常：</p><p>新建 test.py 文件，内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">application</span>(<span class="hljs-params">env, start_response</span>):</span><br>    start_response(<span class="hljs-string">&#x27;200 OK&#x27;</span>, [(<span class="hljs-string">&#x27;Content-Type&#x27;</span>,<span class="hljs-string">&#x27;text/html&#x27;</span>)])<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Hello World&quot;</span><br></code></pre></td></tr></table></figure><p>然后在终端运行：</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">uwsgi</span> --<span class="hljs-comment">http</span> <span class="hljs-comment">:8001</span> --<span class="hljs-comment">wsgi</span><span class="hljs-literal">-</span><span class="hljs-comment">file</span> <span class="hljs-comment">test</span><span class="hljs-string">.</span><span class="hljs-comment">py</span><br></code></pre></td></tr></table></figure><p>在浏览器内输入：ip:8001，查看是否有”Hello World”输出，若没有输出，请检查你的安装过程。</p><h1 id="安装Django"><a href="#安装Django" class="headerlink" title="安装Django"></a>安装Django</h1><p>把项目文件上传到所需目录，安装所需包即可</p><p>setting中关闭Debug</p><h1 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h1><p>安装过程略过，手动安装或用插件安装都可以，重点是Nginx配置部分</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">server<br>&#123;<br>listen 80;<br>listen 443 ssl http2;<br>    server_name 你的域名;<br>    charset urf-8;<br>    location / &#123;<br>    include uwsgi_params;<br>        <br>        uwsgi_pass 127.0.0.1:8001; #8001对应uwsgi配置中的socket<br>    &#125;  <br>&#125;<br></code></pre></td></tr></table></figure><h1 id="uwsgi配置文件"><a href="#uwsgi配置文件" class="headerlink" title="uwsgi配置文件"></a>uwsgi配置文件</h1><p>新建一个uwsgi.ini文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs shell">[uwsgi]<br>projectname = APP名称，与项目文件夹同名的那个<br>base = 项目路径<br><span class="hljs-meta">#</span><span class="bash"> 我的项目目录</span><br>chdir = %(base)<br><span class="hljs-meta">#</span><span class="bash"> 指定项目的application</span><br>module = %(projectname).wsgi:application<br><span class="hljs-meta">#</span><span class="bash"> 进程个数</span><br>workers = 5<br><span class="hljs-meta">#</span><span class="bash"> 启用主进程</span><br>master = true<br><span class="hljs-meta">#</span><span class="bash"> 启用线程</span><br>enable-threads = true<br><span class="hljs-meta">#</span><span class="bash"> 设置自中断时间</span><br>harakiri = 30 <br><span class="hljs-meta">#</span><span class="bash"> 设置缓冲</span>  <br>post-buffering = 4096<br><span class="hljs-meta">#</span><span class="bash">pid文件保存路径 前提是自定义路径一定要存在</span><br>pidfile = 自定义路径/inner_manager.pid<br><span class="hljs-meta">#</span><span class="bash"> 设置日志目录</span><br>daemonize = /tmp/uwsgi.log<br><span class="hljs-meta">#</span><span class="bash"> 指定sock的文件路径,可以用端口或sock文件（Nginx监听的端口）</span><br>socket = 127.0.0.1:8001<br><span class="hljs-meta">#</span><span class="bash"> django开放的端口</span><br>stats = 127.0.0.1:800<br></code></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>终端运行 :<code>uwsgi -i uwsgi.ini</code></p><p><img src="http://markdowntc.wanqqq29.cn//image-20210810143908780.png" alt="image-20210810143908780"></p><p>出现第二行时，打开Nginx中绑定的域名测试 访问正常，如果访问不同查看端口是否打开</p><p>打开域名时显示<code>Internal Server Error</code></p><p>说明配置文件有问题，查看控制台输出解决</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>通过uwsgi绑定域名后，可以对网站进行https加密，加密后注意前端接口的地址和跨域问题。</p><h2 id="uwsgi命令"><a href="#uwsgi命令" class="headerlink" title="uwsgi命令"></a>uwsgi命令</h2><p>配置完成后启动服务加载配置</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">uwsgi <span class="hljs-comment">--ini uwsgi.ini</span><br></code></pre></td></tr></table></figure><p>重载uwsgi配置文件</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">uwsgi <span class="hljs-comment">--reload uwsgi.pid</span><br></code></pre></td></tr></table></figure><p>停止uwsgi服务</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">uwsgi <span class="hljs-comment">--stop uwsgi.pid</span><br></code></pre></td></tr></table></figure><p>若使用stop不能完全停止进程可以用kill循环强行结束</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `ps axu |grep -vi <span class="hljs-string">&#x27;grep&#x27;</span>| grep <span class="hljs-string">&quot;uwsgi&quot;</span> | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>`;<span class="hljs-keyword">do</span> <span class="hljs-built_in">kill</span> -9 <span class="hljs-variable">$i</span>;<span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://zhuanlan.zhihu.com/p/52225008">https://zhuanlan.zhihu.com/p/52225008</a></p><p><a href="https://blog.csdn.net/weixin_34391445/article/details/92541369">https://blog.csdn.net/weixin_34391445/article/details/92541369</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>后端</tag>
      
      <tag>Django</tag>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2020东京奥运会金牌榜爬虫</title>
    <link href="/2021/08/07/2020%E4%B8%9C%E4%BA%AC%E5%A5%A5%E8%BF%90%E4%BC%9A%E9%87%91%E7%89%8C%E6%A6%9C%E7%88%AC%E8%99%AB/"/>
    <url>/2021/08/07/2020%E4%B8%9C%E4%BA%AC%E5%A5%A5%E8%BF%90%E4%BC%9A%E9%87%91%E7%89%8C%E6%A6%9C%E7%88%AC%E8%99%AB/</url>
    
    <content type="html"><![CDATA[<h1 id="页面分析"><a href="#页面分析" class="headerlink" title="页面分析"></a>页面分析</h1><h2 id="寻找Ajax接口"><a href="#寻找Ajax接口" class="headerlink" title="寻找Ajax接口"></a>寻找Ajax接口</h2><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/python&%E7%88%AC%E8%99%AB/2020%E4%B8%9C%E4%BA%AC%E5%A5%A5%E8%BF%90%E4%BC%9A%E9%87%91%E7%89%8C%E6%A6%9C%E7%88%AC%E8%99%AB.md/53785914223598.png"></p><p>接口地址：<code>https://api.cntv.cn/olympic/getOlyMedals?serviceId=pcocean&amp;itemcode=GEN-------------------------------&amp;t=jsonp&amp;cb=omedals1</code></p><h2 id="尝试请求接口，看是否能直接获取到数据"><a href="#尝试请求接口，看是否能直接获取到数据" class="headerlink" title="尝试请求接口，看是否能直接获取到数据"></a>尝试请求接口，看是否能直接获取到数据</h2><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/python&%E7%88%AC%E8%99%AB/2020%E4%B8%9C%E4%BA%AC%E5%A5%A5%E8%BF%90%E4%BC%9A%E9%87%91%E7%89%8C%E6%A6%9C%E7%88%AC%E8%99%AB.md/117305914228637.png"></p><h1 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h1><h2 id="伪造请求"><a href="#伪造请求" class="headerlink" title="伪造请求"></a>伪造请求</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">url=<span class="hljs-string">&quot;https://api.cntv.cn/olympic/getOlyMedals?serviceId=pcocean&amp;itemcode=GEN-------------------------------&amp;t=jsonp&amp;cb=omedals1&quot;</span><br>data = requests.get(url=url).text<br><span class="hljs-built_in">print</span>(data)<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/python&%E7%88%AC%E8%99%AB/2020%E4%B8%9C%E4%BA%AC%E5%A5%A5%E8%BF%90%E4%BC%9A%E9%87%91%E7%89%8C%E6%A6%9C%E7%88%AC%E8%99%AB.md/263005914229932.png"></p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/python&%E7%88%AC%E8%99%AB/2020%E4%B8%9C%E4%BA%AC%E5%A5%A5%E8%BF%90%E4%BC%9A%E9%87%91%E7%89%8C%E6%A6%9C%E7%88%AC%E8%99%AB.md/327755914230934.png"></p><h1 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h1><h2 id="将获取到的数据转化为JSON格式"><a href="#将获取到的数据转化为JSON格式" class="headerlink" title="将获取到的数据转化为JSON格式"></a>将获取到的数据转化为JSON格式</h2><p>将直接获取到的数据用<code>json.loads</code>函数报错，把数据放到JSON校验中查看并在代码中用正则处理<img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/python&%E7%88%AC%E8%99%AB/2020%E4%B8%9C%E4%BA%AC%E5%A5%A5%E8%BF%90%E4%BC%9A%E9%87%91%E7%89%8C%E6%A6%9C%E7%88%AC%E8%99%AB.md/478255914231111.png"></p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/python&%E7%88%AC%E8%99%AB/2020%E4%B8%9C%E4%BA%AC%E5%A5%A5%E8%BF%90%E4%BC%9A%E9%87%91%E7%89%8C%E6%A6%9C%E7%88%AC%E8%99%AB.md/88950015232942.png"></p><p>分析得出：数据多了omedals1，用正则处理掉</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">data = re.sub(<span class="hljs-string">&quot;omedals1\(&quot;</span>,<span class="hljs-string">&#x27;&#x27;</span>,data)<br>data = re.sub(<span class="hljs-string">&quot;\);&quot;</span>,<span class="hljs-string">&#x27;&#x27;</span>,data)<br></code></pre></td></tr></table></figure><p>将处理后的数据转为JSON格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">jData = json.loads(data)<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/python&%E7%88%AC%E8%99%AB/2020%E4%B8%9C%E4%BA%AC%E5%A5%A5%E8%BF%90%E4%BC%9A%E9%87%91%E7%89%8C%E6%A6%9C%E7%88%AC%E8%99%AB.md/165250015225987.png"></p><p>可以看到，现在输出的数据为字典与列表的结合，说明转码成功</p><h2 id="将数据定位到奖牌"><a href="#将数据定位到奖牌" class="headerlink" title="将数据定位到奖牌"></a>将数据定位到奖牌</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">MedalList = jData[<span class="hljs-string">&#x27;data&#x27;</span>][<span class="hljs-string">&#x27;medalsList&#x27;</span>]<br></code></pre></td></tr></table></figure><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">rank = i[<span class="hljs-string">&#x27;rank&#x27;</span>]<br>   countryname = i[<span class="hljs-string">&#x27;countryname&#x27;</span>]<br>   gold = i[<span class="hljs-string">&#x27;gold&#x27;</span>]<br>   silver = i[<span class="hljs-string">&#x27;silver&#x27;</span>]<br>   bronze = i[<span class="hljs-string">&#x27;bronze&#x27;</span>]<br>   count = i[<span class="hljs-string">&#x27;count&#x27;</span>]<br></code></pre></td></tr></table></figure><h2 id="开始拼接字符串"><a href="#开始拼接字符串" class="headerlink" title="开始拼接字符串"></a>开始拼接字符串</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">ItemText = <span class="hljs-string">&#x27;排名：&#x27;</span>+ rank + <span class="hljs-string">&#x27;\t&#x27;</span> + countryname + <span class="hljs-string">&#x27;\t金牌：&#x27;</span> + gold + <span class="hljs-string">&#x27;\t银牌：&#x27;</span> + silver + <span class="hljs-string">&#x27;\t铜牌&#x27;</span> + bronze + <span class="hljs-string">&#x27;\t总数：&#x27;</span> + count + <span class="hljs-string">&#x27;\n&#x27;</span><br>String += ItemText<br></code></pre></td></tr></table></figure><h1 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;奖牌榜.csv&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>, newline=<span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    header = [<span class="hljs-string">&#x27;排名&#x27;</span>, <span class="hljs-string">&#x27;国家&#x27;</span>, <span class="hljs-string">&#x27;金牌&#x27;</span>, <span class="hljs-string">&#x27;银牌&#x27;</span>, <span class="hljs-string">&#x27;铜牌&#x27;</span>, <span class="hljs-string">&#x27;总数&#x27;</span>]<br>    f_csv = csv.writer(f)<br>    f_csv.writerow(header)<br>   <br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;奖牌榜.csv&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>, newline=<span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f_csv = csv.writer(f)<br>            f_csv.writerow(Csvitem)<br></code></pre></td></tr></table></figure><h1 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-number">2020</span><span class="hljs-string">东京奥运会金牌榜</span><br><span class="hljs-string">排名：1</span><span class="hljs-string">中国</span><span class="hljs-string">金牌：38</span><span class="hljs-string">银牌：29</span><span class="hljs-string">铜牌17</span><span class="hljs-string">总数：84</span><br><span class="hljs-string">排名：2</span><span class="hljs-string">美国</span><span class="hljs-string">金牌：33</span><span class="hljs-string">银牌：36</span><span class="hljs-string">铜牌32</span><span class="hljs-string">总数：101</span><br><span class="hljs-string">排名：3</span><span class="hljs-string">日本</span><span class="hljs-string">金牌：24</span><span class="hljs-string">银牌：12</span><span class="hljs-string">铜牌16</span><span class="hljs-string">总数：52</span><br><span class="hljs-string">排名：4</span><span class="hljs-string">英国</span><span class="hljs-string">金牌：19</span><span class="hljs-string">银牌：20</span><span class="hljs-string">铜牌21</span><span class="hljs-string">总数：60</span><br><span class="hljs-string">排名：5</span><span class="hljs-string">俄罗斯奥运队</span><span class="hljs-string">金牌：17</span><span class="hljs-string">银牌：24</span><span class="hljs-string">铜牌22</span><span class="hljs-string">总数：63</span><br><span class="hljs-string">排名：6</span><span class="hljs-string">澳大利亚</span><span class="hljs-string">金牌：17</span><span class="hljs-string">银牌：6</span><span class="hljs-string">铜牌21</span><span class="hljs-string">总数：44</span><br><span class="hljs-string">排名：7</span><span class="hljs-string">德国</span><span class="hljs-string">金牌：10</span><span class="hljs-string">银牌：11</span><span class="hljs-string">铜牌16</span><span class="hljs-string">总数：37</span><br><span class="hljs-string">排名：8</span><span class="hljs-string">意大利</span><span class="hljs-string">金牌：10</span><span class="hljs-string">银牌：10</span><span class="hljs-string">铜牌18</span><span class="hljs-string">总数：38</span><br><span class="hljs-string">排名：9</span><span class="hljs-string">荷兰</span><span class="hljs-string">金牌：9</span><span class="hljs-string">银牌：10</span><span class="hljs-string">铜牌12</span><span class="hljs-string">总数：31</span><br><span class="hljs-string">排名：10</span><span class="hljs-string">法国</span><span class="hljs-string">金牌：7</span><span class="hljs-string">银牌：12</span><span class="hljs-string">铜牌9</span><span class="hljs-string">总数：28</span><br><span class="hljs-string">排名：11</span><span class="hljs-string">新西兰</span><span class="hljs-string">金牌：7</span><span class="hljs-string">银牌：6</span><span class="hljs-string">铜牌7</span><span class="hljs-string">总数：20</span><br><span class="hljs-string">排名：12</span><span class="hljs-string">匈牙利</span><span class="hljs-string">金牌：6</span><span class="hljs-string">银牌：7</span><span class="hljs-string">铜牌6</span><span class="hljs-string">总数：19</span><br><span class="hljs-string">排名：13</span><span class="hljs-string">加拿大</span><span class="hljs-string">金牌：6</span><span class="hljs-string">银牌：6</span><span class="hljs-string">铜牌11</span><span class="hljs-string">总数：23</span><br><span class="hljs-string">排名：14</span><span class="hljs-string">韩国</span><span class="hljs-string">金牌：6</span><span class="hljs-string">银牌：4</span><span class="hljs-string">铜牌9</span><span class="hljs-string">总数：19</span><br><span class="hljs-string">排名：15</span><span class="hljs-string">巴西</span><span class="hljs-string">金牌：6</span><span class="hljs-string">银牌：4</span><span class="hljs-string">铜牌8</span><span class="hljs-string">总数：18</span><br><span class="hljs-string">排名：16</span><span class="hljs-string">古巴</span><span class="hljs-string">金牌：6</span><span class="hljs-string">银牌：3</span><span class="hljs-string">铜牌4</span><span class="hljs-string">总数：13</span><br><span class="hljs-string">排名：17</span><span class="hljs-string">波兰</span><span class="hljs-string">金牌：4</span><span class="hljs-string">银牌：4</span><span class="hljs-string">铜牌5</span><span class="hljs-string">总数：13</span><br><span class="hljs-string">排名：18</span><span class="hljs-string">捷克</span><span class="hljs-string">金牌：4</span><span class="hljs-string">银牌：3</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：9</span><br><span class="hljs-string">排名：19</span><span class="hljs-string">牙买加</span><span class="hljs-string">金牌：4</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌3</span><span class="hljs-string">总数：8</span><br><span class="hljs-string">排名：20</span><span class="hljs-string">西班牙</span><span class="hljs-string">金牌：3</span><span class="hljs-string">银牌：6</span><span class="hljs-string">铜牌5</span><span class="hljs-string">总数：14</span><br><span class="hljs-string">排名：21</span><span class="hljs-string">瑞士</span><span class="hljs-string">金牌：3</span><span class="hljs-string">银牌：4</span><span class="hljs-string">铜牌6</span><span class="hljs-string">总数：13</span><br><span class="hljs-string">排名：22</span><span class="hljs-string">克罗地亚</span><span class="hljs-string">金牌：3</span><span class="hljs-string">银牌：3</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：8</span><br><span class="hljs-string">排名：22</span><span class="hljs-string">肯尼亚</span><span class="hljs-string">金牌：3</span><span class="hljs-string">银牌：3</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：8</span><br><span class="hljs-string">排名：24</span><span class="hljs-string">挪威</span><span class="hljs-string">金牌：3</span><span class="hljs-string">银牌：2</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：6</span><br><span class="hljs-string">排名：25</span><span class="hljs-string">比利时</span><span class="hljs-string">金牌：3</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：5</span><br><span class="hljs-string">排名：25</span><span class="hljs-string">斯洛文尼亚</span><span class="hljs-string">金牌：3</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：5</span><br><span class="hljs-string">排名：27</span><span class="hljs-string">瑞典</span><span class="hljs-string">金牌：2</span><span class="hljs-string">银牌：6</span><span class="hljs-string">铜牌0</span><span class="hljs-string">总数：8</span><br><span class="hljs-string">排名：28</span><span class="hljs-string">格鲁吉亚</span><span class="hljs-string">金牌：2</span><span class="hljs-string">银牌：5</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：8</span><br><span class="hljs-string">排名：29</span><span class="hljs-string">中国台北</span><span class="hljs-string">金牌：2</span><span class="hljs-string">银牌：4</span><span class="hljs-string">铜牌6</span><span class="hljs-string">总数：12</span><br><span class="hljs-string">排名：30</span><span class="hljs-string">丹麦</span><span class="hljs-string">金牌：2</span><span class="hljs-string">银牌：3</span><span class="hljs-string">铜牌4</span><span class="hljs-string">总数：9</span><br><span class="hljs-string">排名：31</span><span class="hljs-string">土耳其</span><span class="hljs-string">金牌：2</span><span class="hljs-string">银牌：2</span><span class="hljs-string">铜牌8</span><span class="hljs-string">总数：12</span><br><span class="hljs-string">排名：32</span><span class="hljs-string">伊朗</span><span class="hljs-string">金牌：2</span><span class="hljs-string">银牌：2</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：6</span><br><span class="hljs-string">排名：33</span><span class="hljs-string">塞尔维亚</span><span class="hljs-string">金牌：2</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌4</span><span class="hljs-string">总数：7</span><br><span class="hljs-string">排名：34</span><span class="hljs-string">保加利亚</span><span class="hljs-string">金牌：2</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：5</span><br><span class="hljs-string">排名：35</span><span class="hljs-string">乌干达</span><span class="hljs-string">金牌：2</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：4</span><br><span class="hljs-string">排名：36</span><span class="hljs-string">厄瓜多尔</span><span class="hljs-string">金牌：2</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌0</span><span class="hljs-string">总数：3</span><br><span class="hljs-string">排名：37</span><span class="hljs-string">乌兹别克斯坦</span><span class="hljs-string">金牌：2</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：4</span><br><span class="hljs-string">排名：38</span><span class="hljs-string">希腊</span><span class="hljs-string">金牌：2</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：3</span><br><span class="hljs-string">排名：38</span><span class="hljs-string">卡塔尔</span><span class="hljs-string">金牌：2</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：3</span><br><span class="hljs-string">排名：40</span><span class="hljs-string">科索沃</span><span class="hljs-string">金牌：2</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌0</span><span class="hljs-string">总数：2</span><br><span class="hljs-string">排名：40</span><span class="hljs-string">巴哈马</span><span class="hljs-string">金牌：2</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌0</span><span class="hljs-string">总数：2</span><br><span class="hljs-string">排名：42</span><span class="hljs-string">乌克兰</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：5</span><span class="hljs-string">铜牌10</span><span class="hljs-string">总数：16</span><br><span class="hljs-string">排名：43</span><span class="hljs-string">白俄罗斯</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：3</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：6</span><br><span class="hljs-string">排名：44</span><span class="hljs-string">罗马尼亚</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：3</span><span class="hljs-string">铜牌0</span><span class="hljs-string">总数：4</span><br><span class="hljs-string">排名：44</span><span class="hljs-string">委内瑞拉</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：3</span><span class="hljs-string">铜牌0</span><span class="hljs-string">总数：4</span><br><span class="hljs-string">排名：46</span><span class="hljs-string">中国香港</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：2</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：5</span><br><span class="hljs-string">排名：47</span><span class="hljs-string">菲律宾</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：2</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：4</span><br><span class="hljs-string">排名：47</span><span class="hljs-string">斯洛伐克</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：2</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：4</span><br><span class="hljs-string">排名：49</span><span class="hljs-string">南非</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：2</span><span class="hljs-string">铜牌0</span><span class="hljs-string">总数：3</span><br><span class="hljs-string">排名：50</span><span class="hljs-string">奥地利</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌5</span><span class="hljs-string">总数：7</span><br><span class="hljs-string">排名：51</span><span class="hljs-string">印度尼西亚</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌3</span><span class="hljs-string">总数：5</span><br><span class="hljs-string">排名：52</span><span class="hljs-string">葡萄牙</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：4</span><br><span class="hljs-string">排名：53</span><span class="hljs-string">埃塞俄比亚</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：3</span><br><span class="hljs-string">排名：54</span><span class="hljs-string">突尼斯</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌0</span><span class="hljs-string">总数：2</span><br><span class="hljs-string">排名：55</span><span class="hljs-string">以色列</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：3</span><br><span class="hljs-string">排名：55</span><span class="hljs-string">爱尔兰</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：3</span><br><span class="hljs-string">排名：57</span><span class="hljs-string">爱沙尼亚</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：2</span><br><span class="hljs-string">排名：57</span><span class="hljs-string">泰国</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：2</span><br><span class="hljs-string">排名：57</span><span class="hljs-string">斐济</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：2</span><br><span class="hljs-string">排名：57</span><span class="hljs-string">拉脱维亚</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：2</span><br><span class="hljs-string">排名：61</span><span class="hljs-string">百慕大</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌0</span><span class="hljs-string">总数：1</span><br><span class="hljs-string">排名：61</span><span class="hljs-string">波多黎各</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌0</span><span class="hljs-string">总数：1</span><br><span class="hljs-string">排名：61</span><span class="hljs-string">摩洛哥</span><span class="hljs-string">金牌：1</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌0</span><span class="hljs-string">总数：1</span><br><span class="hljs-string">排名：64</span><span class="hljs-string">哥伦比亚</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：4</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：5</span><br><span class="hljs-string">排名：65</span><span class="hljs-string">多米尼加</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：3</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：5</span><br><span class="hljs-string">排名：66</span><span class="hljs-string">印度</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：2</span><span class="hljs-string">铜牌3</span><span class="hljs-string">总数：5</span><br><span class="hljs-string">排名：67</span><span class="hljs-string">亚美尼亚</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：2</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：4</span><br><span class="hljs-string">排名：68</span><span class="hljs-string">吉尔吉斯斯坦</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：2</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：3</span><br><span class="hljs-string">排名：69</span><span class="hljs-string">蒙古</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌3</span><span class="hljs-string">总数：4</span><br><span class="hljs-string">排名：69</span><span class="hljs-string">阿塞拜疆</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌3</span><span class="hljs-string">总数：4</span><br><span class="hljs-string">排名：71</span><span class="hljs-string">阿根廷</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：3</span><br><span class="hljs-string">排名：71</span><span class="hljs-string">圣马力诺</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：3</span><br><span class="hljs-string">排名：73</span><span class="hljs-string">约旦</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：2</span><br><span class="hljs-string">排名：73</span><span class="hljs-string">尼日利亚</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：2</span><br><span class="hljs-string">排名：75</span><span class="hljs-string">土库曼斯坦</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌0</span><span class="hljs-string">总数：1</span><br><span class="hljs-string">排名：75</span><span class="hljs-string">北马其顿</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌0</span><span class="hljs-string">总数：1</span><br><span class="hljs-string">排名：75</span><span class="hljs-string">纳米比亚</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌0</span><span class="hljs-string">总数：1</span><br><span class="hljs-string">排名：75</span><span class="hljs-string">立陶宛</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：1</span><span class="hljs-string">铜牌0</span><span class="hljs-string">总数：1</span><br><span class="hljs-string">排名：79</span><span class="hljs-string">哈萨克斯坦</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌7</span><span class="hljs-string">总数：7</span><br><span class="hljs-string">排名：80</span><span class="hljs-string">墨西哥</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌4</span><span class="hljs-string">总数：4</span><br><span class="hljs-string">排名：80</span><span class="hljs-string">埃及</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌4</span><span class="hljs-string">总数：4</span><br><span class="hljs-string">排名：82</span><span class="hljs-string">芬兰</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌2</span><span class="hljs-string">总数：2</span><br><span class="hljs-string">排名：83</span><span class="hljs-string">科威特</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：1</span><br><span class="hljs-string">排名：83</span><span class="hljs-string">科特迪瓦</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：1</span><br><span class="hljs-string">排名：83</span><span class="hljs-string">马来西亚</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：1</span><br><span class="hljs-string">排名：83</span><span class="hljs-string">加纳</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：1</span><br><span class="hljs-string">排名：83</span><span class="hljs-string">叙利亚</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：1</span><br><span class="hljs-string">排名：83</span><span class="hljs-string">布基纳法索</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：1</span><br><span class="hljs-string">排名：83</span><span class="hljs-string">格林纳达</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：1</span><br><span class="hljs-string">排名：83</span><span class="hljs-string">摩尔多瓦</span><span class="hljs-string">金牌：0</span><span class="hljs-string">银牌：0</span><span class="hljs-string">铜牌1</span><span class="hljs-string">总数：1</span><br><br><br><span class="hljs-string">进程已结束，退出代码为</span> <span class="hljs-number">0</span><br><br></code></pre></td></tr></table></figure><h1 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h1><h2 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h2><p>声明x轴y轴的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">tGold = []<br>   tSilver = []<br>   tBronze = []<br>   tCountryName = []<br><br>   <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> Medallist:<br>       tGold.append(i[<span class="hljs-string">&#x27;gold&#x27;</span>])<br>       tSilver.append(i[<span class="hljs-string">&#x27;silver&#x27;</span>])<br>       tBronze.append(i[<span class="hljs-string">&#x27;bronze&#x27;</span>])<br>       tCountryName.append(i[<span class="hljs-string">&#x27;countryname&#x27;</span>])<br></code></pre></td></tr></table></figure><p>调用Pyecharts 生成条形图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python">c = (<br>        Bar(init_opts=opts.InitOpts(width=<span class="hljs-string">&#x27;1440px&#x27;</span>,height=<span class="hljs-string">&#x27;2000px&#x27;</span>))<br>            .add_yaxis(<span class="hljs-string">&quot;金牌&quot;</span>, tGold, stack=<span class="hljs-string">&quot;stack1&quot;</span>)<br>            .add_yaxis(<span class="hljs-string">&quot;银牌&quot;</span>, tSilver, stack=<span class="hljs-string">&quot;stack1&quot;</span>)<br>            .add_yaxis(<span class="hljs-string">&quot;铜牌&quot;</span>, tBronze, stack=<span class="hljs-string">&quot;stack1&quot;</span>)<br>            .add_xaxis(tCountryName)<br>            .reversal_axis()<br>            .set_series_opts(label_opts=opts.LabelOpts(is_show=<span class="hljs-literal">False</span>))<br>            .set_global_opts(title_opts=opts.TitleOpts(title=<span class="hljs-string">&quot;2020东京奥运奖牌榜&quot;</span>),<br>                             yaxis_opts=opts.AxisOpts(is_inverse=<span class="hljs-literal">True</span>)<br>                             )<br>    )<br>    c.render(<span class="hljs-string">&quot;MedalList.html&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/python&%E7%88%AC%E8%99%AB/2020%E4%B8%9C%E4%BA%AC%E5%A5%A5%E8%BF%90%E4%BC%9A%E9%87%91%E7%89%8C%E6%A6%9C%E7%88%AC%E8%99%AB.md/379180015222754.png"></p><h1 id="全部代码"><a href="#全部代码" class="headerlink" title="全部代码"></a>全部代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests,json,re,csv<br><span class="hljs-keyword">from</span> pyecharts <span class="hljs-keyword">import</span> options <span class="hljs-keyword">as</span> opts<br><span class="hljs-keyword">from</span> pyecharts.charts <span class="hljs-keyword">import</span> Bar<br><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">spyder</span>():</span><br>    url =<span class="hljs-string">&quot;https://api.cntv.cn/olympic/getOlyMedals?serviceId=pcocean&amp;itemcode=GEN-------------------------------&amp;t=jsonp&amp;cb=banomedals&quot;</span><br>    data = requests.get(url=url).text<br>    data = re.sub(<span class="hljs-string">&#x27;omedals1\(&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,data)<br>    data = re.sub(<span class="hljs-string">&#x27;\);&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,data)<br>    jData = json.loads(data)<br>    MedalsList = jData[<span class="hljs-string">&#x27;data&#x27;</span>][<span class="hljs-string">&#x27;medalsList&#x27;</span>]<br>    String = <span class="hljs-string">&#x27;奥运奖牌榜\n&#x27;</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;奖牌榜.csv&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>, newline=<span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        header = [<span class="hljs-string">&#x27;排名&#x27;</span>, <span class="hljs-string">&#x27;国家&#x27;</span>, <span class="hljs-string">&#x27;金牌&#x27;</span>, <span class="hljs-string">&#x27;银牌&#x27;</span>, <span class="hljs-string">&#x27;铜牌&#x27;</span>, <span class="hljs-string">&#x27;总数&#x27;</span>]<br>        f_csv = csv.writer(f)<br>        f_csv.writerow(header)<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> MedalsList:<br>        rank = i[<span class="hljs-string">&#x27;rank&#x27;</span>]<br>        count = i[<span class="hljs-string">&#x27;count&#x27;</span>]<br>        gold = i[<span class="hljs-string">&#x27;gold&#x27;</span>]<br>        silver = i[<span class="hljs-string">&#x27;silver&#x27;</span>]<br>        bronze = i[<span class="hljs-string">&#x27;bronze&#x27;</span>]<br>        countryname = i[<span class="hljs-string">&#x27;countryname&#x27;</span>]<br><br>        Csvitem = []<br>        Csvitem.append(rank)<br>        Csvitem.append(countryname)<br>        Csvitem.append(count)<br>        Csvitem.append(gold)<br>        Csvitem.append(silver)<br>        Csvitem.append(bronze)<br>        String += <span class="hljs-string">&#x27;排名：&#x27;</span>+ rank + <span class="hljs-string">&#x27;\t&#x27;</span> + countryname + <span class="hljs-string">&#x27;\t金牌：&#x27;</span> + gold + <span class="hljs-string">&#x27;\t银牌：&#x27;</span> + silver + <span class="hljs-string">&#x27;\t铜牌&#x27;</span> + bronze + <span class="hljs-string">&#x27;\t总数：&#x27;</span> + count + <span class="hljs-string">&#x27;\n&#x27;</span><br>        <span class="hljs-comment">#print(String)</span><br><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;奖牌榜.csv&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>, newline=<span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f_csv = csv.writer(f)<br>            f_csv.writerow(Csvitem)<br>    <span class="hljs-keyword">return</span>  MedalsList<br><br><span class="hljs-comment"># 可视化</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">drow</span>(<span class="hljs-params">medalslist</span>):</span><br>    tGold = []<br>    tSilver = []<br>    tBronze = []<br>    tCountryName = []<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> medalslist:<br>        tGold.append(i[<span class="hljs-string">&#x27;gold&#x27;</span>])<br>        tSilver.append(i[<span class="hljs-string">&#x27;silver&#x27;</span>])<br>        tBronze.append(i[<span class="hljs-string">&#x27;bronze&#x27;</span>])<br>        tCountryName.append(i[<span class="hljs-string">&#x27;countryname&#x27;</span>])<br><br>    c = (<br>        Bar(init_opts=opts.InitOpts(width=<span class="hljs-string">&#x27;1440px&#x27;</span>, height=<span class="hljs-string">&#x27;2000px&#x27;</span>))<br>            .add_yaxis(<span class="hljs-string">&quot;金牌&quot;</span>, tGold, stack=<span class="hljs-string">&quot;stack1&quot;</span>)<br>            .add_yaxis(<span class="hljs-string">&quot;银牌&quot;</span>, tSilver, stack=<span class="hljs-string">&quot;stack1&quot;</span>)<br>            .add_yaxis(<span class="hljs-string">&quot;铜牌&quot;</span>, tBronze, stack=<span class="hljs-string">&quot;stack1&quot;</span>)<br>            .add_xaxis(tCountryName)<br>            .reversal_axis()<br>            .set_series_opts(label_opts=opts.LabelOpts(is_show=<span class="hljs-literal">False</span>))<br>            .set_global_opts(title_opts=opts.TitleOpts(title=<span class="hljs-string">&quot;2020东京奥运奖牌榜&quot;</span>),<br>                             yaxis_opts=opts.AxisOpts(is_inverse=<span class="hljs-literal">True</span>)<br>                             )<br>    )<br>    c.render(<span class="hljs-string">&quot;MedalList.html&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;ok&#x27;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    drow(spyder())<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>爬虫</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>request.get中文乱码解决</title>
    <link href="/2021/08/06/request.get%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/"/>
    <url>/2021/08/06/request.get%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/</url>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在爬取网站新闻时发现，返回的html代码中中文是乱码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">headers = &#123;<br>    <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0&quot;</span>,<br>    <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&quot;</span>,<br>    <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN&quot;</span>,<br>    <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate, br&quot;</span>,<br>    <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;http://www.sdyu.edu.cn/index.htm&quot;</span>,<br>&#125;<br>url=<span class="hljs-string">&#x27;http://www.sdyu.edu.cn/xwzx/tzgg.htm&#x27;</span><br>a = requests.get(url=url,headers=headers).text<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/python&%E7%88%AC%E8%99%AB/request.get%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3.md/114650115231128.png"></p><p>对页面代码进行分析，发现页面是以<code>utf-8</code>格式编码的</p><p><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/python&%E7%88%AC%E8%99%AB/request.get%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3.md/172840115236883.png"></p><h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><ol><li><p>将get到的结果先转换为utf-8格式编码，之后再获取text属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = requests.get(url=url,headers=headers)<br>a.encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span><br>a=a.text<br></code></pre></td></tr></table></figure></li><li><p>将get到的text结果先编码，后解码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">a = requests.get(url=url,headers=headers).text.encode(<span class="hljs-string">&#x27;latin-1&#x27;</span>).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br></code></pre></td></tr></table></figure><p>为什么要先编码后解码，直接utf-8解码不行吗？</p><p>答案是否定的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(requests.get(url=url,headers=headers)))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(requests.get(url=url,headers=headers).text))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(requests.get(url=url,headers=headers).text.encode(<span class="hljs-string">&#x27;latin-1&#x27;</span>)))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(requests.get(url=url,headers=headers).text.encode(<span class="hljs-string">&#x27;latin-1&#x27;</span>).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)))<br>---------------------------------<br>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> &#x27;<span class="hljs-title">requests</span>.<span class="hljs-title">models</span>.<span class="hljs-title">Response</span>&#x27;&gt;</span><br><span class="hljs-class">&lt;<span class="hljs-title">class</span> &#x27;<span class="hljs-title">str</span>&#x27;&gt;</span><br><span class="hljs-class">&lt;<span class="hljs-title">class</span> &#x27;<span class="hljs-title">bytes</span>&#x27;&gt;</span><br><span class="hljs-class">&lt;<span class="hljs-title">class</span> &#x27;<span class="hljs-title">str</span>&#x27;&gt;</span><br></code></pre></td></tr></table></figure><p>decode不能直接对字符串进行解码，所以要先将获取到的text字符串转码。</p></li></ol><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>​<br><img src="https://gitee.com/wanqqq29/vnote_images/raw/master/markdown%E6%96%87%E4%BB%B6%E5%A4%B9/python&%E7%88%AC%E8%99%AB/request.get%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3.md/283270115237515.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>爬虫</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大数据环境搭建笔记</title>
    <link href="/2021/08/05/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    <url>/2021/08/05/%E5%A4%A7%E6%95%B0%E6%8D%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="source-etc-profile"><a href="#source-etc-profile" class="headerlink" title="source /etc/profile"></a>source /etc/profile</h1><h1 id="虚拟机环境"><a href="#虚拟机环境" class="headerlink" title="虚拟机环境"></a>虚拟机环境</h1><table><thead><tr><th>名称</th><th>内网ip</th><th>外网ip</th><th>密码</th></tr></thead><tbody><tr><td>master</td><td></td><td></td><td></td></tr><tr><td>slave1</td><td></td><td></td><td></td></tr><tr><td>slave2</td><td></td><td></td><td></td></tr><tr><td>slave3</td><td></td><td></td><td></td></tr></tbody></table><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">TZ=&#x27;Asia/Shanghai&#x27;;export TZ<br><br>export JAVA_HOME=/usr/java/jdk1.8.0_171<br>export CLASSPATH=$JAVA_HOME/lib/<br>export PATH=$PATH:$JAVA_HOME/bin<br>export PATH JAVA_HOME CLASSPATH<br><br>export HADOOP_HOME=/usr/hadoop/hadoop-2.7.3<br>export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin<br><br>export ZOOKEEPER_HOME=/usr/zookeeper/zookeeper-3.4.10<br>PATH=$PATH:$ZOOKEEPER_HOME/bin<br><br>export HIVE_HOME=/usr/hive/apache-hive-2.1.1-bin<br>export PATH=$PATH:$HIVE_HOME/bin<br></code></pre></td></tr></table></figure><h1 id="下载脚本"><a href="#下载脚本" class="headerlink" title="下载脚本"></a>下载脚本</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi wget.sh<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><br>darray=(http://172.16.47.240/bigdata/bigdata_tar/jdk-8u171-linux-x64.tar.gz http://172.16.47.240/bigdata/bigdata_tar/zookeeper-3.4.10.tar.gz http://172.16.47.240/bigdata/bigdata_tar/hadoop-2.7.3.tar.gz http://172.16.47.240/bigdata/bigdata_tar/apache-hive-2.1.1-bin.tar.gz)<br>filearray=(/usr/java /usr/zookeeper /usr/hadoop /usr/hive)<br>namearray=(/usr/java/jdk-8u171-linux-x64.tar.gz /usr/zookeeper/zookeeper-3.4.10.tar.gz /usr/hadoop/hadoop-2.7.3 /usr/hive/apache-hive-2.1.1-bin)<br><br><br>for i in 0 1 2 3<br>do<br>&#123;<br>wget -P $&#123;filearray[$i]&#125; $&#123;darray[$i]&#125; <br><br>&#125;&amp;<br>done<br>wait<br><br>echo &quot;jdk,zookeeper,hadoop,hive 下载解压完成&quot;<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 还有问题 暂时别用，上面只是下载的 还需要解压</span><br>&amp;&amp; tar -zxvf $&#123;namearray[$i]&#125; -C $&#123;filearray[$i]&#125;<br>echo &quot;export JAVA_HOME=/usr/java/jdk1.8.0_171&quot; &gt;&gt; /etc/profile<br>echo &quot;export CLASSPATH=$JAVA_HOME/lib/&quot; &gt;&gt; /etc/profile<br>echo &quot;export PATH=$PATH:$JAVA_HOME/bin&quot; &gt;&gt; /etc/profile<br>echo &quot;export PATH JAVA_HOME CLASSPATH&quot; &gt;&gt; /etc/profile<br>echo &quot;export HADOOP_HOME=/usr/hadoop/hadoop-2.7.3&quot; &gt;&gt; /etc/profile<br>echo &quot;export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin&quot; &gt;&gt; /etc/profile<br>echo &quot;PATH=$PATH:$ZOOKEEPER_HOME/bin&quot; &gt;&gt; /etc/profile<br>echo &quot;export HIVE_HOME=/usr/hive/apache-hive-2.1.1-bin&quot; &gt;&gt; /etc/profile<br>echo &quot;export PATH=$PATH:$HIVE_HOME/bin&quot; &gt;&gt; /etc/profile<br>source /etc/profile<br>echo &quot;环境变量配置成功&quot;<br><br><br><br>执行:chmod +x wget.sh<br>执行：./wget.sh<br></code></pre></td></tr></table></figure><h1 id="修改本地源"><a href="#修改本地源" class="headerlink" title="修改本地源"></a>修改本地源</h1><h2 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hostnamectl set-hostname master (slave1 slave2)<br>bash<br></code></pre></td></tr></table></figure><h2 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!bin/bash</span><br>pkill -9 yum<br>cd /etc/yum.repos.d<br>rm -rf *<br>wget http://172.16.47.240/bigdata/repofile/bigdata.repo<br>yum clean all<br><br></code></pre></td></tr></table></figure><h1 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h1><h3 id="选择时区"><a href="#选择时区" class="headerlink" title="选择时区"></a>选择时区</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">选择时区：tzselect<br>选择地区，填写数字<br>确定覆盖时间：1<br>修改环境变量：echo &quot;TZ=&#x27;Asia/Shanghai&#x27;;export Tz&quot; &gt;&gt; /etc/profile &amp;&amp; /etc/profile<br></code></pre></td></tr></table></figure><h3 id="配置ntp"><a href="#配置ntp" class="headerlink" title="配置ntp"></a>配置ntp</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install -y ntp<br></code></pre></td></tr></table></figure><h4 id="master-作为ntp服务器"><a href="#master-作为ntp服务器" class="headerlink" title="master 作为ntp服务器"></a>master 作为ntp服务器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/ntp.conf<br><br>注释掉 server 0~n<br>添加:server 127.127.1.0<br>fudge 127.127.1.0 stratum 10<br>在master上： /bin/systemctl restart ntpd.service<br>在slave1,slave2上： ntpdate master<br></code></pre></td></tr></table></figure><h1 id="配置定时任务"><a href="#配置定时任务" class="headerlink" title="配置定时任务"></a>配置定时任务</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">确保crontab服务开启<br>service crond status<br>/sbin/service crond start <br></code></pre></td></tr></table></figure><h4 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">crontab -e<br>i: */30 10-17 * * * /usr/sbin/ntpdate master<br>crontab -l<br></code></pre></td></tr></table></figure><h1 id="zookeeper"><a href="#zookeeper" class="headerlink" title="zookeeper"></a>zookeeper</h1><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/usr/zookeeper<br>tar -zxvf /usr/zookeeper/zookeeper-3.4.10.tar.gz -C /usr/zookeeper/<br>rm -rf /usr/zookeeper/zookeeper-3.4.10.tar.gz<br></code></pre></td></tr></table></figure><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/profile<br><br>export ZOOKEEPER_HOME=/usr/zookeeper/zookeeper-3.4.10<br>PATH=$PATH:$ZOOKEEPER_HOME/bin<br><br>source /etc/profile<br></code></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">1:正常操作<br>cp /usr/zookeeper/zookeeper-3.4.10/conf/zoo_sample.cfg zoo.cfg<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell">2:离谱操作<br>vi /usr/zookeeper/zookeeper-3.4.10/conf/zoo.cfg<br><br>插入：<br><span class="hljs-meta">#</span><span class="bash"> The number of milliseconds of each tick</span><br>tickTime=2000<br><span class="hljs-meta">#</span><span class="bash"> The number of ticks that the initial</span><br><span class="hljs-meta">#</span><span class="bash"> synchronization phase can take</span><br>initLimit=10<br><span class="hljs-meta">#</span><span class="bash"> The number of ticks that can pass between</span><br><span class="hljs-meta">#</span><span class="bash"> sending a request and getting an acknowledgement</span><br>syncLimit=5<br><span class="hljs-meta">#</span><span class="bash"> the directory <span class="hljs-built_in">where</span> the snapshot is stored.</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-keyword">do</span> not use /tmp <span class="hljs-keyword">for</span> storage, /tmp here is just</span><br><span class="hljs-meta">#</span><span class="bash"> example sakes.</span><br>dataDir=/usr/zookeeper/zookeeper-3.4.10/zkdata<br><span class="hljs-meta">#</span><span class="bash"> the port at <span class="hljs-built_in">which</span> the clients will connect</span><br>clientPort=2181<br><span class="hljs-meta">#</span><span class="bash"> the maximum number of client connections.</span><br><span class="hljs-meta">#</span><span class="bash"> increase this <span class="hljs-keyword">if</span> you need to handle more clients</span><br><span class="hljs-meta">#</span><span class="bash">maxClientCnxns=60</span><br><span class="hljs-meta">#</span><span class="bash"></span><br><span class="bash"><span class="hljs-comment"># Be sure to read the maintenance section of the</span></span><br><span class="hljs-meta">#</span><span class="bash"> administrator guide before turning on autopurge.</span><br><span class="hljs-meta">#</span><span class="bash"></span><br><span class="bash"><span class="hljs-comment"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span></span><br><span class="hljs-meta">#</span><span class="bash"></span><br><span class="bash"><span class="hljs-comment"># The number of snapshots to retain in dataDir</span></span><br><span class="hljs-meta">#</span><span class="bash">autopurge.snapRetainCount=3</span><br><span class="hljs-meta">#</span><span class="bash"> Purge task interval <span class="hljs-keyword">in</span> hours</span><br><span class="hljs-meta">#</span><span class="bash"> Set to <span class="hljs-string">&quot;0&quot;</span> to <span class="hljs-built_in">disable</span> auto purge feature</span><br><span class="hljs-meta">#</span><span class="bash">autopurge.purgeInterval=1</span><br><br>dataLogDir=/usr/zookeeper/zookeeper-3.4.10/zkdatalog<br><br>server.1=master:2888:3888<br>server.2=slave1:2888:3888<br>server.3=slave2:2888:3888<br><br>:wq<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SHELL">mkdir /usr/zookeeper/zookeeper-3.4.10/zkdata   zkdatalog<br></code></pre></td></tr></table></figure><h2 id="修改myid"><a href="#修改myid" class="headerlink" title="修改myid"></a>修改myid</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo 1 &gt;&gt;myid<br>2 3 依次类推<br></code></pre></td></tr></table></figure><h2 id="启动zookeeper"><a href="#启动zookeeper" class="headerlink" title="启动zookeeper"></a>启动zookeeper</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">开启服务：zkServer.sh start<br>查看状态：zkServer.sh status<br></code></pre></td></tr></table></figure><h1 id="Hive"><a href="#Hive" class="headerlink" title="Hive"></a>Hive</h1><h2 id="slave2上安装hive"><a href="#slave2上安装hive" class="headerlink" title="slave2上安装hive"></a>slave2上安装hive</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install -y mysql-community-server<br><br>启动服务：<br>重载修改过的配置文件：systemctl daemon-reload<br>开启服务：systemctl start mysqld<br>开机自启：systemctl enable mysqld<br><br></code></pre></td></tr></table></figure><h2 id="登录MySQL"><a href="#登录MySQL" class="headerlink" title="登录MySQL"></a>登录MySQL</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">获取临时密码：grep &quot;temporary password&quot; /var/log/mysqld.log<br>k:qmdilTZ5Zz<br>登录mysql: mysql -uroot -p<br>手动输入密码，复制大概率出错<br></code></pre></td></tr></table></figure><h3 id="密码策略设置"><a href="#密码策略设置" class="headerlink" title="密码策略设置"></a>密码策略设置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">设置密码强度为低级：set global validate_password_policy=0;<br>设置密码长度：set global validate_password_length=4;<br>修改本地密码：alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;<br>退出：\q<br></code></pre></td></tr></table></figure><h3 id="设置远程登录："><a href="#设置远程登录：" class="headerlink" title="设置远程登录："></a>设置远程登录：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">以新密码登录：mysql -uroot -p123456<br>创建用户：create user &#x27;root&#x27;@&#x27;%&#x27;identified by&#x27;123456&#x27;;<br>允许远程连接：grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; with grant option;<br>刷新权限：flush privileges;<br>创建数据库：create database xxx;<br></code></pre></td></tr></table></figure><h2 id="数据仓库下载安装"><a href="#数据仓库下载安装" class="headerlink" title="数据仓库下载安装"></a>数据仓库下载安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">在master上 建立文件夹<br>mkdir -p /usr/hive &amp;&amp; cd /usr/hive<br><br>下载hive<br>wget http://47.92.249.178/bigdata/bigdata_tar/apache-hive-2.1.1-bin.tar.gz<br>解压：tar -zxvf /usr/hive/apache-hive-2.1.1-bin.tar.gz -C /usr/hive/<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>大数据</tag>
      
      <tag>环境搭建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LogicFlow与G6比较</title>
    <link href="/2021/08/05/G6%E4%B8%8ELogicFlow%E5%AF%B9%E6%AF%94/"/>
    <url>/2021/08/05/G6%E4%B8%8ELogicFlow%E5%AF%B9%E6%AF%94/</url>
    
    <content type="html"><![CDATA[<h1 id="使用感受"><a href="#使用感受" class="headerlink" title="使用感受"></a>使用感受</h1><ul><li><p>LogicFlow与G6相比较，LogicFlow的API比G6要多，通过操作API就可以实现绝大部分操作。</p></li><li><p>G6用canvas实现，LogicFlow用svg实现</p></li><li><p>LogicFlow相比G6更简单，更容易实现效果。</p></li><li><p>在增删数据对节点进行操作时</p><ul><li>G6可以动态分布结点，对节点位置进行平均分布</li><li>LogicFlow必须添加坐标，直接添加节点会使节点重叠</li></ul></li></ul><h1 id="视觉感受"><a href="#视觉感受" class="headerlink" title="视觉感受"></a>视觉感受</h1><ul><li><p>G6更适合做可视化，LogicFlow更适合做交互操作</p></li><li><p>数据量少的情况下，LogicFlow渲染要比G6快，数据量大时未测试。</p></li></ul><h1 id="文档方面"><a href="#文档方面" class="headerlink" title="文档方面"></a>文档方面</h1><ul><li>LogicFlow文档详细程度要高于G6</li><li>LogicFlow文档以Vue为模板，更适合对Vue的学习。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>G6踩坑</title>
    <link href="/2021/08/05/G6%E8%B8%A9%E5%9D%91/"/>
    <url>/2021/08/05/G6%E8%B8%A9%E5%9D%91/</url>
    
    <content type="html"><![CDATA[<p>在学习G6的过程中，遇到一些问题，随手记录下来</p><h2 id="点击一次add按钮-重新绘制图片"><a href="#点击一次add按钮-重新绘制图片" class="headerlink" title="点击一次add按钮 重新绘制图片"></a>点击一次add按钮 重新绘制图片</h2><h3 id="问题出现原因："><a href="#问题出现原因：" class="headerlink" title="问题出现原因："></a>问题出现原因：</h3><p>在draw()函数中声明的graph，当点击按钮调用add()时，为了调用到graph，写成了draw().graph</p><p>出现了调用add()时重新new一个graph对象出来，所以才会在同一个id容器内重新生成canvas的问题</p><h3 id="问题解决办法："><a href="#问题解决办法：" class="headerlink" title="问题解决办法："></a>问题解决办法：</h3><p>在setup中直接声明全局graph，在draw()中new对象。add()中调用全局的graph，这个已经在draw()中声明过，所以不需要重新new对象，可以直接拿来用，不会生成多个canvas</p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Django项目初始化</title>
    <link href="/2021/08/05/Django%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
    <url>/2021/08/05/Django%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h2 id="MySQL连接"><a href="#MySQL连接" class="headerlink" title="MySQL连接"></a>MySQL连接</h2><h3 id="SETTING-py"><a href="#SETTING-py" class="headerlink" title="SETTING.py"></a>SETTING.py</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs py">DATABASES = &#123;<br>    <span class="hljs-string">&#x27;default&#x27;</span>: &#123;<br>        <span class="hljs-string">&#x27;ENGINE&#x27;</span>: <span class="hljs-string">&#x27;django.db.backends.mysql&#x27;</span>,<br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;xxx&#x27;</span>,<br>        <span class="hljs-string">&#x27;HOST&#x27;</span>:<span class="hljs-string">&#x27;localhost&#x27;</span>,<br>        <span class="hljs-string">&#x27;PORT&#x27;</span>:<span class="hljs-string">&#x27;3306&#x27;</span>,<br>        <span class="hljs-string">&#x27;USER&#x27;</span>:<span class="hljs-string">&#x27;username&#x27;</span>,<br>        <span class="hljs-string">&#x27;PASSWORD&#x27;</span>:<span class="hljs-string">&#x27;password&#x27;</span><br>    &#125;<br>&#125;<br><br>LANGUAGE_CODE = <span class="hljs-string">&#x27;zh-hans&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="init-py"><a href="#init-py" class="headerlink" title="init.py"></a><em>init</em>.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pymysql<br>pymysql.install_as_MySQLdb()<br></code></pre></td></tr></table></figure><h2 id="数据库模型-models-py"><a href="#数据库模型-models-py" class="headerlink" title="数据库模型(models.py)"></a>数据库模型(models.py)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Django.db <span class="hljs-keyword">import</span> models<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">xxx</span>(<span class="hljs-params">models.Model</span>):</span><br>    a = models.AutoField(primary_key=<span class="hljs-literal">True</span>)<br>    ……<br>    <br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Meta</span>:</span><br>        db_table=<span class="hljs-string">&#x27;tableName&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs she">python manage.py makemigrations<br>python manage.py migrate<br></code></pre></td></tr></table></figure><h2 id="路由配置"><a href="#路由配置" class="headerlink" title="路由配置"></a>路由配置</h2><h3 id="app-urls-py-需自建"><a href="#app-urls-py-需自建" class="headerlink" title="app/urls.py(需自建)"></a>app/urls.py(需自建)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> App.views<br><span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> admin<br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path<br><br>urlpatterns = [<br>    path(<span class="hljs-string">&#x27;&#x27;</span>,App.views.function),<br>    path……<br>]<br><br></code></pre></td></tr></table></figure><h3 id="urls-py"><a href="#urls-py" class="headerlink" title="urls.py"></a>urls.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> admin<br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path, include<br><span class="hljs-keyword">from</span> App <span class="hljs-keyword">import</span> urls<br><br>urlpatterns = [<br>    path(<span class="hljs-string">&#x27;admin/&#x27;</span>, admin.site.urls),<br>    path(<span class="hljs-string">&#x27;&#x27;</span>, include(<span class="hljs-string">&#x27;App.urls&#x27;</span>))<br>]<br></code></pre></td></tr></table></figure><h1 id="跨域问题解决"><a href="#跨域问题解决" class="headerlink" title="跨域问题解决"></a>跨域问题解决</h1><p><a href="https://www.cnblogs.com/majingjie/p/11152052.html">https://www.cnblogs.com/majingjie/p/11152052.html</a></p><p>django.core.management.base.SystemCheckError: SystemCheckError: System check identified some issues:</p><p>ERRORS:<br>?: (corsheaders.E014) Origin ‘<a href="http://123.56.127.98/&#39;">http://123.56.127.98/&#39;</a> in CORS_ORIGIN_WHITELIST should not have path<br>?: (corsheaders.E014) Origin ‘<a href="http://onestep.wanqqq29.cn/&#39;">http://onestep.wanqqq29.cn/&#39;</a> in CORS_ORIGIN_WHITELIST should not have path</p>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>后端</tag>
      
      <tag>Django</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
